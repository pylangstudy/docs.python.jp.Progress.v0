DocumentUrl	Title	GitHubUrl
whatsnew/index.html	What’s New in Python	
whatsnew/3.6.html	What’s New In Python 3.6	
whatsnew/3.6.html#summary-release-highlights	概要 – リリースハイライト	
whatsnew/3.6.html#new-features	新しい機能	
whatsnew/3.6.html#pep-498-formatted-string-literals	PEP 498: フォーマット済み文字列リテラル	
whatsnew/3.6.html#pep-526-syntax-for-variable-annotations	PEP 526: 変数アノテーションのシンタックス	
whatsnew/3.6.html#pep-515-underscores-in-numeric-literals	PEP 515: 数値リテラル内のアンダースコア	
whatsnew/3.6.html#pep-525-asynchronous-generators	PEP 525: 非同期ジェネレータ	
whatsnew/3.6.html#pep-530-asynchronous-comprehensions	PEP 530: 非同期内包表記	
whatsnew/3.6.html#pep-487-simpler-customization-of-class-creation	PEP 487: Simpler customization of class creation	
whatsnew/3.6.html#pep-487-descriptor-protocol-enhancements	PEP 487: 記述子プロトコルの改善	
whatsnew/3.6.html#pep-519-adding-a-file-system-path-protocol	PEP 519: ファイルシステムパスプロトコルの追加	
whatsnew/3.6.html#pep-495-local-time-disambiguation	PEP 495: 地域時間の曖昧さ回避	
whatsnew/3.6.html#pep-529-change-windows-filesystem-encoding-to-utf-8	PEP 529: Windows ファイルシステムのエンコーディングを UTF-8 に変更	
whatsnew/3.6.html#pep-528-change-windows-console-encoding-to-utf-8	PEP 528: Windows コンソールのエンコーディングを UTF-8 に変更	
whatsnew/3.6.html#pep-520-preserving-class-attribute-definition-order	PEP 520: クラス属性の定義の順番を保持	
whatsnew/3.6.html#pep-468-preserving-keyword-argument-order	PEP 468: キーワード引数の順番の保持	
whatsnew/3.6.html#new-dict-implementation	新たなdict実装	
whatsnew/3.6.html#pep-523-adding-a-frame-evaluation-api-to-cpython	PEP 523: CPython にフレーム評価 API を追加	
whatsnew/3.6.html#pythonmalloc-environment-variable	PYTHONMALLOC 環境変数	
whatsnew/3.6.html#dtrace-and-systemtap-probing-support	DTrace and SystemTap probing support	
whatsnew/3.6.html#other-language-changes	その他の言語変更	
whatsnew/3.6.html#new-modules	新たなモジュール	
whatsnew/3.6.html#secrets	secrets	
whatsnew/3.6.html#improved-modules	改良されたモジュール	
whatsnew/3.6.html#array	array	
whatsnew/3.6.html#ast	ast	
whatsnew/3.6.html#asyncio	asyncio	
whatsnew/3.6.html#binascii	binascii	
whatsnew/3.6.html#cmath	cmath	
whatsnew/3.6.html#collections	collections	
whatsnew/3.6.html#concurrent-futures	concurrent.futures	
whatsnew/3.6.html#contextlib	contextlib	
whatsnew/3.6.html#datetime	datetime	
whatsnew/3.6.html#decimal	decimal	
whatsnew/3.6.html#distutils	distutils	
whatsnew/3.6.html#email	email	
whatsnew/3.6.html#encodings	エンコーディング	
whatsnew/3.6.html#enum	enum	
whatsnew/3.6.html#faulthandler	faulthandler	
whatsnew/3.6.html#fileinput	fileinput	
whatsnew/3.6.html#hashlib	hashlib	
whatsnew/3.6.html#http-client	http.client	
whatsnew/3.6.html#idlelib-and-idle	idlelib と IDLE	
whatsnew/3.6.html#importlib	importlib	
whatsnew/3.6.html#inspect	inspect	
whatsnew/3.6.html#json	json	
whatsnew/3.6.html#logging	logging	
whatsnew/3.6.html#math	math	
whatsnew/3.6.html#multiprocessing	multiprocessing	
whatsnew/3.6.html#os	os	
whatsnew/3.6.html#pathlib	pathlib	
whatsnew/3.6.html#pdb	pdb	
whatsnew/3.6.html#pickle	pickle	
whatsnew/3.6.html#pickletools	pickletools	
whatsnew/3.6.html#pydoc	pydoc	
whatsnew/3.6.html#random	random	
whatsnew/3.6.html#re	re	
whatsnew/3.6.html#readline	readline	
whatsnew/3.6.html#rlcompleter	rlcompleter	
whatsnew/3.6.html#shlex	shlex	
whatsnew/3.6.html#site	site	
whatsnew/3.6.html#sqlite3	sqlite3	
whatsnew/3.6.html#socket	socket	
whatsnew/3.6.html#socketserver	socketserver	
whatsnew/3.6.html#ssl	ssl	
whatsnew/3.6.html#statistics	statistics	
whatsnew/3.6.html#struct	struct	
whatsnew/3.6.html#subprocess	subprocess	
whatsnew/3.6.html#sys	sys	
whatsnew/3.6.html#telnetlib	telnetlib	
whatsnew/3.6.html#time	time	
whatsnew/3.6.html#timeit	timeit	
whatsnew/3.6.html#tkinter	tkinter	
whatsnew/3.6.html#traceback	traceback	
whatsnew/3.6.html#tracemalloc	tracemalloc	
whatsnew/3.6.html#typing	typing	
whatsnew/3.6.html#unicodedata	unicodedata	
whatsnew/3.6.html#unittest-mock	unittest.mock	
whatsnew/3.6.html#urllib-request	urllib.request	
whatsnew/3.6.html#urllib-robotparser	urllib.robotparser	
whatsnew/3.6.html#venv	venv	
whatsnew/3.6.html#warnings	warnings	
whatsnew/3.6.html#winreg	winreg	
whatsnew/3.6.html#winsound	winsound	
whatsnew/3.6.html#xmlrpc-client	xmlrpc.client	
whatsnew/3.6.html#zipfile	zipfile	
whatsnew/3.6.html#zlib	zlib	
whatsnew/3.6.html#optimizations	最適化	
whatsnew/3.6.html#build-and-c-api-changes	ビルドならびに C API の変更	
whatsnew/3.6.html#other-improvements	その他の改善	
whatsnew/3.6.html#deprecated	非推奨	
whatsnew/3.6.html#new-keywords	新たなキーワード	
whatsnew/3.6.html#deprecated-python-behavior	非推奨の Python 挙動	
whatsnew/3.6.html#deprecated-python-modules-functions-and-methods	非推奨の Python モジュール、関数、メソッド	
whatsnew/3.6.html#asynchat	asynchat	
whatsnew/3.6.html#asyncore	asyncore	
whatsnew/3.6.html#dbm	dbm	
whatsnew/3.6.html#id2	distutils	
whatsnew/3.6.html#grp	grp	
whatsnew/3.6.html#id3	importlib	
whatsnew/3.6.html#id4	os	
whatsnew/3.6.html#id5	re	
whatsnew/3.6.html#id6	ssl	
whatsnew/3.6.html#id7	tkinter	
whatsnew/3.6.html#id8	venv	
whatsnew/3.6.html#deprecated-functions-and-types-of-the-c-api	C API の非推奨の関数ならびに型	
whatsnew/3.6.html#deprecated-build-options	非推奨のビルドオプション	
whatsnew/3.6.html#removed	削除	
whatsnew/3.6.html#api-and-feature-removals	API と機能の削除	
whatsnew/3.6.html#porting-to-python-3-6	Python 3.6 への移植	
whatsnew/3.6.html#changes-in-python-command-behavior	‘python’ コマンドの挙動の変更	
whatsnew/3.6.html#changes-in-the-python-api	Python API の変更	
whatsnew/3.6.html#changes-in-the-c-api	C API の変更	
whatsnew/3.6.html#cpython-bytecode-changes	CPython バイトコードの変更	
whatsnew/3.5.html	What’s New In Python 3.5	
whatsnew/3.5.html#summary-release-highlights	概要 – リリースハイライト	
whatsnew/3.5.html#new-features	新しい機能	
whatsnew/3.5.html#pep-492-coroutines-with-async-and-await-syntax	PEP 492 - コルーチン、 async と await 構文	
whatsnew/3.5.html#pep-465-a-dedicated-infix-operator-for-matrix-multiplication	PEP 465 - 行列の乗算専用の中置演算子	
whatsnew/3.5.html#pep-448-additional-unpacking-generalizations	PEP 448 - 追加可能なアンパッキングへの一般化	
whatsnew/3.5.html#pep-461-percent-formatting-support-for-bytes-and-bytearray	PEP 461 - bytes および bytearray のパーセント書式化サポート	
whatsnew/3.5.html#pep-484-type-hints	PEP 484 - 型ヒント	
whatsnew/3.5.html#pep-471-os-scandir-function-a-better-and-faster-directory-iterator	PEP 471 - os.scandir() 関数 – より良く、速いディレクトリイテレータ	
whatsnew/3.5.html#pep-475-retry-system-calls-failing-with-eintr	PEP 475: EINTR で失敗したシステムコールの再試行	
whatsnew/3.5.html#pep-479-change-stopiteration-handling-inside-generators	PEP 479: ジェネレータ内の StopIteration の処理の変更	
whatsnew/3.5.html#pep-485-a-function-for-testing-approximate-equality	PEP 485: 近似的に等しいことを調べる関数	
whatsnew/3.5.html#pep-486-make-the-python-launcher-aware-of-virtual-environments	PEP 486: Python ランチャーが仮想環境を認識する	
whatsnew/3.5.html#pep-488-elimination-of-pyo-files	PEP 488: PYO ファイルの廃止	
whatsnew/3.5.html#pep-489-multi-phase-extension-module-initialization	PEP 489: 拡張モジュールの多段階初期化	
whatsnew/3.5.html#other-language-changes	その他の言語変更	
whatsnew/3.5.html#new-modules	新たなモジュール	
whatsnew/3.5.html#typing	typing	
whatsnew/3.5.html#zipapp	zipapp	
whatsnew/3.5.html#improved-modules	改良されたモジュール	
whatsnew/3.5.html#argparse	argparse	
whatsnew/3.5.html#asyncio	asyncio	
whatsnew/3.5.html#bz2	bz2	
whatsnew/3.5.html#cgi	cgi	
whatsnew/3.5.html#cmath	cmath	
whatsnew/3.5.html#code	コード	
whatsnew/3.5.html#collections	collections	
whatsnew/3.5.html#collections-abc	collections.abc	
whatsnew/3.5.html#compileall	compileall	
whatsnew/3.5.html#concurrent-futures	concurrent.futures	
whatsnew/3.5.html#configparser	configparser	
whatsnew/3.5.html#contextlib	contextlib	
whatsnew/3.5.html#csv	csv	
whatsnew/3.5.html#curses	curses	
whatsnew/3.5.html#dbm	dbm	
whatsnew/3.5.html#difflib	difflib	
whatsnew/3.5.html#distutils	distutils	
whatsnew/3.5.html#doctest	doctest	
whatsnew/3.5.html#email	email	
whatsnew/3.5.html#enum	enum	
whatsnew/3.5.html#faulthandler	faulthandler	
whatsnew/3.5.html#functools	functools	
whatsnew/3.5.html#glob	glob	
whatsnew/3.5.html#gzip	gzip	
whatsnew/3.5.html#heapq	heapq	
whatsnew/3.5.html#http	http	
whatsnew/3.5.html#http-client	http.client	
whatsnew/3.5.html#idlelib-and-idle	idlelib と IDLE	
whatsnew/3.5.html#imaplib	imaplib	
whatsnew/3.5.html#imghdr	imghdr	
whatsnew/3.5.html#importlib	importlib	
whatsnew/3.5.html#inspect	inspect	
whatsnew/3.5.html#io	io	
whatsnew/3.5.html#ipaddress	ipaddress	
whatsnew/3.5.html#json	json	
whatsnew/3.5.html#linecache	linecache	
whatsnew/3.5.html#locale	locale	
whatsnew/3.5.html#logging	logging	
whatsnew/3.5.html#lzma	lzma	
whatsnew/3.5.html#math	math	
whatsnew/3.5.html#multiprocessing	multiprocessing	
whatsnew/3.5.html#operator	operator	
whatsnew/3.5.html#os	os	
whatsnew/3.5.html#pathlib	pathlib	
whatsnew/3.5.html#pickle	pickle	
whatsnew/3.5.html#poplib	poplib	
whatsnew/3.5.html#re	re	
whatsnew/3.5.html#readline	readline	
whatsnew/3.5.html#selectors	selectors	
whatsnew/3.5.html#shutil	shutil	
whatsnew/3.5.html#signal	signal	
whatsnew/3.5.html#smtpd	smtpd	
whatsnew/3.5.html#smtplib	smtplib	
whatsnew/3.5.html#sndhdr	sndhdr	
whatsnew/3.5.html#socket	socket	
whatsnew/3.5.html#ssl	ssl	
whatsnew/3.5.html#memory-bio-support	メモリ BIO サポート	
whatsnew/3.5.html#application-layer-protocol-negotiation-support	Application-Layer Protocol Negotiation Support	
whatsnew/3.5.html#other-changes	その他の変更	
whatsnew/3.5.html#sqlite3	sqlite3	
whatsnew/3.5.html#subprocess	subprocess	
whatsnew/3.5.html#sys	sys	
whatsnew/3.5.html#sysconfig	sysconfig	
whatsnew/3.5.html#tarfile	tarfile	
whatsnew/3.5.html#threading	threading	
whatsnew/3.5.html#time	time	
whatsnew/3.5.html#timeit	timeit	
whatsnew/3.5.html#tkinter	tkinter	
whatsnew/3.5.html#traceback	traceback	
whatsnew/3.5.html#types	types	
whatsnew/3.5.html#unicodedata	unicodedata	
whatsnew/3.5.html#unittest	unittest	
whatsnew/3.5.html#unittest-mock	unittest.mock	
whatsnew/3.5.html#urllib	urllib	
whatsnew/3.5.html#wsgiref	wsgiref	
whatsnew/3.5.html#xmlrpc	xmlrpc	
whatsnew/3.5.html#xml-sax	xml.sax	
whatsnew/3.5.html#zipfile	zipfile	
whatsnew/3.5.html#other-module-level-changes	その他のモジュールレベルの変更	
whatsnew/3.5.html#optimizations	最適化	
whatsnew/3.5.html#build-and-c-api-changes	ビルドならびに C API の変更	
whatsnew/3.5.html#deprecated	非推奨	
whatsnew/3.5.html#new-keywords	新たなキーワード	
whatsnew/3.5.html#deprecated-python-behavior	非推奨の Python の挙動	
whatsnew/3.5.html#unsupported-operating-systems	サポートされないオペレーティングシステム	
whatsnew/3.5.html#deprecated-python-modules-functions-and-methods	非推奨の Python モジュール、関数、メソッド	
whatsnew/3.5.html#removed	削除	
whatsnew/3.5.html#api-and-feature-removals	API と機能の削除	
whatsnew/3.5.html#porting-to-python-3-5	Python 3.5 への移植	
whatsnew/3.5.html#changes-in-python-behavior	Python の挙動の変更	
whatsnew/3.5.html#changes-in-the-python-api	Python API の変更	
whatsnew/3.5.html#changes-in-the-c-api	C API の変更	
whatsnew/3.4.html	What’s New In Python 3.4	
whatsnew/3.4.html#summary-release-highlights	概要 – リリースハイライト	
whatsnew/3.4.html#new-features	新しい機能	
whatsnew/3.4.html#pep-453-explicit-bootstrapping-of-pip-in-python-installations	PEP 453: Python インストール時の PIP の明示的なブートストラッピング	
whatsnew/3.4.html#bootstrapping-pip-by-default	デフォルトでの pip のブートストラッピング	
whatsnew/3.4.html#documentation-changes	ドキュメントの変更	
whatsnew/3.4.html#pep-446-newly-created-file-descriptors-are-non-inheritable	PEP 446: 新規作成されたファイル記述子は継承不可	
whatsnew/3.4.html#improvements-to-codec-handling	Codec 処理の改良	
whatsnew/3.4.html#pep-451-a-modulespec-type-for-the-import-system	PEP 451: インポートシステムのための ModuleSpec 型	
whatsnew/3.4.html#other-language-changes	その他の言語変更	
whatsnew/3.4.html#new-modules	新たなモジュール	
whatsnew/3.4.html#asyncio	asyncio	
whatsnew/3.4.html#ensurepip	ensurepip	
whatsnew/3.4.html#enum	enum	
whatsnew/3.4.html#pathlib	pathlib	
whatsnew/3.4.html#selectors	selectors	
whatsnew/3.4.html#statistics	statistics	
whatsnew/3.4.html#tracemalloc	tracemalloc	
whatsnew/3.4.html#improved-modules	改良されたモジュール	
whatsnew/3.4.html#abc	abc	
whatsnew/3.4.html#aifc	aifc	
whatsnew/3.4.html#argparse	argparse	
whatsnew/3.4.html#audioop	audioop	
whatsnew/3.4.html#base64	base64	
whatsnew/3.4.html#collections	collections	
whatsnew/3.4.html#colorsys	colorsys	
whatsnew/3.4.html#contextlib	contextlib	
whatsnew/3.4.html#dbm	dbm	
whatsnew/3.4.html#dis	dis	
whatsnew/3.4.html#doctest	doctest	
whatsnew/3.4.html#email	email	
whatsnew/3.4.html#filecmp	filecmp	
whatsnew/3.4.html#functools	functools	
whatsnew/3.4.html#gc	gc	
whatsnew/3.4.html#glob	glob	
whatsnew/3.4.html#hashlib	hashlib	
whatsnew/3.4.html#hmac	hmac	
whatsnew/3.4.html#html	html	
whatsnew/3.4.html#http	http	
whatsnew/3.4.html#idlelib-and-idle	idlelib と IDLE	
whatsnew/3.4.html#importlib	importlib	
whatsnew/3.4.html#inspect	inspect	
whatsnew/3.4.html#ipaddress	ipaddress	
whatsnew/3.4.html#logging	logging	
whatsnew/3.4.html#marshal	marshal	
whatsnew/3.4.html#mmap	mmap	
whatsnew/3.4.html#multiprocessing	multiprocessing	
whatsnew/3.4.html#operator	operator	
whatsnew/3.4.html#os	os	
whatsnew/3.4.html#pdb	pdb	
whatsnew/3.4.html#pickle	pickle	
whatsnew/3.4.html#plistlib	plistlib	
whatsnew/3.4.html#poplib	poplib	
whatsnew/3.4.html#pprint	pprint	
whatsnew/3.4.html#pty	pty	
whatsnew/3.4.html#pydoc	pydoc	
whatsnew/3.4.html#re	re	
whatsnew/3.4.html#resource	resource	
whatsnew/3.4.html#select	select	
whatsnew/3.4.html#shelve	shelve	
whatsnew/3.4.html#shutil	shutil	
whatsnew/3.4.html#smtpd	smtpd	
whatsnew/3.4.html#smtplib	smtplib	
whatsnew/3.4.html#socket	socket	
whatsnew/3.4.html#sqlite3	sqlite3	
whatsnew/3.4.html#ssl	ssl	
whatsnew/3.4.html#stat	stat	
whatsnew/3.4.html#struct	struct	
whatsnew/3.4.html#subprocess	subprocess	
whatsnew/3.4.html#sunau	sunau	
whatsnew/3.4.html#sys	sys	
whatsnew/3.4.html#tarfile	tarfile	
whatsnew/3.4.html#textwrap	textwrap	
whatsnew/3.4.html#threading	threading	
whatsnew/3.4.html#traceback	traceback	
whatsnew/3.4.html#types	types	
whatsnew/3.4.html#urllib	urllib	
whatsnew/3.4.html#unittest	unittest	
whatsnew/3.4.html#venv	venv	
whatsnew/3.4.html#wave	wave	
whatsnew/3.4.html#weakref	weakref	
whatsnew/3.4.html#xml-etree	xml.etree	
whatsnew/3.4.html#zipfile	zipfile	
whatsnew/3.4.html#cpython-implementation-changes	CPython の実装の変更	
whatsnew/3.4.html#pep-445-customization-of-cpython-memory-allocators	PEP 445: CPython のメモリアロケータのカスタマイズ	
whatsnew/3.4.html#pep-442-safe-object-finalization	PEP 442: オブジェクトの安全なファイナライゼーション	
whatsnew/3.4.html#pep-456-secure-and-interchangeable-hash-algorithm	PEP 456: 安全で取り換え可能なハッシュアルゴリズム	
whatsnew/3.4.html#pep-436-argument-clinic	PEP 436: Argument Clinic	
whatsnew/3.4.html#other-build-and-c-api-changes	その他のビルド並びに C API の変更	
whatsnew/3.4.html#other-improvements	その他の改善	
whatsnew/3.4.html#significant-optimizations	大幅な最適化	
whatsnew/3.4.html#deprecated	非推奨	
whatsnew/3.4.html#deprecations-in-the-python-api	Python API の非推奨項目	
whatsnew/3.4.html#deprecated-features	非推奨の機能	
whatsnew/3.4.html#removed	削除	
whatsnew/3.4.html#operating-systems-no-longer-supported	サポートされなくなったオペレーティングシステム	
whatsnew/3.4.html#api-and-feature-removals	API と機能の削除	
whatsnew/3.4.html#code-cleanups	コードの整理	
whatsnew/3.4.html#porting-to-python-3-4	Python 3.4 への移植	
whatsnew/3.4.html#changes-in-python-command-behavior	‘python’ コマンドの挙動の変更	
whatsnew/3.4.html#changes-in-the-python-api	Python API の変更	
whatsnew/3.4.html#changes-in-the-c-api	C API の変更	
whatsnew/3.4.html#changed-in-3-4-3	3.4.3 の変更	
whatsnew/3.4.html#pep-476-enabling-certificate-verification-by-default-for-stdlib-http-clients	PEP 476: stdlib http クライアントが証明書の検証を行うのをデフォルトで有効化	
whatsnew/3.3.html	What’s New In Python 3.3	
whatsnew/3.3.html#summary-release-highlights	概要 – リリースハイライト	
whatsnew/3.3.html#pep-405-virtual-environments	PEP 405: 仮想環境	
whatsnew/3.3.html#pep-420-implicit-namespace-packages	PEP 420: 暗黙的な名前空間パッケージ	
whatsnew/3.3.html#pep-3118-new-memoryview-implementation-and-buffer-protocol-documentation	PEP 3118: 新たなメモリビューの実装とバッファプロトコルのドキュメント	
whatsnew/3.3.html#features	フィーチャー	
whatsnew/3.3.html#api-changes	API の変更	
whatsnew/3.3.html#pep-393-flexible-string-representation	PEP 393: 文字列の柔軟な表現	
whatsnew/3.3.html#functionality	機能性	
whatsnew/3.3.html#performance-and-resource-usage	性能およびリソース使用量	
whatsnew/3.3.html#pep-397-python-launcher-for-windows	PEP 397: Windows の Python ランチャ	
whatsnew/3.3.html#pep-3151-reworking-the-os-and-io-exception-hierarchy	PEP 3151: OS および IO 例外階層の手直し	
whatsnew/3.3.html#pep-380-syntax-for-delegating-to-a-subgenerator	PEP 380: サブジェネレータへの委譲構文	
whatsnew/3.3.html#pep-409-suppressing-exception-context	PEP 409: 例外コンテクストの抑制	
whatsnew/3.3.html#pep-414-explicit-unicode-literals	PEP 414: 明示的なユニコードリテラル	
whatsnew/3.3.html#pep-3155-qualified-name-for-classes-and-functions	PEP 3155: クラスと関数の正規名	
whatsnew/3.3.html#pep-412-key-sharing-dictionary	PEP 412: キー共有辞書	
whatsnew/3.3.html#pep-362-function-signature-object	PEP 362: 関数シグニチャオブジェクト	
whatsnew/3.3.html#pep-421-adding-sys-implementation	PEP 421: sys.implementation の追加	
whatsnew/3.3.html#simplenamespace	SimpleNamespace	
whatsnew/3.3.html#using-importlib-as-the-implementation-of-import	インポート実装としての importlib の使用	
whatsnew/3.3.html#new-apis	新たな API	
whatsnew/3.3.html#visible-changes	目に見える変化	
whatsnew/3.3.html#other-language-changes	その他の言語変更	
whatsnew/3.3.html#a-finer-grained-import-lock	細粒度のインポートロック	
whatsnew/3.3.html#builtin-functions-and-types	組み込みの関数と型	
whatsnew/3.3.html#new-modules	新たなモジュール	
whatsnew/3.3.html#faulthandler	faulthandler	
whatsnew/3.3.html#ipaddress	ipaddress	
whatsnew/3.3.html#lzma	lzma	
whatsnew/3.3.html#improved-modules	改良されたモジュール	
whatsnew/3.3.html#abc	abc	
whatsnew/3.3.html#array	array	
whatsnew/3.3.html#base64	base64	
whatsnew/3.3.html#binascii	binascii	
whatsnew/3.3.html#bz2	bz2	
whatsnew/3.3.html#codecs	codecs	
whatsnew/3.3.html#collections	collections	
whatsnew/3.3.html#contextlib	contextlib	
whatsnew/3.3.html#crypt	crypt	
whatsnew/3.3.html#curses	curses	
whatsnew/3.3.html#datetime	datetime	
whatsnew/3.3.html#decimal	decimal	
whatsnew/3.3.html#id1	フィーチャー	
whatsnew/3.3.html#id2	API の変更	
whatsnew/3.3.html#email	email	
whatsnew/3.3.html#policy-framework	ポリシーフレームワーク	
whatsnew/3.3.html#provisional-policy-with-new-header-api	新規ヘッダ API を伴った暫定ポリシー	
whatsnew/3.3.html#other-api-changes	その他のAPIの変更	
whatsnew/3.3.html#ftplib	ftplib	
whatsnew/3.3.html#functools	functools	
whatsnew/3.3.html#gc	gc	
whatsnew/3.3.html#hmac	hmac	
whatsnew/3.3.html#http	http	
whatsnew/3.3.html#html	html	
whatsnew/3.3.html#imaplib	imaplib	
whatsnew/3.3.html#inspect	inspect	
whatsnew/3.3.html#io	io	
whatsnew/3.3.html#itertools	itertools	
whatsnew/3.3.html#logging	logging	
whatsnew/3.3.html#math	math	
whatsnew/3.3.html#mmap	mmap	
whatsnew/3.3.html#multiprocessing	multiprocessing	
whatsnew/3.3.html#nntplib	nntplib	
whatsnew/3.3.html#os	os	
whatsnew/3.3.html#pdb	pdb	
whatsnew/3.3.html#pickle	pickle	
whatsnew/3.3.html#pydoc	pydoc	
whatsnew/3.3.html#re	re	
whatsnew/3.3.html#sched	sched	
whatsnew/3.3.html#select	select	
whatsnew/3.3.html#shlex	shlex	
whatsnew/3.3.html#shutil	shutil	
whatsnew/3.3.html#signal	signal	
whatsnew/3.3.html#smtpd	smtpd	
whatsnew/3.3.html#smtplib	smtplib	
whatsnew/3.3.html#socket	socket	
whatsnew/3.3.html#socketserver	socketserver	
whatsnew/3.3.html#sqlite3	sqlite3	
whatsnew/3.3.html#ssl	ssl	
whatsnew/3.3.html#stat	stat	
whatsnew/3.3.html#struct	struct	
whatsnew/3.3.html#subprocess	subprocess	
whatsnew/3.3.html#sys	sys	
whatsnew/3.3.html#tarfile	tarfile	
whatsnew/3.3.html#tempfile	tempfile	
whatsnew/3.3.html#textwrap	textwrap	
whatsnew/3.3.html#threading	threading	
whatsnew/3.3.html#time	time	
whatsnew/3.3.html#types	types	
whatsnew/3.3.html#unittest	unittest	
whatsnew/3.3.html#urllib	urllib	
whatsnew/3.3.html#webbrowser	webbrowser	
whatsnew/3.3.html#xml-etree-elementtree	xml.etree.ElementTree	
whatsnew/3.3.html#zlib	zlib	
whatsnew/3.3.html#optimizations	最適化	
whatsnew/3.3.html#build-and-c-api-changes	ビルドならびに C API の変更	
whatsnew/3.3.html#deprecated	非推奨	
whatsnew/3.3.html#unsupported-operating-systems	サポートされないオペレーティングシステム	
whatsnew/3.3.html#deprecated-python-modules-functions-and-methods	非推奨の Python モジュール、関数、メソッド	
whatsnew/3.3.html#deprecated-functions-and-types-of-the-c-api	C API の非推奨の関数ならびに型	
whatsnew/3.3.html#deprecated-features	非推奨の機能	
whatsnew/3.3.html#porting-to-python-3-3	Python 3.3 への移植	
whatsnew/3.3.html#porting-python-code	Python コードの移植	
whatsnew/3.3.html#porting-c-code	C コードの移植	
whatsnew/3.3.html#building-c-extensions	C 拡張のビルド	
whatsnew/3.3.html#command-line-switch-changes	コマンドラインスイッチの変更	
whatsnew/3.2.html	What’s New In Python 3.2	
whatsnew/3.2.html#pep-384-defining-a-stable-abi	PEP 384: 安定 ABI の定義	
whatsnew/3.2.html#pep-389-argparse-command-line-parsing-module	PEP 389: argparse コマンドライン解析モジュール	
whatsnew/3.2.html#pep-391-dictionary-based-configuration-for-logging	PEP 391:  logging の辞書ベースの設定	
whatsnew/3.2.html#pep-3148-the-concurrent-futures-module	PEP 3148:concurrent.futuresモジュール	
whatsnew/3.2.html#pep-3147-pyc-repository-directories	PEP 3147:  PYC リポジトリーディレクトリ	
whatsnew/3.2.html#pep-3149-abi-version-tagged-so-files	PEP 3149: ABI バージョンでタグ付けされた .so ファイル	
whatsnew/3.2.html#pep-3333-python-web-server-gateway-interface-v1-0-1	PEP 3333: Python Web Server Gateway Interface v1.0.1	
whatsnew/3.2.html#other-language-changes	その他の言語変更	
whatsnew/3.2.html#new-improved-and-deprecated-modules	新たなモジュール、改良されたモジュール、非推奨のモジュール	
whatsnew/3.2.html#email	email	
whatsnew/3.2.html#elementtree	elementtree	
whatsnew/3.2.html#functools	functools	
whatsnew/3.2.html#itertools	itertools	
whatsnew/3.2.html#collections	collections	
whatsnew/3.2.html#threading	threading	
whatsnew/3.2.html#datetime-and-time	datetime と time	
whatsnew/3.2.html#math	math	
whatsnew/3.2.html#abc	abc	
whatsnew/3.2.html#io	io	
whatsnew/3.2.html#reprlib	reprlib	
whatsnew/3.2.html#logging	logging	
whatsnew/3.2.html#csv	csv	
whatsnew/3.2.html#contextlib	contextlib	
whatsnew/3.2.html#decimal-and-fractions	decimal と fractions	
whatsnew/3.2.html#ftp	ftp	
whatsnew/3.2.html#popen	popen	
whatsnew/3.2.html#select	select	
whatsnew/3.2.html#gzip-and-zipfile	gzip と zipfile	
whatsnew/3.2.html#tarfile	tarfile	
whatsnew/3.2.html#hashlib	hashlib	
whatsnew/3.2.html#ast	ast	
whatsnew/3.2.html#os	os	
whatsnew/3.2.html#shutil	shutil	
whatsnew/3.2.html#sqlite3	sqlite3	
whatsnew/3.2.html#html	html	
whatsnew/3.2.html#socket	socket	
whatsnew/3.2.html#ssl	ssl	
whatsnew/3.2.html#nntp	nntp	
whatsnew/3.2.html#certificates	certificates	
whatsnew/3.2.html#imaplib	imaplib	
whatsnew/3.2.html#http-client	http.client	
whatsnew/3.2.html#unittest	unittest	
whatsnew/3.2.html#random	random	
whatsnew/3.2.html#poplib	poplib	
whatsnew/3.2.html#asyncore	asyncore	
whatsnew/3.2.html#tempfile	tempfile	
whatsnew/3.2.html#inspect	inspect	
whatsnew/3.2.html#pydoc	pydoc	
whatsnew/3.2.html#dis	dis	
whatsnew/3.2.html#dbm	dbm	
whatsnew/3.2.html#ctypes	ctypes	
whatsnew/3.2.html#site	site	
whatsnew/3.2.html#sysconfig	sysconfig	
whatsnew/3.2.html#pdb	pdb	
whatsnew/3.2.html#configparser	configparser	
whatsnew/3.2.html#urllib-parse	urllib.parse	
whatsnew/3.2.html#mailbox	mailbox	
whatsnew/3.2.html#turtledemo	turtledemo	
whatsnew/3.2.html#multi-threading	マルチスレッディング	
whatsnew/3.2.html#optimizations	最適化	
whatsnew/3.2.html#unicode	Unicode 文字列型	
whatsnew/3.2.html#codecs	Codecs	
whatsnew/3.2.html#documentation	ドキュメント	
whatsnew/3.2.html#idle	IDLE	
whatsnew/3.2.html#code-repository	コードリポジトリ	
whatsnew/3.2.html#build-and-c-api-changes	ビルドならびに C API の変更	
whatsnew/3.2.html#porting-to-python-3-2	Python 3.2 への移植	
whatsnew/3.1.html	What’s New In Python 3.1	
whatsnew/3.1.html#pep-372-ordered-dictionaries	PEP 372: 順序付き辞書	
whatsnew/3.1.html#pep-378-format-specifier-for-thousands-separator	PEP 378: 1000区切りのための書式指定子	
whatsnew/3.1.html#other-language-changes	その他の言語変更	
whatsnew/3.1.html#new-improved-and-deprecated-modules	新たなモジュール、改良されたモジュール、非推奨のモジュール	
whatsnew/3.1.html#optimizations	最適化	
whatsnew/3.1.html#idle	IDLE	
whatsnew/3.1.html#build-and-c-api-changes	ビルドならびに C API の変更	
whatsnew/3.1.html#porting-to-python-3-1	Python 3.1 への移植	
whatsnew/3.0.html	What’s New In Python 3.0	
whatsnew/3.0.html#common-stumbling-blocks	よくある悩みの種	
whatsnew/3.0.html#print-is-a-function	print関数	
whatsnew/3.0.html#views-and-iterators-instead-of-lists	リストからビューおよびイテレータへ	
whatsnew/3.0.html#ordering-comparisons	順序比較	
whatsnew/3.0.html#integers	整数	
whatsnew/3.0.html#text-vs-data-instead-of-unicode-vs-8-bit	Unicode 対 8 ビット、ではなく、テキスト対データに	
whatsnew/3.0.html#overview-of-syntax-changes	構文の変更の概要	
whatsnew/3.0.html#new-syntax	新たな構文	
whatsnew/3.0.html#changed-syntax	変更された構文	
whatsnew/3.0.html#removed-syntax	削除された操作	
whatsnew/3.0.html#changes-already-present-in-python-2-6	Python 2.6 で既にあった変更	
whatsnew/3.0.html#library-changes	ライブラリの変更	
whatsnew/3.0.html#pep-3101-a-new-approach-to-string-formatting	PEP 3101: 文字列整形の新たなアプローチ	
whatsnew/3.0.html#changes-to-exceptions	例外に関する変更	
whatsnew/3.0.html#miscellaneous-other-changes	その他の変更	
whatsnew/3.0.html#operators-and-special-methods	演算子と特殊メソッド	
whatsnew/3.0.html#builtins	組み込み	
whatsnew/3.0.html#build-and-c-api-changes	ビルドならびに C API の変更	
whatsnew/3.0.html#performance	性能	
whatsnew/3.0.html#porting-to-python-3-0	Python 3.0 への移植	
whatsnew/2.7.html	What’s New in Python 2.7	
whatsnew/2.7.html#the-future-for-python-2-x	Python 2.x の今後	
whatsnew/2.7.html#changes-to-the-handling-of-deprecation-warnings	Deprecation Warnings の扱いの変更	
whatsnew/2.7.html#python-3-1-features	Python 3.1 の機能	
whatsnew/2.7.html#pep-372-adding-an-ordered-dictionary-to-collections	PEP 372: collections に順序付き辞書を追加	
whatsnew/2.7.html#pep-378-format-specifier-for-thousands-separator	PEP 378: 1000区切りのための書式指定子	
whatsnew/2.7.html#pep-389-the-argparse-module-for-parsing-command-lines	PEP 389: コマンドライン解析のための argparse モジュール	
whatsnew/2.7.html#pep-391-dictionary-based-configuration-for-logging	PEP 391: logging の辞書ベースの設定	
whatsnew/2.7.html#pep-3106-dictionary-views	PEP 3106: 辞書 View	
whatsnew/2.7.html#pep-3137-the-memoryview-object	PEP 3137: memoryview オブジェクト	
whatsnew/2.7.html#other-language-changes	その他の言語変更	
whatsnew/2.7.html#interpreter-changes	インタプリタの変更	
whatsnew/2.7.html#optimizations	最適化	
whatsnew/2.7.html#new-and-improved-modules	新しいモジュールと改良されたモジュール	
whatsnew/2.7.html#new-module-importlib	新しいモジュール: importlib	
whatsnew/2.7.html#new-module-sysconfig	新しいモジュール: sysconfig	
whatsnew/2.7.html#ttk-themed-widgets-for-tk	ttk: Tk のテーマ付きウィジェット	
whatsnew/2.7.html#updated-module-unittest	更新されたモジュール: unittest	
whatsnew/2.7.html#updated-module-elementtree-1-3	更新されたモジュール: ElementTree 1.3	
whatsnew/2.7.html#build-and-c-api-changes	ビルドならびに C API の変更	
whatsnew/2.7.html#capsules	カプセル	
whatsnew/2.7.html#port-specific-changes-windows	ポート特有の変更: Windows	
whatsnew/2.7.html#port-specific-changes-mac-os-x	ポート特有の変更: Mac OS X	
whatsnew/2.7.html#port-specific-changes-freebsd	ポート特有の変更: FreeBSD	
whatsnew/2.7.html#other-changes-and-fixes	その他の変更と修正	
whatsnew/2.7.html#porting-to-python-2-7	Python 2.7 への移植	
whatsnew/2.7.html#new-features-added-to-python-2-7-maintenance-releases	Python 2.7 メンテナンスリリースで追加された新機能	
whatsnew/2.7.html#pep-434-idle-enhancement-exception-for-all-branches	PEP 434: IDLE 拡張についての全てのブランチにおける例外的な扱い	
whatsnew/2.7.html#pep-466-network-security-enhancements-for-python-2-7	PEP 466: Python 2.7 のためのネットワークセキュリティ拡張	
whatsnew/2.7.html#acknowledgements	謝辞	
whatsnew/2.6.html	What’s New in Python 2.6	
whatsnew/2.6.html#python-3-0	Python 3.0	
whatsnew/2.6.html#changes-to-the-development-process	開発プロセスに関する変更	
whatsnew/2.6.html#new-issue-tracker-roundup	新しい課題トラッカー: Roundup	
whatsnew/2.6.html#new-documentation-format-restructuredtext-using-sphinx	新しいドキュメンテーションフォーマット: Sphinx を使っての reStructuredText	
whatsnew/2.6.html#pep-343-the-with-statement	PEP 343: “with” ステートメント	
whatsnew/2.6.html#writing-context-managers	コンテキストマネージャを書く	
whatsnew/2.6.html#the-contextlib-module	contextlib モジュール	
whatsnew/2.6.html#pep-366-explicit-relative-imports-from-a-main-module	PEP 366: メインモジュールからの明示的相対インポート	
whatsnew/2.6.html#pep-370-per-user-site-packages-directory	PEP 370: ユーザごとのsite-packagesディレクトリ	
whatsnew/2.6.html#pep-371-the-multiprocessing-package	PEP 371:multiprocessingパッケージ	
whatsnew/2.6.html#pep-3101-advanced-string-formatting	PEP 3101: 進化版文字列フォーマッティング	
whatsnew/2.6.html#pep-3105-print-as-a-function	PEP 3105:printを関数にする	
whatsnew/2.6.html#pep-3110-exception-handling-changes	PEP 3110: 例外処理の変更	
whatsnew/2.6.html#pep-3112-byte-literals	PEP 3112: バイトリテラル	
whatsnew/2.6.html#pep-3116-new-i-o-library	PEP 3116: 新しい I/O ライブラリ	
whatsnew/2.6.html#pep-3118-revised-buffer-protocol	PEP 3118: 改訂版バッファプロトコル	
whatsnew/2.6.html#pep-3119-abstract-base-classes	PEP 3119: 抽象基底クラス	
whatsnew/2.6.html#pep-3127-integer-literal-support-and-syntax	PEP 3127: 整数リテラルのサポートと文法	
whatsnew/2.6.html#pep-3129-class-decorators	PEP 3129: クラスデコレータ	
whatsnew/2.6.html#pep-3141-a-type-hierarchy-for-numbers	PEP 3141: 数値の型階層	
whatsnew/2.6.html#the-fractions-module	fractionsモジュール	
whatsnew/2.6.html#other-language-changes	その他の言語変更	
whatsnew/2.6.html#optimizations	最適化	
whatsnew/2.6.html#interpreter-changes	インタプリタの変更	
whatsnew/2.6.html#new-and-improved-modules	新しいモジュールと改良されたモジュール	
whatsnew/2.6.html#the-ast-module	astモジュール	
whatsnew/2.6.html#the-future-builtins-module	future_builtinsモジュール	
whatsnew/2.6.html#the-json-module-javascript-object-notation	jsonモジュール: JavaScript オブジェクト記法	
whatsnew/2.6.html#the-plistlib-module-a-property-list-parser	plistlibモジュール: プロパティリストパーサ	
whatsnew/2.6.html#ctypes-enhancements	ctypes の強化	
whatsnew/2.6.html#improved-ssl-support	SSL サポートの改善	
whatsnew/2.6.html#deprecations-and-removals	非推奨と削除	
whatsnew/2.6.html#build-and-c-api-changes	ビルドならびに C API の変更	
whatsnew/2.6.html#port-specific-changes-windows	ポート特有の変更: Windows	
whatsnew/2.6.html#port-specific-changes-mac-os-x	ポート特有の変更: Mac OS X	
whatsnew/2.6.html#port-specific-changes-irix	ポート特有の変更: IRIX	
whatsnew/2.6.html#porting-to-python-2-6	Python 2.6 への移植	
whatsnew/2.6.html#acknowledgements	謝辞	
whatsnew/2.5.html	What’s New in Python 2.5	
whatsnew/2.5.html#pep-308-conditional-expressions	PEP 308: 条件式 (Conditional Expressions)	
whatsnew/2.5.html#pep-309-partial-function-application	PEP 309: 関数の部分適用	
whatsnew/2.5.html#pep-314-metadata-for-python-software-packages-v1-1	PEP 314: Metadata for Python Software Packages v1.1	
whatsnew/2.5.html#pep-328-absolute-and-relative-imports	PEP 328: 絶対インポート、相対インポート	
whatsnew/2.5.html#pep-338-executing-modules-as-scripts	PEP 338 - モジュールをスクリプトとして実行する	
whatsnew/2.5.html#pep-341-unified-try-except-finally	PEP 341: try/except/finally の一体化	
whatsnew/2.5.html#pep-342-new-generator-features	PEP 342: ジェネレータの新機能	
whatsnew/2.5.html#pep-343-the-with-statement	PEP 343: “with” ステートメント	
whatsnew/2.5.html#writing-context-managers	コンテキストマネージャを書く	
whatsnew/2.5.html#the-contextlib-module	contextlib モジュール	
whatsnew/2.5.html#pep-352-exceptions-as-new-style-classes	PEP 352: 例外の新スタイルクラス化	
whatsnew/2.5.html#pep-353-using-ssize-t-as-the-index-type	PEP 353: 添え字型に ssize_t を使う	
whatsnew/2.5.html#pep-357-the-index-method	PEP 357: ‘__index__’ メソッド	
whatsnew/2.5.html#other-language-changes	その他の言語変更	
whatsnew/2.5.html#interactive-interpreter-changes	対話的なインタプリタの変更	
whatsnew/2.5.html#optimizations	最適化	
whatsnew/2.5.html#new-improved-and-removed-modules	新たなモジュール、改良されたモジュール、削除されたモジュール	
whatsnew/2.5.html#the-ctypes-package	ctypes パッケージ	
whatsnew/2.5.html#the-elementtree-package	ElementTree パッケージ	
whatsnew/2.5.html#the-hashlib-package	hashlib パッケージ	
whatsnew/2.5.html#the-sqlite3-package	sqlite3 パッケージ	
whatsnew/2.5.html#the-wsgiref-package	wsgiref パッケージ	
whatsnew/2.5.html#build-and-c-api-changes	ビルドならびに C API の変更	
whatsnew/2.5.html#port-specific-changes	ポート特有の変更	
whatsnew/2.5.html#porting-to-python-2-5	Python 2.5 への移植	
whatsnew/2.5.html#acknowledgements	謝辞	
whatsnew/2.4.html	What’s New in Python 2.4	
whatsnew/2.4.html#pep-218-built-in-set-objects	PEP 218: ビルトインの集合オブジェクト	
whatsnew/2.4.html#pep-237-unifying-long-integers-and-integers	PEP 237: 長整数と整数を一体化していく	
whatsnew/2.4.html#pep-289-generator-expressions	PEP 289: ジェネレータ式	
whatsnew/2.4.html#pep-292-simpler-string-substitutions	PEP 292: より単純な文字列置換 (string substitution)	
whatsnew/2.4.html#pep-318-decorators-for-functions-and-methods	PEP 318: 関数とメソッドのためのデコレータ	
whatsnew/2.4.html#pep-322-reverse-iteration	PEP 322: 逆順のイテレーション	
whatsnew/2.4.html#pep-324-new-subprocess-module	PEP 324: 新しい subprocess モジュール	
whatsnew/2.4.html#pep-327-decimal-data-type	PEP 327: Decimal データ型	
whatsnew/2.4.html#why-is-decimal-needed	なぜ Decimal が必要なのか?	
whatsnew/2.4.html#the-decimal-type	Decimal型	
whatsnew/2.4.html#the-context-type	Context型	
whatsnew/2.4.html#pep-328-multi-line-imports	PEP 328: マルチラインインポート	
whatsnew/2.4.html#pep-331-locale-independent-float-string-conversions	PEP 331: Locale に依存しない Float/String 変換	
whatsnew/2.4.html#other-language-changes	その他の言語変更	
whatsnew/2.4.html#optimizations	最適化	
whatsnew/2.4.html#new-improved-and-deprecated-modules	新たなモジュール、改良されたモジュール、非推奨のモジュール	
whatsnew/2.4.html#cookielib	cookielib	
whatsnew/2.4.html#doctest	doctest	
whatsnew/2.4.html#build-and-c-api-changes	ビルドならびに C API の変更	
whatsnew/2.4.html#port-specific-changes	ポート特有の変更	
whatsnew/2.4.html#porting-to-python-2-4	Python 2.4 への移植	
whatsnew/2.4.html#acknowledgements	謝辞	
whatsnew/2.3.html	What’s New in Python 2.3	
whatsnew/2.3.html#pep-218-a-standard-set-datatype	PEP 218: 標準の集合データ型	
whatsnew/2.3.html#pep-255-simple-generators	PEP 255: 単純なジェネレータ	
whatsnew/2.3.html#pep-263-source-code-encodings	PEP 263: ソースコードのエンコーディング	
whatsnew/2.3.html#pep-273-importing-modules-from-zip-archives	PEP 273: Zip アーカイブからモジュールをインポートする	
whatsnew/2.3.html#pep-277-unicode-file-name-support-for-windows-nt	PEP 277: Windows NT での Unicode ファイル名サポート	
whatsnew/2.3.html#pep-278-universal-newline-support	PEP 278: Universal Newline サポート	
whatsnew/2.3.html#pep-279-enumerate	PEP 279: enumerate()	
whatsnew/2.3.html#pep-282-the-logging-package	PEP 282: ロギングパッケージ	
whatsnew/2.3.html#pep-285-a-boolean-type	PEP 285: Boolean 型	
whatsnew/2.3.html#pep-293-codec-error-handling-callbacks	PEP 293: コーデックエラーを処理するコールバック	
whatsnew/2.3.html#pep-301-package-index-and-metadata-for-distutils	PEP 301: パッケージインデクスと、 Distutils のためのメタデータ	
whatsnew/2.3.html#pep-302-new-import-hooks	PEP 302: 新たなインポートフック	
whatsnew/2.3.html#pep-305-comma-separated-files	PEP 305: カンマ区切り形式ファイル	
whatsnew/2.3.html#pep-307-pickle-enhancements	PEP 307: Pickle の機能拡張	
whatsnew/2.3.html#extended-slices	拡張スライス	
whatsnew/2.3.html#other-language-changes	その他の言語変更	
whatsnew/2.3.html#string-changes	文字列に関する変更	
whatsnew/2.3.html#optimizations	最適化	
whatsnew/2.3.html#new-improved-and-deprecated-modules	新たなモジュール、改良されたモジュール、非推奨のモジュール	
whatsnew/2.3.html#date-time-type	日付時刻型	
whatsnew/2.3.html#the-optparse-module	optparse モジュール	
whatsnew/2.3.html#pymalloc-a-specialized-object-allocator	Pymalloc: 特殊化されたオブジェクトアロケータ	
whatsnew/2.3.html#build-and-c-api-changes	ビルドならびに C API の変更	
whatsnew/2.3.html#port-specific-changes	ポート特有の変更	
whatsnew/2.3.html#other-changes-and-fixes	その他の変更と修正	
whatsnew/2.3.html#porting-to-python-2-3	Python 2.3 への移植	
whatsnew/2.3.html#acknowledgements	謝辞	
whatsnew/2.2.html	What’s New in Python 2.2	
whatsnew/2.2.html#introduction	はじめに	
whatsnew/2.2.html#peps-252-and-253-type-and-class-changes	PEP 252 と PEP 253: 型とクラスについての変更	
whatsnew/2.2.html#old-and-new-classes	旧と新クラス	
whatsnew/2.2.html#descriptors	デスクリプタ	
whatsnew/2.2.html#multiple-inheritance-the-diamond-rule	多重継承: ダイヤモンドルール	
whatsnew/2.2.html#attribute-access	属性アクセス	
whatsnew/2.2.html#related-links	関連リンク	
whatsnew/2.2.html#pep-234-iterators	PEP 234: イテレータ	
whatsnew/2.2.html#pep-255-simple-generators	PEP 255: 単純なジェネレータ	
whatsnew/2.2.html#pep-237-unifying-long-integers-and-integers	PEP 237: 長整数と整数を一体化していく	
whatsnew/2.2.html#pep-238-changing-the-division-operator	PEP 238: 除算演算子を変更していく	
whatsnew/2.2.html#unicode-changes	Unicode の変更	
whatsnew/2.2.html#pep-227-nested-scopes	PEP 227: 入れ子状のスコープ	
whatsnew/2.2.html#new-and-improved-modules	新しいモジュールと改良されたモジュール	
whatsnew/2.2.html#interpreter-changes-and-fixes	インタプリタの変更と修正	
whatsnew/2.2.html#other-changes-and-fixes	その他の変更と修正	
whatsnew/2.2.html#acknowledgements	謝辞	
whatsnew/2.1.html	What’s New in Python 2.1	
whatsnew/2.1.html#introduction	はじめに	
whatsnew/2.1.html#pep-227-nested-scopes	PEP 227: 入れ子状のスコープ	
whatsnew/2.1.html#pep-236-future-directives	PEP 236: __future__ 指示文	
whatsnew/2.1.html#pep-207-rich-comparisons	PEP 207: 拡張比較	
whatsnew/2.1.html#pep-230-warning-framework	PEP 230: 警告フレームワーク	
whatsnew/2.1.html#pep-229-new-build-system	PEP 229: 新しいビルドシステム	
whatsnew/2.1.html#pep-205-weak-references	PEP 205: 弱参照	
whatsnew/2.1.html#pep-232-function-attributes	PEP 232: 関数の属性	
whatsnew/2.1.html#pep-235-importing-modules-on-case-insensitive-platforms	PEP 235: 大文字小文字を区別しないプラットフォームでのモジュールの読み込み	
whatsnew/2.1.html#pep-217-interactive-display-hook	PEP 217: 対話モード用 Display Hook	
whatsnew/2.1.html#pep-208-new-coercion-model	PEP 208: 新しい型強制モデル	
whatsnew/2.1.html#pep-241-metadata-in-python-packages	PEP 241: Pythonソフトウェアパッケージのためのメタデータ	
whatsnew/2.1.html#new-and-improved-modules	新しいモジュールと改良されたモジュール	
whatsnew/2.1.html#other-changes-and-fixes	その他の変更と修正	
whatsnew/2.1.html#acknowledgements	謝辞	
whatsnew/2.0.html	What’s New in Python 2.0	
whatsnew/2.0.html#introduction	はじめに	
whatsnew/2.0.html#what-about-python-1-6	Python 1.6 はいかがっすか?	
whatsnew/2.0.html#new-development-process	新しい開発プロセス	
whatsnew/2.0.html#unicode	Unicode 文字列型	
whatsnew/2.0.html#list-comprehensions	リストの内包表記	
whatsnew/2.0.html#augmented-assignment	累算代入 (Augmented Assignment)	
whatsnew/2.0.html#string-methods	文字列メソッド	
whatsnew/2.0.html#garbage-collection-of-cycles	循環参照のガベージコレクション	
whatsnew/2.0.html#other-core-changes	その他の言語コアの変更	
whatsnew/2.0.html#minor-language-changes	言語のマイナー変更	
whatsnew/2.0.html#changes-to-built-in-functions	ビルトイン関数の変更	
whatsnew/2.0.html#porting-to-2-0	Python 2.0 への移植	
whatsnew/2.0.html#extending-embedding-changes	拡張と埋め込みについての変更	
whatsnew/2.0.html#distutils-making-modules-easy-to-install	Distutils: モジュールの簡単インストール	
whatsnew/2.0.html#xml-modules	XML モジュール	
whatsnew/2.0.html#sax2-support	SAX2 サポート	
whatsnew/2.0.html#dom-support	DOM サポート	
whatsnew/2.0.html#relationship-to-pyxml	PyXML との関係	
whatsnew/2.0.html#module-changes	更新されたモジュール	
whatsnew/2.0.html#new-modules	新しいモジュール	
whatsnew/2.0.html#idle-improvements	IDLE の改善	
whatsnew/2.0.html#deleted-and-deprecated-modules	削除されたモジュール、非推奨となったモジュール	
whatsnew/2.0.html#acknowledgements	謝辞	
whatsnew/changelog.html	変更履歴	
whatsnew/changelog.html#python-3-6-2-release-candidate-1	Python 3.6.2 release candidate 1	
whatsnew/changelog.html#core-and-builtins	Core and Builtins	
whatsnew/changelog.html#library	ライブラリ	
whatsnew/changelog.html#build	ビルド	
whatsnew/changelog.html#documentation	ドキュメント	
whatsnew/changelog.html#python-3-6-1	Python 3.6.1	
whatsnew/changelog.html#id2	Core and Builtins	
whatsnew/changelog.html#id3	ビルド	
whatsnew/changelog.html#python-3-6-1-release-candidate-1	Python 3.6.1 release candidate 1	
whatsnew/changelog.html#id4	Core and Builtins	
whatsnew/changelog.html#extension-modules	拡張モジュール	
whatsnew/changelog.html#id5	ライブラリ	
whatsnew/changelog.html#windows	Windows	
whatsnew/changelog.html#c-api	C API	
whatsnew/changelog.html#id6	ドキュメント	
whatsnew/changelog.html#tests	テスト	
whatsnew/changelog.html#id7	ビルド	
whatsnew/changelog.html#python-3-6-0	Python 3.6.0	
whatsnew/changelog.html#python-3-6-0-release-candidate-2	Python 3.6.0 release candidate 2	
whatsnew/changelog.html#id8	Core and Builtins	
whatsnew/changelog.html#tools-demos	Tools/Demos	
whatsnew/changelog.html#id9	Windows	
whatsnew/changelog.html#id10	ビルド	
whatsnew/changelog.html#python-3-6-0-release-candidate-1	Python 3.6.0 release candidate 1	
whatsnew/changelog.html#id11	Core and Builtins	
whatsnew/changelog.html#id12	ライブラリ	
whatsnew/changelog.html#id13	C API	
whatsnew/changelog.html#id14	ドキュメント	
whatsnew/changelog.html#id15	Tools/Demos	
whatsnew/changelog.html#python-3-6-0-beta-4	Python 3.6.0 beta 4	
whatsnew/changelog.html#id16	Core and Builtins	
whatsnew/changelog.html#id17	ライブラリ	
whatsnew/changelog.html#id18	ドキュメント	
whatsnew/changelog.html#id19	テスト	
whatsnew/changelog.html#id20	ビルド	
whatsnew/changelog.html#python-3-6-0-beta-3	Python 3.6.0 beta 3	
whatsnew/changelog.html#id21	Core and Builtins	
whatsnew/changelog.html#id22	ライブラリ	
whatsnew/changelog.html#id23	Windows	
whatsnew/changelog.html#id24	ビルド	
whatsnew/changelog.html#id25	テスト	
whatsnew/changelog.html#python-3-6-0-beta-2	Python 3.6.0 beta 2	
whatsnew/changelog.html#id26	Core and Builtins	
whatsnew/changelog.html#id27	ライブラリ	
whatsnew/changelog.html#id28	Windows	
whatsnew/changelog.html#id29	C API	
whatsnew/changelog.html#id30	ビルド	
whatsnew/changelog.html#id31	テスト	
whatsnew/changelog.html#python-3-6-0-beta-1	Python 3.6.0 beta 1	
whatsnew/changelog.html#id32	Core and Builtins	
whatsnew/changelog.html#id33	ライブラリ	
whatsnew/changelog.html#idle	IDLE	
whatsnew/changelog.html#id34	C API	
whatsnew/changelog.html#id35	テスト	
whatsnew/changelog.html#id36	ビルド	
whatsnew/changelog.html#id37	Tools/Demos	
whatsnew/changelog.html#id38	Windows	
whatsnew/changelog.html#python-3-6-0-alpha-4	Python 3.6.0 alpha 4	
whatsnew/changelog.html#id39	Core and Builtins	
whatsnew/changelog.html#id40	ライブラリ	
whatsnew/changelog.html#id41	IDLE	
whatsnew/changelog.html#id42	テスト	
whatsnew/changelog.html#id43	Windows	
whatsnew/changelog.html#id44	ビルド	
whatsnew/changelog.html#python-3-6-0-alpha-3	Python 3.6.0 alpha 3	
whatsnew/changelog.html#id45	Core and Builtins	
whatsnew/changelog.html#id46	ライブラリ	
whatsnew/changelog.html#id47	IDLE	
whatsnew/changelog.html#id48	C API	
whatsnew/changelog.html#id49	ビルド	
whatsnew/changelog.html#id50	Tools/Demos	
whatsnew/changelog.html#id51	ドキュメント	
whatsnew/changelog.html#id52	テスト	
whatsnew/changelog.html#python-3-6-0-alpha-2	Python 3.6.0 alpha 2	
whatsnew/changelog.html#id53	Core and Builtins	
whatsnew/changelog.html#id54	ライブラリ	
whatsnew/changelog.html#id55	IDLE	
whatsnew/changelog.html#id56	ドキュメント	
whatsnew/changelog.html#id57	テスト	
whatsnew/changelog.html#id58	Windows	
whatsnew/changelog.html#id59	ビルド	
whatsnew/changelog.html#misc	Misc	
whatsnew/changelog.html#id60	C API	
whatsnew/changelog.html#id61	Tools/Demos	
whatsnew/changelog.html#python-3-6-0-alpha-1	Python 3.6.0 alpha 1	
whatsnew/changelog.html#id62	Core and Builtins	
whatsnew/changelog.html#id63	ライブラリ	
whatsnew/changelog.html#id64	IDLE	
whatsnew/changelog.html#id65	ドキュメント	
whatsnew/changelog.html#id66	テスト	
whatsnew/changelog.html#id67	ビルド	
whatsnew/changelog.html#id68	Windows	
whatsnew/changelog.html#id69	Tools/Demos	
whatsnew/changelog.html#id70	C API	
whatsnew/changelog.html#python-3-5-3	Python 3.5.3	
whatsnew/changelog.html#python-3-5-3-release-candidate-1	Python 3.5.3 release candidate 1	
whatsnew/changelog.html#id71	Core and Builtins	
whatsnew/changelog.html#id72	ライブラリ	
whatsnew/changelog.html#id73	IDLE	
whatsnew/changelog.html#id74	C API	
whatsnew/changelog.html#id75	ドキュメント	
whatsnew/changelog.html#id76	テスト	
whatsnew/changelog.html#id77	Tools/Demos	
whatsnew/changelog.html#id78	Windows	
whatsnew/changelog.html#id79	ビルド	
whatsnew/changelog.html#python-3-5-2	Python 3.5.2	
whatsnew/changelog.html#id80	Core and Builtins	
whatsnew/changelog.html#id81	テスト	
whatsnew/changelog.html#id82	IDLE	
whatsnew/changelog.html#python-3-5-2-release-candidate-1	Python 3.5.2 リリース候補 1	
whatsnew/changelog.html#id83	Core and Builtins	
whatsnew/changelog.html#id84	ライブラリ	
whatsnew/changelog.html#id85	IDLE	
whatsnew/changelog.html#id86	ドキュメント	
whatsnew/changelog.html#id87	テスト	
whatsnew/changelog.html#id88	ビルド	
whatsnew/changelog.html#id89	Windows	
whatsnew/changelog.html#id90	Tools/Demos	
whatsnew/changelog.html#id91	Misc	
whatsnew/changelog.html#python-3-5-1-final	Python 3.5.1 最終版	
whatsnew/changelog.html#id92	Core and Builtins	
whatsnew/changelog.html#id93	Windows	
whatsnew/changelog.html#python-3-5-1-release-candidate-1	Python 3.5.1 release candidate 1	
whatsnew/changelog.html#id94	Core and Builtins	
whatsnew/changelog.html#id95	ライブラリ	
whatsnew/changelog.html#id96	IDLE	
whatsnew/changelog.html#id97	ドキュメント	
whatsnew/changelog.html#id98	テスト	
whatsnew/changelog.html#id99	ビルド	
whatsnew/changelog.html#id100	Windows	
whatsnew/changelog.html#id101	Tools/Demos	
whatsnew/changelog.html#python-3-5-0-final	Python 3.5.0 final	
whatsnew/changelog.html#id102	ビルド	
whatsnew/changelog.html#python-3-5-0-release-candidate-4	Python 3.5.0 release candidate 4	
whatsnew/changelog.html#id103	ライブラリ	
whatsnew/changelog.html#id104	ビルド	
whatsnew/changelog.html#python-3-5-0-release-candidate-3	Python 3.5.0 release candidate 3	
whatsnew/changelog.html#id105	Core and Builtins	
whatsnew/changelog.html#id106	ライブラリ	
whatsnew/changelog.html#python-3-5-0-release-candidate-2	Python 3.5.0 release candidate 2	
whatsnew/changelog.html#id107	Core and Builtins	
whatsnew/changelog.html#id108	ライブラリ	
whatsnew/changelog.html#python-3-5-0-release-candidate-1	Python 3.5.0 release candidate 1	
whatsnew/changelog.html#id109	Core and Builtins	
whatsnew/changelog.html#id110	ライブラリ	
whatsnew/changelog.html#id111	IDLE	
whatsnew/changelog.html#id112	ドキュメント	
whatsnew/changelog.html#id113	テスト	
whatsnew/changelog.html#python-3-5-0-beta-4	Python 3.5.0 beta 4	
whatsnew/changelog.html#id114	Core and Builtins	
whatsnew/changelog.html#id115	ライブラリ	
whatsnew/changelog.html#id116	ビルド	
whatsnew/changelog.html#python-3-5-0-beta-3	Python 3.5.0 beta 3	
whatsnew/changelog.html#id117	Core and Builtins	
whatsnew/changelog.html#id118	ライブラリ	
whatsnew/changelog.html#id119	テスト	
whatsnew/changelog.html#id120	ドキュメント	
whatsnew/changelog.html#id121	ビルド	
whatsnew/changelog.html#python-3-5-0-beta-2	Python 3.5.0 beta 2	
whatsnew/changelog.html#id122	Core and Builtins	
whatsnew/changelog.html#id123	ライブラリ	
whatsnew/changelog.html#python-3-5-0-beta-1	Python 3.5.0 beta 1	
whatsnew/changelog.html#id124	Core and Builtins	
whatsnew/changelog.html#id125	ライブラリ	
whatsnew/changelog.html#id126	IDLE	
whatsnew/changelog.html#id127	テスト	
whatsnew/changelog.html#id128	ドキュメント	
whatsnew/changelog.html#id129	Tools/Demos	
whatsnew/changelog.html#python-3-5-0-alpha-4	Python 3.5.0 alpha 4	
whatsnew/changelog.html#id130	Core and Builtins	
whatsnew/changelog.html#id131	ライブラリ	
whatsnew/changelog.html#id132	ビルド	
whatsnew/changelog.html#id133	テスト	
whatsnew/changelog.html#id134	Tools/Demos	
whatsnew/changelog.html#id135	C API	
whatsnew/changelog.html#python-3-5-0-alpha-3	Python 3.5.0 alpha 3	
whatsnew/changelog.html#id136	Core and Builtins	
whatsnew/changelog.html#id137	ライブラリ	
whatsnew/changelog.html#id138	ビルド	
whatsnew/changelog.html#id139	テスト	
whatsnew/changelog.html#id140	Tools/Demos	
whatsnew/changelog.html#python-3-5-alpha-2	Python 3.5 alpha 2	
whatsnew/changelog.html#id141	Core and Builtins	
whatsnew/changelog.html#id142	ライブラリ	
whatsnew/changelog.html#id143	ビルド	
whatsnew/changelog.html#id144	C API	
whatsnew/changelog.html#id145	Windows	
whatsnew/changelog.html#python-3-5-alpha-1	Python 3.5 alpha 1	
whatsnew/changelog.html#id146	Core and Builtins	
whatsnew/changelog.html#id147	ライブラリ	
whatsnew/changelog.html#id148	IDLE	
whatsnew/changelog.html#id149	ビルド	
whatsnew/changelog.html#id150	C API	
whatsnew/changelog.html#id151	ドキュメント	
whatsnew/changelog.html#id152	テスト	
whatsnew/changelog.html#id153	Tools/Demos	
whatsnew/changelog.html#id154	Windows	
tutorial/index.html	Python チュートリアル	
tutorial/appetite.html	1. やる気を高めよう	
tutorial/interpreter.html	2. Python インタプリタを使う	
tutorial/interpreter.html#invoking-the-interpreter	2.1. インタプリタを起動する	
tutorial/interpreter.html#argument-passing	2.1.1. 引数の受け渡し	
tutorial/interpreter.html#interactive-mode	2.1.2. 対話モード	
tutorial/interpreter.html#the-interpreter-and-its-environment	2.2. インタプリタとその環境	
tutorial/interpreter.html#source-code-encoding	2.2.1. ソースコードの文字コード	
tutorial/introduction.html	3. 形式ばらない Python の紹介	
tutorial/introduction.html#using-python-as-a-calculator	3.1. Python を電卓として使う	
tutorial/introduction.html#numbers	3.1.1. 数	
tutorial/introduction.html#strings	3.1.2. 文字列型 (string)	
tutorial/introduction.html#lists	3.1.3. リスト型 (list)	
tutorial/introduction.html#first-steps-towards-programming	3.2. プログラミングへの第一歩	
tutorial/controlflow.html	4. その他の制御フローツール	
tutorial/controlflow.html#if-statements	4.1.if文	
tutorial/controlflow.html#for-statements	4.2.for文	
tutorial/controlflow.html#the-range-function	4.3.range()関数	
tutorial/controlflow.html#break-and-continue-statements-and-else-clauses-on-loops	4.4.break文とcontinue文とループのelse節	
tutorial/controlflow.html#pass-statements	4.5.pass文	
tutorial/controlflow.html#defining-functions	4.6. 関数を定義する	
tutorial/controlflow.html#more-on-defining-functions	4.7. 関数定義についてもう少し	
tutorial/controlflow.html#default-argument-values	4.7.1. デフォルトの引数値	
tutorial/controlflow.html#keyword-arguments	4.7.2. キーワード引数	
tutorial/controlflow.html#arbitrary-argument-lists	4.7.3. 任意引数リスト	
tutorial/controlflow.html#unpacking-argument-lists	4.7.4. 引数リストのアンパック	
tutorial/controlflow.html#lambda-expressions	4.7.5. ラムダ式	
tutorial/controlflow.html#documentation-strings	4.7.6. ドキュメンテーション文字列	
tutorial/controlflow.html#function-annotations	4.7.7. 関数のアノテーション	
tutorial/controlflow.html#intermezzo-coding-style	4.8. 間奏曲: コーディングスタイル	
tutorial/datastructures.html	5. データ構造	
tutorial/datastructures.html#more-on-lists	5.1. リスト型についてもう少し	
tutorial/datastructures.html#using-lists-as-stacks	5.1.1. リストをスタックとして使う	
tutorial/datastructures.html#using-lists-as-queues	5.1.2. リストをキューとして使う	
tutorial/datastructures.html#list-comprehensions	5.1.3. リストの内包表記	
tutorial/datastructures.html#nested-list-comprehensions	5.1.4. ネストしたリストの内包表記	
tutorial/datastructures.html#the-del-statement	5.2.del文	
tutorial/datastructures.html#tuples-and-sequences	5.3. タプルとシーケンス	
tutorial/datastructures.html#sets	5.4. 集合型	
tutorial/datastructures.html#dictionaries	5.5. 辞書型 (dictionary)	
tutorial/datastructures.html#looping-techniques	5.6. ループのテクニック	
tutorial/datastructures.html#more-on-conditions	5.7. 条件についてもう少し	
tutorial/datastructures.html#comparing-sequences-and-other-types	5.8. シーケンスとその他の型の比較	
tutorial/modules.html	6. モジュール (module)	
tutorial/modules.html#more-on-modules	6.1. モジュールについてもうすこし	
tutorial/modules.html#executing-modules-as-scripts	6.1.1. モジュールをスクリプトとして実行する	
tutorial/modules.html#the-module-search-path	6.1.2. モジュール検索パス	
tutorial/modules.html#compiled-python-files	6.1.3. “コンパイル” された Python ファイル	
tutorial/modules.html#standard-modules	6.2. 標準モジュール	
tutorial/modules.html#the-dir-function	6.3.dir()関数	
tutorial/modules.html#packages	6.4. パッケージ	
tutorial/modules.html#importing-from-a-package	6.4.1. パッケージから * を import する	
tutorial/modules.html#intra-package-references	6.4.2. パッケージ内参照	
tutorial/modules.html#packages-in-multiple-directories	6.4.3. 複数ディレクトリ中のパッケージ	
tutorial/inputoutput.html	7. 入力と出力	
tutorial/inputoutput.html#fancier-output-formatting	7.1. 出力を見やすくフォーマットする	
tutorial/inputoutput.html#old-string-formatting	7.1.1. 古い文字列書式設定方法	
tutorial/inputoutput.html#reading-and-writing-files	7.2. ファイルを読み書きする	
tutorial/inputoutput.html#methods-of-file-objects	7.2.1. ファイルオブジェクトのメソッド	
tutorial/inputoutput.html#saving-structured-data-with-json	7.2.2.jsonによる構造化されたデータの保存	
tutorial/errors.html	8. エラーと例外	
tutorial/errors.html#syntax-errors	8.1. 構文エラー	
tutorial/errors.html#exceptions	8.2. 例外	
tutorial/errors.html#handling-exceptions	8.3. 例外を処理する	
tutorial/errors.html#raising-exceptions	8.4. 例外を送出する	
tutorial/errors.html#user-defined-exceptions	8.5. ユーザー定義例外	
tutorial/errors.html#defining-clean-up-actions	8.6. クリーンアップ動作を定義する	
tutorial/errors.html#predefined-clean-up-actions	8.7. 定義済みクリーンアップ処理	
tutorial/classes.html	9. クラス	
tutorial/classes.html#a-word-about-names-and-objects	9.1. 名前とオブジェクトについて	
tutorial/classes.html#python-scopes-and-namespaces	9.2. Python のスコープと名前空間	
tutorial/classes.html#scopes-and-namespaces-example	9.2.1. スコープと名前空間の例	
tutorial/classes.html#a-first-look-at-classes	9.3. クラス初見	
tutorial/classes.html#class-definition-syntax	9.3.1. クラス定義の構文	
tutorial/classes.html#class-objects	9.3.2. クラスオブジェクト	
tutorial/classes.html#instance-objects	9.3.3. インスタンスオブジェクト	
tutorial/classes.html#method-objects	9.3.4. メソッドオブジェクト	
tutorial/classes.html#class-and-instance-variables	9.3.5. クラスとインスタンス変数	
tutorial/classes.html#random-remarks	9.4. いろいろな注意点	
tutorial/classes.html#inheritance	9.5. 継承	
tutorial/classes.html#multiple-inheritance	9.5.1. 多重継承	
tutorial/classes.html#private-variables	9.6. プライベート変数	
tutorial/classes.html#odds-and-ends	9.7. 残りのはしばし	
tutorial/classes.html#iterators	9.8. イテレータ (iterator)	
tutorial/classes.html#generators	9.9. ジェネレータ (generator)	
tutorial/classes.html#generator-expressions	9.10. ジェネレータ式	
tutorial/stdlib.html	10. 標準ライブラリミニツアー	
tutorial/stdlib.html#operating-system-interface	10.1. OSへのインタフェース	
tutorial/stdlib.html#file-wildcards	10.2. ファイルのワイルドカード表記	
tutorial/stdlib.html#command-line-arguments	10.3. コマンドライン引数	
tutorial/stdlib.html#error-output-redirection-and-program-termination	10.4. エラー出力のリダイレクトとプログラムの終了	
tutorial/stdlib.html#string-pattern-matching	10.5. 文字列のパターンマッチング	
tutorial/stdlib.html#mathematics	10.6. 数学	
tutorial/stdlib.html#internet-access	10.7. インターネットへのアクセス	
tutorial/stdlib.html#dates-and-times	10.8. 日付と時刻	
tutorial/stdlib.html#data-compression	10.9. データ圧縮	
tutorial/stdlib.html#performance-measurement	10.10. パフォーマンスの計測	
tutorial/stdlib.html#quality-control	10.11. 品質管理	
tutorial/stdlib.html#batteries-included	10.12. バッテリー同梱	
tutorial/stdlib2.html	11. 標準ライブラリミニツアー — その 2	
tutorial/stdlib2.html#output-formatting	11.1. 出力のフォーマット	
tutorial/stdlib2.html#templating	11.2. 文字列テンプレート	
tutorial/stdlib2.html#working-with-binary-data-record-layouts	11.3. バイナリデータレコードの操作	
tutorial/stdlib2.html#multi-threading	11.4. マルチスレッディング	
tutorial/stdlib2.html#logging	11.5. ログ記録	
tutorial/stdlib2.html#weak-references	11.6. 弱参照	
tutorial/stdlib2.html#tools-for-working-with-lists	11.7. リスト操作のためのツール	
tutorial/stdlib2.html#decimal-floating-point-arithmetic	11.8. 10 進浮動小数演算	
tutorial/venv.html	12. 仮想環境とパッケージ	
tutorial/venv.html#introduction	12.1. はじめに	
tutorial/venv.html#creating-virtual-environments	12.2. 仮想環境の作成	
tutorial/venv.html#managing-packages-with-pip	12.3. pip を使ったパッケージ管理	
tutorial/whatnow.html	13. さあ何を？	
tutorial/interactive.html	14. 対話入力編集と履歴置換	
tutorial/interactive.html#tab-completion-and-history-editing	14.1. タブ補完と履歴編集	
tutorial/interactive.html#alternatives-to-the-interactive-interpreter	14.2. 対話的インタープリタの代替	
tutorial/floatingpoint.html	15. 浮動小数点演算、その問題と制限	
tutorial/floatingpoint.html#representation-error	15.1. 表現エラー	
tutorial/appendix.html	16. 付録	
tutorial/appendix.html#interactive-mode	16.1. 対話モード	
tutorial/appendix.html#error-handling	16.1.1. エラー処理	
tutorial/appendix.html#executable-python-scripts	16.1.2. 実行可能な Python スクリプト	
tutorial/appendix.html#the-interactive-startup-file	16.1.3. 対話モード用の起動時実行ファイル	
tutorial/appendix.html#the-customization-modules	16.1.4. カスタマイズ用モジュール	
using/index.html	Python のセットアップと利用	
using/cmdline.html	1. コマンドラインと環境	
using/cmdline.html#command-line	1.1. コマンドライン	
using/cmdline.html#interface-options	1.1.1. インターフェイスオプション	
using/cmdline.html#generic-options	1.1.2. 一般オプション	
using/cmdline.html#miscellaneous-options	1.1.3. その他のオプション	
using/cmdline.html#options-you-shouldn-t-use	1.1.4. 使うべきでないオプション	
using/cmdline.html#environment-variables	1.2. 環境変数	
using/cmdline.html#debug-mode-variables	1.2.1. デバッグモード変数	
using/unix.html	2. Unix プラットフォームで Python を使う	
using/unix.html#getting-and-installing-the-latest-version-of-python	2.1. 最新バージョンの Python の取得とインストール	
using/unix.html#on-linux	2.1.1. Linux	
using/unix.html#on-freebsd-and-openbsd	2.1.2. FreeBSD と OpenBSD	
using/unix.html#on-opensolaris	2.1.3. OpenSolaris	
using/unix.html#building-python	2.2. Python のビルド	
using/unix.html#python-related-paths-and-files	2.3. Python に関係するパスとファイル	
using/unix.html#miscellaneous	2.4. その他	
using/unix.html#editors-and-ides	2.5. エディタと IDE	
using/windows.html	3. Windows で Python を使う	
using/windows.html#installing-python	3.1. Python のインストール	
using/windows.html#supported-versions	3.1.1. サポートされているバージョン	
using/windows.html#installation-steps	3.1.2. インストール手順	
using/windows.html#removing-the-max-path-limitation	3.1.3. Removing the MAX_PATH Limitation	
using/windows.html#installing-without-ui	3.1.4. インストーラの GUI なしでインストールする	
using/windows.html#installing-without-downloading	3.1.5. ダウンロード不要なインストール	
using/windows.html#modifying-an-install	3.1.6. インストール後の変更	
using/windows.html#other-platforms	3.1.7. ほかのプラットフォーム	
using/windows.html#alternative-bundles	3.2. 別のバンドル	
using/windows.html#configuring-python	3.3. Python を構成する	
using/windows.html#excursus-setting-environment-variables	3.3.1. 補足: 環境変数の設定	
using/windows.html#finding-the-python-executable	3.3.2. Python 実行ファイルを見つける	
using/windows.html#python-launcher-for-windows	3.4. Windows の Python ランチャ	
using/windows.html#getting-started	3.4.1. 最初に	
using/windows.html#from-the-command-line	3.4.1.1. コマンドラインから起動する	
using/windows.html#virtual-environments	3.4.1.2. 仮想環境 (Virtual environments)	
using/windows.html#from-a-script	3.4.1.3. スクリプトから起動する	
using/windows.html#from-file-associations	3.4.1.4. ファイルの関連付けから起動する	
using/windows.html#shebang-lines	3.4.2. シェバン (shebang) 行	
using/windows.html#arguments-in-shebang-lines	3.4.3. シェバン行の引数	
using/windows.html#customization	3.4.4. カスタマイズ	
using/windows.html#customization-via-ini-files	3.4.4.1. INI ファイルによるカスタマイズ	
using/windows.html#customizing-default-python-versions	3.4.4.2. デフォルトのPythonバージョンのカスタマイズ	
using/windows.html#diagnostics	3.4.5. 診断	
using/windows.html#finding-modules	3.5. モジュールの検索	
using/windows.html#additional-modules	3.6. 追加のモジュール	
using/windows.html#pywin32	3.6.1. PyWin32	
using/windows.html#cx-freeze	3.6.2. cx_Freeze	
using/windows.html#wconio	3.6.3. WConio	
using/windows.html#compiling-python-on-windows	3.7. Windows 上で Python をコンパイルする	
using/windows.html#embedded-distribution	3.8. Python 埋め込みのための配布	
using/windows.html#python-application	3.8.1. Python アプリケーション	
using/windows.html#embedding-python	3.8.2. Python の埋め込み	
using/windows.html#other-resources	3.9. その他のリソース	
using/mac.html	4. Macintosh で Python を使う	
using/mac.html#getting-and-installing-macpython	4.1. MacPython の入手とインストール	
using/mac.html#how-to-run-a-python-script	4.1.1. Python スクリプトの実行方法	
using/mac.html#running-scripts-with-a-gui	4.1.2. GUI でスクリプトを実行	
using/mac.html#configuration	4.1.3. Configuration	
using/mac.html#the-ide	4.2. IDE	
using/mac.html#installing-additional-python-packages	4.3. 追加の Python パッケージのインストール	
using/mac.html#gui-programming-on-the-mac	4.4. Mac での GUI プログラミング	
using/mac.html#distributing-python-applications-on-the-mac	4.5. Mac 上の Python アプリケーションの配布	
using/mac.html#other-resources	4.6. 他のリソース	
reference/index.html	Python 言語リファレンス	
reference/introduction.html	1. はじめに	
reference/introduction.html#alternate-implementations	1.1. 別のPythonの実装	
reference/introduction.html#notation	1.2. 本マニュアルにおける表記法	
reference/lexical_analysis.html	2. 字句解析	
reference/lexical_analysis.html#line-structure	2.1. 行構造	
reference/lexical_analysis.html#logical-lines	2.1.1. 論理行 (logical line)	
reference/lexical_analysis.html#physical-lines	2.1.2. 物理行 (physical line)	
reference/lexical_analysis.html#comments	2.1.3. コメント (Comments)	
reference/lexical_analysis.html#encoding-declarations	2.1.4. エンコード宣言 (encoding declaration)	
reference/lexical_analysis.html#explicit-line-joining	2.1.5. 明示的な行継続	
reference/lexical_analysis.html#implicit-line-joining	2.1.6. 非明示的な行継続	
reference/lexical_analysis.html#blank-lines	2.1.7. 空行	
reference/lexical_analysis.html#indentation	2.1.8. インデント	
reference/lexical_analysis.html#whitespace-between-tokens	2.1.9. トークン間の空白	
reference/lexical_analysis.html#other-tokens	2.2. その他のトークン	
reference/lexical_analysis.html#identifiers	2.3. 識別子 (identifier) およびキーワード (keyword)	
reference/lexical_analysis.html#keywords	2.3.1. キーワード (keyword)	
reference/lexical_analysis.html#reserved-classes-of-identifiers	2.3.2. 予約済みの識別子種 (reserved classes of identifiers)	
reference/lexical_analysis.html#literals	2.4. リテラル	
reference/lexical_analysis.html#string-and-bytes-literals	2.4.1. 文字列およびバイト列リテラル	
reference/lexical_analysis.html#string-literal-concatenation	2.4.2. 文字列リテラルの結合 (concatenation)	
reference/lexical_analysis.html#formatted-string-literals	2.4.3. フォーマット済み文字列リテラル	
reference/lexical_analysis.html#numeric-literals	2.4.4. 数値リテラル	
reference/lexical_analysis.html#integer-literals	2.4.5. 整数リテラル	
reference/lexical_analysis.html#floating-point-literals	2.4.6. 浮動小数点数リテラル	
reference/lexical_analysis.html#imaginary-literals	2.4.7. 虚数 (imaginary) リテラル	
reference/lexical_analysis.html#operators	2.5. 演算子	
reference/lexical_analysis.html#delimiters	2.6. デリミタ (delimiter)	
reference/datamodel.html	3. データモデル	
reference/datamodel.html#objects-values-and-types	3.1. オブジェクト、値、および型	
reference/datamodel.html#the-standard-type-hierarchy	3.2. 標準型の階層	
reference/datamodel.html#special-method-names	3.3. 特殊メソッド名	
reference/datamodel.html#basic-customization	3.3.1. 基本的なカスタマイズ	
reference/datamodel.html#customizing-attribute-access	3.3.2. 属性値アクセスをカスタマイズする	
reference/datamodel.html#implementing-descriptors	3.3.2.1. デスクリプタ (descriptor) の実装	
reference/datamodel.html#invoking-descriptors	3.3.2.2. デスクリプタの呼び出し	
reference/datamodel.html#slots	3.3.2.3. __slots__	
reference/datamodel.html#notes-on-using-slots	3.3.2.3.1.__slots__を利用する際の注意	
reference/datamodel.html#customizing-class-creation	3.3.3. クラス生成をカスタマイズする	
reference/datamodel.html#metaclasses	3.3.3.1. Metaclasses	
reference/datamodel.html#determining-the-appropriate-metaclass	3.3.3.2. 適切なメタクラスの決定	
reference/datamodel.html#preparing-the-class-namespace	3.3.3.3. クラスの名前空間の準備	
reference/datamodel.html#executing-the-class-body	3.3.3.4. クラス本体の実行	
reference/datamodel.html#creating-the-class-object	3.3.3.5. クラスオブジェクトの作成	
reference/datamodel.html#metaclass-example	3.3.3.6. メタクラスの例	
reference/datamodel.html#customizing-instance-and-subclass-checks	3.3.4. インスタンスのカスタマイズとサブクラスチェック	
reference/datamodel.html#emulating-callable-objects	3.3.5. 呼び出し可能オブジェクトをエミュレートする	
reference/datamodel.html#emulating-container-types	3.3.6. コンテナをエミュレートする	
reference/datamodel.html#emulating-numeric-types	3.3.7. 数値型をエミュレーションする	
reference/datamodel.html#with-statement-context-managers	3.3.8. with文とコンテキストマネージャ	
reference/datamodel.html#special-method-lookup	3.3.9. 特殊メソッド検索	
reference/datamodel.html#coroutines	3.4. コルーチン	
reference/datamodel.html#awaitable-objects	3.4.1. 待機可能オブジェクト (Awaitable Object)	
reference/datamodel.html#coroutine-objects	3.4.2. コルーチンオブジェクト	
reference/datamodel.html#asynchronous-iterators	3.4.3. 非同期イテレータ (Asynchronous Iterator)	
reference/datamodel.html#asynchronous-context-managers	3.4.4. 非同期コンテクストマネージャ (Asynchronous Context Manager)	
reference/executionmodel.html	4. 実行モデル	
reference/executionmodel.html#structure-of-a-program	4.1. プログラムの構造	
reference/executionmodel.html#naming-and-binding	4.2. 名前づけと束縛 (naming and binding)	
reference/executionmodel.html#binding-of-names	4.2.1. 名前の束縛	
reference/executionmodel.html#resolution-of-names	4.2.2. 名前解決	
reference/executionmodel.html#builtins-and-restricted-execution	4.2.3. 組み込みと制限付きの実行	
reference/executionmodel.html#interaction-with-dynamic-features	4.2.4. 動的な機能とのやりとり	
reference/executionmodel.html#exceptions	4.3. 例外	
reference/import.html	5. インポートシステム	
reference/import.html#importlib	5.1.importlib	
reference/import.html#packages	5.2. パッケージ	
reference/import.html#regular-packages	5.2.1. 通常のパッケージ	
reference/import.html#namespace-packages	5.2.2. 名前空間パッケージ	
reference/import.html#searching	5.3. 検索	
reference/import.html#the-module-cache	5.3.1. モジュールキャッシュ	
reference/import.html#finders-and-loaders	5.3.2. ファインダーとローダー	
reference/import.html#import-hooks	5.3.3. インポートフック	
reference/import.html#the-meta-path	5.3.4. メタパス	
reference/import.html#loading	5.4. ロード	
reference/import.html#loaders	5.4.1. ローダー	
reference/import.html#submodules	5.4.2. サブモジュール	
reference/import.html#module-spec	5.4.3. モジュール仕様	
reference/import.html#import-related-module-attributes	5.4.4. インポート関連のモジュール属性	
reference/import.html#module-path	5.4.5. module.__path__	
reference/import.html#module-reprs	5.4.6. モジュールの repr	
reference/import.html#the-path-based-finder	5.5. パスベース・ファインダー	
reference/import.html#path-entry-finders	5.5.1. パスエントリ・ファインダー	
reference/import.html#path-entry-finder-protocol	5.5.2. パスエントリ・ファインダー・プロトコル	
reference/import.html#replacing-the-standard-import-system	5.6. 標準のインポートシステムを置き換える	
reference/import.html#special-considerations-for-main	5.7. __main__ に対する特別な考慮	
reference/import.html#main-spec	5.7.1. __main__.__spec__	
reference/import.html#open-issues	5.8. 取り掛かり中の問題	
reference/import.html#references	5.9. 参考資料	
reference/expressions.html	6. 式 (expression)	
reference/expressions.html#arithmetic-conversions	6.1. 算術変換 (arithmetic conversion)	
reference/expressions.html#atoms	6.2. アトム、原子的要素 (atom)	
reference/expressions.html#atom-identifiers	6.2.1. 識別子 (identifier、または名前 (name))	
reference/expressions.html#literals	6.2.2. リテラル	
reference/expressions.html#parenthesized-forms	6.2.3. 丸括弧形式 (parenthesized form)	
reference/expressions.html#displays-for-lists-sets-and-dictionaries	6.2.4. リスト、集合、辞書の表示	
reference/expressions.html#list-displays	6.2.5. リスト表現	
reference/expressions.html#set-displays	6.2.6. 集合表現	
reference/expressions.html#dictionary-displays	6.2.7. 辞書表現	
reference/expressions.html#generator-expressions	6.2.8. ジェネレータ式	
reference/expressions.html#yield-expressions	6.2.9. Yield 式	
reference/expressions.html#generator-iterator-methods	6.2.9.1. ジェネレータ-イテレータメソッド	
reference/expressions.html#examples	6.2.9.2. 使用例	
reference/expressions.html#asynchronous-generator-functions	6.2.9.3. Asynchronous generator functions	
reference/expressions.html#asynchronous-generator-iterator-methods	6.2.9.4. Asynchronous generator-iterator methods	
reference/expressions.html#primaries	6.3. プライマリ	
reference/expressions.html#attribute-references	6.3.1. 属性参照	
reference/expressions.html#subscriptions	6.3.2. 添字表記 (subscription)	
reference/expressions.html#slicings	6.3.3. スライス表記 (slicing)	
reference/expressions.html#calls	6.3.4. 呼び出し (call)	
reference/expressions.html#await-expression	6.4. Await 式	
reference/expressions.html#the-power-operator	6.5. べき乗演算 (power operator)	
reference/expressions.html#unary-arithmetic-and-bitwise-operations	6.6. 単項算術演算とビット単位演算 (unary arithmetic and bitwise operation)	
reference/expressions.html#binary-arithmetic-operations	6.7. 二項算術演算 (binary arithmetic operation)	
reference/expressions.html#shifting-operations	6.8. シフト演算 (shifting operation)	
reference/expressions.html#binary-bitwise-operations	6.9. ビット単位演算の二項演算 (binary bitwise operation)	
reference/expressions.html#comparisons	6.10. 比較	
reference/expressions.html#value-comparisons	6.10.1. 値の比較	
reference/expressions.html#membership-test-operations	6.10.2. 帰属検査演算	
reference/expressions.html#is-not	6.10.3. 同一性の比較	
reference/expressions.html#boolean-operations	6.11. ブール演算 (boolean operation)	
reference/expressions.html#conditional-expressions	6.12. 条件式 (Conditional Expressions)	
reference/expressions.html#lambda	6.13. ラムダ (lambda)	
reference/expressions.html#expression-lists	6.14. 式のリスト	
reference/expressions.html#evaluation-order	6.15. 評価順序	
reference/expressions.html#operator-precedence	6.16. 演算子の優先順位	
reference/simple_stmts.html	7. 単純文 (simple statement)	
reference/simple_stmts.html#expression-statements	7.1. 式文 (expression statement)	
reference/simple_stmts.html#assignment-statements	7.2. 代入文 (assignment statement)	
reference/simple_stmts.html#augmented-assignment-statements	7.2.1. 累算代入文 (augmented assignment statement)	
reference/simple_stmts.html#annotated-assignment-statements	7.2.2. アノテート付き代入文 (annotated assignment statements)	
reference/simple_stmts.html#the-assert-statement	7.3.assert文	
reference/simple_stmts.html#the-pass-statement	7.4.pass文	
reference/simple_stmts.html#the-del-statement	7.5.del文	
reference/simple_stmts.html#the-return-statement	7.6.return文	
reference/simple_stmts.html#the-yield-statement	7.7.yield文	
reference/simple_stmts.html#the-raise-statement	7.8.raise文	
reference/simple_stmts.html#the-break-statement	7.9.break文	
reference/simple_stmts.html#the-continue-statement	7.10.continue文	
reference/simple_stmts.html#the-import-statement	7.11.import文	
reference/simple_stmts.html#future-statements	7.11.1. future 文 (future statement)	
reference/simple_stmts.html#the-global-statement	7.12.global文	
reference/simple_stmts.html#the-nonlocal-statement	7.13.nonlocal文	
reference/compound_stmts.html	8. 複合文 (compound statement)	
reference/compound_stmts.html#the-if-statement	8.1.if文	
reference/compound_stmts.html#the-while-statement	8.2.while文	
reference/compound_stmts.html#the-for-statement	8.3.for文	
reference/compound_stmts.html#the-try-statement	8.4.try文	
reference/compound_stmts.html#the-with-statement	8.5.with文	
reference/compound_stmts.html#function-definitions	8.6. 関数定義	
reference/compound_stmts.html#class-definitions	8.7. クラス定義	
reference/compound_stmts.html#coroutines	8.8. コルーチン	
reference/compound_stmts.html#coroutine-function-definition	8.8.1. コルーチン関数定義	
reference/compound_stmts.html#the-async-for-statement	8.8.2.asyncfor文	
reference/compound_stmts.html#the-async-with-statement	8.8.3.asyncwith文	
reference/toplevel_components.html	9. トップレベル要素	
reference/toplevel_components.html#complete-python-programs	9.1. 完全な Python プログラム	
reference/toplevel_components.html#file-input	9.2. ファイル入力	
reference/toplevel_components.html#interactive-input	9.3. 対話的入力	
reference/toplevel_components.html#expression-input	9.4. 式入力	
reference/grammar.html	10. 完全な文法仕様	
library/index.html	Python 標準ライブラリ	
library/intro.html	1. はじめに	
library/functions.html	2. 組み込み関数	
library/constants.html	3. 組み込み定数	
library/constants.html#constants-added-by-the-site-module	3.1.siteモジュールで追加される定数	
library/stdtypes.html	4. 組み込み型	
library/stdtypes.html#truth-value-testing	4.1. 真理値判定	
library/stdtypes.html#boolean-operations-and-or-not	4.2. ブール演算 —and,or,not	
library/stdtypes.html#comparisons	4.3. 比較	
library/stdtypes.html#numeric-types-int-float-complex	4.4. 数値型int,float,complex	
library/stdtypes.html#bitwise-operations-on-integer-types	4.4.1. 整数型におけるビット単位演算	
library/stdtypes.html#additional-methods-on-integer-types	4.4.2. 整数型における追加のメソッド	
library/stdtypes.html#additional-methods-on-float	4.4.3. 浮動小数点数に対する追加のメソッド	
library/stdtypes.html#hashing-of-numeric-types	4.4.4. 数値型のハッシュ化	
library/stdtypes.html#iterator-types	4.5. イテレータ型	
library/stdtypes.html#generator-types	4.5.1. ジェネレータ型	
library/stdtypes.html#sequence-types-list-tuple-range	4.6. シーケンス型 —list,tuple,range	
library/stdtypes.html#common-sequence-operations	4.6.1. 共通のシーケンス演算	
library/stdtypes.html#immutable-sequence-types	4.6.2. イミュータブルなシーケンス型	
library/stdtypes.html#mutable-sequence-types	4.6.3. ミュータブルなシーケンス型	
library/stdtypes.html#lists	4.6.4. リスト型 (list)	
library/stdtypes.html#tuples	4.6.5. タプル型 (tuple)	
library/stdtypes.html#ranges	4.6.6. range	
library/stdtypes.html#text-sequence-type-str	4.7. テキストシーケンス型 —str	
library/stdtypes.html#string-methods	4.7.1. 文字列メソッド	
library/stdtypes.html#printf-style-string-formatting	4.7.2.printf形式の文字列書式化	
library/stdtypes.html#binary-sequence-types-bytes-bytearray-memoryview	4.8. バイナリシーケンス型 —bytes,bytearray,memoryview	
library/stdtypes.html#bytes	4.8.1. bytes	
library/stdtypes.html#bytearray-objects	4.8.2. bytearray オブジェクト	
library/stdtypes.html#bytes-and-bytearray-operations	4.8.3. bytes と bytearray の操作	
library/stdtypes.html#printf-style-bytes-formatting	4.8.4.printf形式での bytes の書式化	
library/stdtypes.html#memory-views	4.8.5. メモリビュー	
library/stdtypes.html#set-types-set-frozenset	4.9. set（集合）型 —set,frozenset	
library/stdtypes.html#mapping-types-dict	4.10. マッピング型 —dict	
library/stdtypes.html#dictionary-view-objects	4.10.1. 辞書ビューオブジェクト	
library/stdtypes.html#context-manager-types	4.11. コンテキストマネージャ型	
library/stdtypes.html#other-built-in-types	4.12. その他の組み込み型	
library/stdtypes.html#modules	4.12.1. モジュール (module)	
library/stdtypes.html#classes-and-class-instances	4.12.2. クラスおよびクラスインスタンス	
library/stdtypes.html#functions	4.12.3. 関数	
library/stdtypes.html#methods	4.12.4. メソッド	
library/stdtypes.html#code-objects	4.12.5. コードオブジェクト	
library/stdtypes.html#type-objects	4.12.6. 型オブジェクト	
library/stdtypes.html#the-null-object	4.12.7. ヌルオブジェクト	
library/stdtypes.html#the-ellipsis-object	4.12.8. Ellipsis オブジェクト	
library/stdtypes.html#the-notimplemented-object	4.12.9. NotImplemented オブジェクト	
library/stdtypes.html#boolean-values	4.12.10. ブール値	
library/stdtypes.html#internal-objects	4.12.11. 内部オブジェクト	
library/stdtypes.html#special-attributes	4.13. 特殊属性	
library/exceptions.html	5. 組み込み例外	
library/exceptions.html#base-classes	5.1. 基底クラス	
library/exceptions.html#concrete-exceptions	5.2. 具象例外	
library/exceptions.html#os-exceptions	5.2.1. OS 例外	
library/exceptions.html#warnings	5.3. 警告	
library/exceptions.html#exception-hierarchy	5.4. 例外のクラス階層	
library/text.html	6. テキスト処理サービス	
library/string.html	6.1.string— 一般的な文字列操作	
library/string.html#string-constants	6.1.1. 文字列定数	
library/string.html#custom-string-formatting	6.1.2. カスタムの文字列書式化	
library/string.html#format-string-syntax	6.1.3. 書式指定文字列の文法	
library/string.html#format-specification-mini-language	6.1.3.1. 書式指定ミニ言語仕様	
library/string.html#format-examples	6.1.3.2. 書式指定例	
library/string.html#template-strings	6.1.4. テンプレート文字列	
library/string.html#helper-functions	6.1.5. ヘルパー関数	
library/re.html	6.2.re— 正規表現操作	
library/re.html#regular-expression-syntax	6.2.1. 正規表現のシンタックス	
library/re.html#module-contents	6.2.2. モジュールコンテンツ	
library/re.html#regular-expression-objects	6.2.3. 正規表現オブジェクト	
library/re.html#match-objects	6.2.4. match オブジェクト	
library/re.html#regular-expression-examples	6.2.5. 正規表現の例	
library/re.html#checking-for-a-pair	6.2.5.1. ペアの確認	
library/re.html#simulating-scanf	6.2.5.2. scanf() をシミュレートする	
library/re.html#search-vs-match	6.2.5.3. search() vs. match()	
library/re.html#making-a-phonebook	6.2.5.4. 電話帳の作成	
library/re.html#text-munging	6.2.5.5. テキストの秘匿	
library/re.html#finding-all-adverbs	6.2.5.6. 全ての副詞を見つける	
library/re.html#finding-all-adverbs-and-their-positions	6.2.5.7. 全ての副詞と、その位置を見つける	
library/re.html#raw-string-notation	6.2.5.8. Raw String記法	
library/re.html#writing-a-tokenizer	6.2.5.9. トークナイザを書く	
library/difflib.html	6.3.difflib— 差分の計算を助ける	
library/difflib.html#sequencematcher-objects	6.3.1. SequenceMatcherオブジェクト	
library/difflib.html#sequencematcher-examples	6.3.2. SequenceMatcher の例	
library/difflib.html#differ-objects	6.3.3. Differ オブジェクト	
library/difflib.html#differ-example	6.3.4. Differ の例	
library/difflib.html#a-command-line-interface-to-difflib	6.3.5. difflib のコマンドラインインタフェース	
library/textwrap.html	6.4.textwrap— テキストの折り返しと詰め込み	
library/unicodedata.html	6.5.unicodedata— Unicode データベース	
library/stringprep.html	6.6.stringprep— インターネットのための文字列調製	
library/readline.html	6.7.readline— GNU readline のインタフェース	
library/readline.html#init-file	6.7.1. 初期化ファイル	
library/readline.html#line-buffer	6.7.2. 行バッファ	
library/readline.html#history-file	6.7.3. 履歴ファイル	
library/readline.html#history-list	6.7.4. 履歴リスト	
library/readline.html#startup-hooks	6.7.5. 開始フック	
library/readline.html#completion	6.7.6. 補完	
library/readline.html#example	6.7.7. 使用例	
library/rlcompleter.html	6.8.rlcompleter— GNU readline向け補完関数	
library/rlcompleter.html#completer-objects	6.8.1. Completerオブジェクト	
library/binary.html	7. バイナリデータ処理	
library/struct.html	7.1.struct— バイト列をパックされたバイナリデータとして解釈する	
library/struct.html#functions-and-exceptions	7.1.1. 関数と例外	
library/struct.html#format-strings	7.1.2. 書式文字列	
library/struct.html#byte-order-size-and-alignment	7.1.2.1. バイトオーダ、サイズ、アラインメント	
library/struct.html#format-characters	7.1.2.2. 書式指定文字	
library/struct.html#examples	7.1.2.3. 使用例	
library/struct.html#classes	7.1.3. クラス	
library/codecs.html	7.2.codecs— codec レジストリと基底クラス	
library/codecs.html#codec-base-classes	7.2.1. Codec 基底クラス	
library/codecs.html#error-handlers	7.2.1.1. エラーハンドラ	
library/codecs.html#stateless-encoding-and-decoding	7.2.1.2. ステートレスなエンコードとデコード	
library/codecs.html#incremental-encoding-and-decoding	7.2.1.3. インクリメンタルなエンコードとデコード	
library/codecs.html#incrementalencoder-objects	7.2.1.3.1. IncrementalEncoder オブジェクト	
library/codecs.html#incrementaldecoder-objects	7.2.1.3.2. IncrementalDecoder オブジェクト	
library/codecs.html#stream-encoding-and-decoding	7.2.1.4. ストリームのエンコードとデコード	
library/codecs.html#streamwriter-objects	7.2.1.4.1. StreamWriter オブジェクト	
library/codecs.html#streamreader-objects	7.2.1.4.2. StreamReader オブジェクト	
library/codecs.html#streamreaderwriter-objects	7.2.1.4.3. StreamReaderWriter オブジェクト	
library/codecs.html#streamrecoder-objects	7.2.1.4.4. StreamRecoder オブジェクト	
library/codecs.html#encodings-and-unicode	7.2.2. エンコーディングと Unicode	
library/codecs.html#standard-encodings	7.2.3. 標準エンコーディング	
library/codecs.html#python-specific-encodings	7.2.4. Python 特有のエンコーディング	
library/codecs.html#text-encodings	7.2.4.1. テキストエンコーディング	
library/codecs.html#binary-transforms	7.2.4.2. バイナリ変換 (Binary Transforms)	
library/codecs.html#text-transforms	7.2.4.3. テキスト変換 (Text Transforms)	
library/codecs.html#module-encodings.idna	7.2.5.encodings.idna— アプリケーションにおける国際化ドメイン名 (IDNA)	
library/codecs.html#module-encodings.mbcs	7.2.6.encodings.mbcs— Windows ANSI コードページ	
library/codecs.html#module-encodings.utf_8_sig	7.2.7.encodings.utf_8_sig— BOM 印付き UTF-8	
library/datatypes.html	8. データ型	
library/datetime.html	8.1.datetime— 基本的な日付型および時間型	
library/datetime.html#available-types	8.1.1. 利用可能なデータ型	
library/datetime.html#timedelta-objects	8.1.2.timedeltaオブジェクト	
library/datetime.html#date-objects	8.1.3.dateオブジェクト	
library/datetime.html#datetime-objects	8.1.4.datetimeオブジェクト	
library/datetime.html#time-objects	8.1.5.timeオブジェクト	
library/datetime.html#tzinfo-objects	8.1.6.tzinfoオブジェクト	
library/datetime.html#timezone-objects	8.1.7.timezoneオブジェクト	
library/datetime.html#strftime-and-strptime-behavior	8.1.8.strftime()とstrptime()の振る舞い	
library/calendar.html	8.2.calendar— 一般的なカレンダーに関する関数群	
library/collections.html	8.3.collections— コンテナデータ型	
library/collections.html#chainmap-objects	8.3.1.ChainMapオブジェクト	
library/collections.html#chainmap-examples-and-recipes	8.3.1.1.ChainMapの例とレシピ	
library/collections.html#counter-objects	8.3.2.Counterオブジェクト	
library/collections.html#deque-objects	8.3.3.dequeオブジェクト	
library/collections.html#deque-recipes	8.3.3.1.dequeのレシピ	
library/collections.html#defaultdict-objects	8.3.4.defaultdictオブジェクト	
library/collections.html#defaultdict-examples	8.3.4.1.defaultdictの使用例	
library/collections.html#namedtuple-factory-function-for-tuples-with-named-fields	8.3.5.namedtuple()名前付きフィールドを持つタプルのファクトリ関数	
library/collections.html#ordereddict-objects	8.3.6.OrderedDictオブジェクト	
library/collections.html#ordereddict-examples-and-recipes	8.3.6.1.OrderedDictの例とレシピ	
library/collections.html#userdict-objects	8.3.7.UserDictオブジェクト	
library/collections.html#userlist-objects	8.3.8.UserListオブジェクト	
library/collections.html#userstring-objects	8.3.9.UserStringオブジェクト	
library/collections.abc.html	8.4.collections.abc— コレクションの抽象基底クラス	
library/collections.abc.html#collections-abstract-base-classes	8.4.1. コレクション抽象基底クラス	
library/heapq.html	8.5.heapq— ヒープキューアルゴリズム	
library/heapq.html#basic-examples	8.5.1. 基本的な例	
library/heapq.html#priority-queue-implementation-notes	8.5.2. 優先度キュー実装の注釈	
library/heapq.html#theory	8.5.3. 理論	
library/bisect.html	8.6.bisect— 配列二分法アルゴリズム	
library/bisect.html#searching-sorted-lists	8.6.1. ソート済みリストの探索	
library/bisect.html#other-examples	8.6.2. その他の使用例	
library/array.html	8.7.array— 効率のよい数値アレイ	
library/weakref.html	8.8.weakref— 弱参照	
library/weakref.html#weak-reference-objects	8.8.1. 弱参照オブジェクト	
library/weakref.html#example	8.8.2. 使用例	
library/weakref.html#finalizer-objects	8.8.3. ファイナライザオブジェクト	
library/weakref.html#comparing-finalizers-with-del-methods	8.8.4. ファイナライザと__del__()メソッドとの比較	
library/types.html	8.9.types— 動的な型生成と組み込み型に対する名前	
library/types.html#dynamic-type-creation	8.9.1. 動的な型生成	
library/types.html#standard-interpreter-types	8.9.2. 標準的なインタプリタ型	
library/types.html#additional-utility-classes-and-functions	8.9.3. 追加のユーティリティクラスと関数	
library/types.html#coroutine-utility-functions	8.9.4. コルーチンユーティリティ関数	
library/copy.html	8.10.copy— 浅いコピーおよび深いコピー操作	
library/pprint.html	8.11.pprint— データ出力の整然化	
library/pprint.html#prettyprinter-objects	8.11.1. PrettyPrinter オブジェクト	
library/pprint.html#example	8.11.2. 使用例	
library/reprlib.html	8.12.reprlib— もう一つのrepr()の実装	
library/reprlib.html#repr-objects	8.12.1. Reprオブジェクト	
library/reprlib.html#subclassing-repr-objects	8.12.2. Reprオブジェクトをサブクラス化する	
library/enum.html	8.13.enum— 列挙型のサポート	
library/enum.html#module-contents	8.13.1. モジュールコンテンツ	
library/enum.html#creating-an-enum	8.13.2. Enum の作成	
library/enum.html#programmatic-access-to-enumeration-members-and-their-attributes	8.13.3. 列挙型メンバーおよびそれらの属性へのプログラム的アクセス	
library/enum.html#duplicating-enum-members-and-values	8.13.4. 列挙型メンバーと値の重複	
library/enum.html#ensuring-unique-enumeration-values	8.13.5. 番号付けの値が同一であることの確認	
library/enum.html#using-automatic-values	8.13.6. Using automatic values	
library/enum.html#iteration	8.13.7. イテレーション	
library/enum.html#comparisons	8.13.8. 比較	
library/enum.html#allowed-members-and-attributes-of-enumerations	8.13.9. 列挙型で許されるメンバーと属性	
library/enum.html#restricted-subclassing-of-enumerations	8.13.10. 列挙型のサブクラス化の制限事項	
library/enum.html#pickling	8.13.11. Pickle 化	
library/enum.html#functional-api	8.13.12. 機能 API	
library/enum.html#derived-enumerations	8.13.13. 派生列挙型	
library/enum.html#intenum	8.13.13.1. IntEnum	
library/enum.html#intflag	8.13.13.2. IntFlag	
library/enum.html#flag	8.13.13.3. Flag	
library/enum.html#others	8.13.13.4. その他	
library/enum.html#interesting-examples	8.13.14. 興味深い例	
library/enum.html#omitting-values	8.13.14.1. Omitting values	
library/enum.html#using-auto	8.13.14.1.1. Usingauto	
library/enum.html#using-object	8.13.14.1.2. Usingobject	
library/enum.html#using-a-descriptive-string	8.13.14.1.3. Using a descriptive string	
library/enum.html#using-a-custom-new	8.13.14.1.4. Using a custom__new__()	
library/enum.html#orderedenum	8.13.14.2. OrderedEnum	
library/enum.html#duplicatefreeenum	8.13.14.3. DuplicateFreeEnum	
library/enum.html#planet	8.13.14.4. Planet	
library/enum.html#how-are-enums-different	8.13.15. Enum はどう違うのか?	
library/enum.html#enum-classes	8.13.15.1. Enum クラス	
library/enum.html#enum-members-aka-instances	8.13.15.2. Enum メンバー (インスタンス)	
library/enum.html#finer-points	8.13.15.3. 細かい点	
library/enum.html#supported-dunder-names	8.13.15.3.1. Supported__dunder__names	
library/enum.html#supported-sunder-names	8.13.15.3.2. Supported_sunder_names	
library/enum.html#enum-member-type	8.13.15.3.3.Enummember type	
library/enum.html#boolean-value-of-enum-classes-and-members	8.13.15.3.4. Boolean value ofEnumclasses and members	
library/enum.html#enum-classes-with-methods	8.13.15.3.5.Enumclasses with methods	
library/enum.html#combining-members-of-flag	8.13.15.3.6. Combining members ofFlag	
library/numeric.html	9. 数値と数学モジュール	
library/numbers.html	9.1.numbers— 数の抽象基底クラス	
library/numbers.html#the-numeric-tower	9.1.1. 数値塔	
library/numbers.html#notes-for-type-implementors	9.1.2. 型実装者のための注意事項	
library/numbers.html#adding-more-numeric-abcs	9.1.2.1. さらに数のABCを追加する	
library/numbers.html#implementing-the-arithmetic-operations	9.1.2.2. 算術演算の実装	
library/math.html	9.2.math— 数学関数	
library/math.html#number-theoretic-and-representation-functions	9.2.1. 数論および数表現の関数	
library/math.html#power-and-logarithmic-functions	9.2.2. 指数関数と対数関数	
library/math.html#trigonometric-functions	9.2.3. 三角関数	
library/math.html#angular-conversion	9.2.4. 角度変換	
library/math.html#hyperbolic-functions	9.2.5. 双曲線関数	
library/math.html#special-functions	9.2.6. 特殊関数	
library/math.html#constants	9.2.7. 定数	
library/cmath.html	9.3.cmath— 複素数のための数学関数	
library/cmath.html#conversions-to-and-from-polar-coordinates	9.3.1. 極座標変換	
library/cmath.html#power-and-logarithmic-functions	9.3.2. 指数関数と対数関数	
library/cmath.html#trigonometric-functions	9.3.3. 三角関数	
library/cmath.html#hyperbolic-functions	9.3.4. 双曲線関数	
library/cmath.html#classification-functions	9.3.5. 類別関数	
library/cmath.html#constants	9.3.6. 定数	
library/decimal.html	9.4.decimal— 十進固定及び浮動小数点数の算術演算	
library/decimal.html#quick-start-tutorial	9.4.1. クイックスタートチュートリアル	
library/decimal.html#decimal-objects	9.4.2. Decimal オブジェクト	
library/decimal.html#logical-operands	9.4.2.1. 論理引数	
library/decimal.html#context-objects	9.4.3. Context オブジェクト	
library/decimal.html#constants	9.4.4. 定数	
library/decimal.html#rounding-modes	9.4.5. 丸めモード	
library/decimal.html#signals	9.4.6. シグナル	
library/decimal.html#floating-point-notes	9.4.7. 浮動小数点数に関する注意	
library/decimal.html#mitigating-round-off-error-with-increased-precision	9.4.7.1. 精度を上げて丸め誤差を抑制する	
library/decimal.html#special-values	9.4.7.2. 特殊値	
library/decimal.html#working-with-threads	9.4.8. スレッドを使った処理	
library/decimal.html#recipes	9.4.9. レシピ	
library/decimal.html#decimal-faq	9.4.10. Decimal FAQ	
library/fractions.html	9.5.fractions— 有理数	
library/random.html	9.6.random— 擬似乱数を生成する	
library/random.html#bookkeeping-functions	9.6.1. 保守 (bookkeeping) 関数	
library/random.html#functions-for-integers	9.6.2. 整数用の関数	
library/random.html#functions-for-sequences	9.6.3. シーケンス用の関数	
library/random.html#real-valued-distributions	9.6.4. 実数分布	
library/random.html#alternative-generator	9.6.5. 他の生成器	
library/random.html#notes-on-reproducibility	9.6.6. 再現性について	
library/random.html#examples-and-recipes	9.6.7. 例とレシピ	
library/statistics.html	9.7.statistics— 数理統計関数	
library/statistics.html#averages-and-measures-of-central-location	9.7.1. 平均及び中心位置の測度	
library/statistics.html#measures-of-spread	9.7.2. 分散の測度	
library/statistics.html#function-details	9.7.3. 関数の詳細	
library/statistics.html#exceptions	9.7.4. 例外	
library/functional.html	10. 関数型プログラミング用モジュール	
library/itertools.html	10.1.itertools— 効率的なループ実行のためのイテレータ生成関数	
library/itertools.html#itertool-functions	10.1.1. Itertool関数	
library/itertools.html#itertools-recipes	10.1.2. Itertools レシピ	
library/functools.html	10.2.functools— 高階関数と呼び出し可能オブジェクトの操作	
library/functools.html#partial-objects	10.2.1.partialオブジェクト	
library/operator.html	10.3.operator— 関数形式の標準演算子	
library/operator.html#mapping-operators-to-functions	10.3.1. 演算子から関数への対応表	
library/operator.html#inplace-operators	10.3.2. インプレース演算子	
library/filesys.html	11. ファイルとディレクトリへのアクセス	
library/pathlib.html	11.1.pathlib— オブジェクト指向のファイルシステムパス	
library/pathlib.html#basic-use	11.1.1. 基本的な使い方	
library/pathlib.html#pure-paths	11.1.2. 純粋パス	
library/pathlib.html#general-properties	11.1.2.1. 全般的な性質	
library/pathlib.html#operators	11.1.2.2. 演算子	
library/pathlib.html#accessing-individual-parts	11.1.2.3. 個別の構成要素へのアクセス	
library/pathlib.html#methods-and-properties	11.1.2.4. メソッドとプロパティ	
library/pathlib.html#concrete-paths	11.1.3. 具象パス	
library/pathlib.html#methods	11.1.3.1. メソッド	
library/os.path.html	11.2.os.path— 共通のパス名操作	
library/fileinput.html	11.3.fileinput— 複数の入力ストリームをまたいだ行の繰り返し処理をサポートする	
library/stat.html	11.4.stat—stat()の結果を解釈する	
library/filecmp.html	11.5.filecmp— ファイルおよびディレクトリの比較	
library/filecmp.html#the-dircmp-class	11.5.1.dircmpクラス	
library/tempfile.html	11.6.tempfile— 一時ファイルやディレクトリの作成	
library/tempfile.html#examples	11.6.1. 使用例	
library/tempfile.html#deprecated-functions-and-variables	11.6.2. 非推奨の関数と変数	
library/glob.html	11.7.glob— Unix 形式のパス名のパターン展開	
library/fnmatch.html	11.8.fnmatch— Unix ファイル名のパターンマッチ	
library/linecache.html	11.9.linecache— テキストラインにランダムアクセスする	
library/shutil.html	11.10.shutil— 高水準のファイル操作	
library/shutil.html#directory-and-files-operations	11.10.1. ディレクトリとファイルの操作	
library/shutil.html#copytree-example	11.10.1.1. copytree の例	
library/shutil.html#rmtree-example	11.10.1.2. rmtree の例	
library/shutil.html#archiving-operations	11.10.2. アーカイブ化操作	
library/shutil.html#archiving-example	11.10.2.1. アーカイブ化の例	
library/shutil.html#querying-the-size-of-the-output-terminal	11.10.3. 出力ターミナルのサイズの取得	
library/macpath.html	11.11.macpath— Mac OS 9 のパス操作関数	
library/persistence.html	12. データの永続化	
library/pickle.html	12.1.pickle— Python オブジェクトの直列化	
library/pickle.html#relationship-to-other-python-modules	12.1.1. 他の Python モジュールとの関係	
library/pickle.html#comparison-with-marshal	12.1.1.1.marshalとの比較	
library/pickle.html#comparison-with-json	12.1.1.2.jsonとの比較	
library/pickle.html#data-stream-format	12.1.2. データストリームの形式	
library/pickle.html#module-interface	12.1.3. モジュールインタフェース	
library/pickle.html#what-can-be-pickled-and-unpickled	12.1.4. pickle 化、非 pickle 化できるもの	
library/pickle.html#pickling-class-instances	12.1.5. クラスインスタンスの pickle 化	
library/pickle.html#persistence-of-external-objects	12.1.5.1. 外部オブジェクトの永続化	
library/pickle.html#dispatch-tables	12.1.5.2. ディスパッチテーブル	
library/pickle.html#handling-stateful-objects	12.1.5.3. 状態を持つオブジェクトの扱い	
library/pickle.html#restricting-globals	12.1.6. グローバル変数を制限する	
library/pickle.html#performance	12.1.7. 性能	
library/pickle.html#examples	12.1.8. 使用例	
library/copyreg.html	12.2.copyreg—pickleサポート関数を登録する	
library/copyreg.html#example	12.2.1. 使用例	
library/shelve.html	12.3.shelve— Python オブジェクトの永続化	
library/shelve.html#restrictions	12.3.1. 制限事項	
library/shelve.html#example	12.3.2. 使用例	
library/marshal.html	12.4.marshal— 内部使用向けの Python オブジェクト整列化	
library/dbm.html	12.5.dbm— Unix “データベース” へのインタフェース	
library/dbm.html#module-dbm.gnu	12.5.1.dbm.gnu— GNU による dbm 拡張	
library/dbm.html#module-dbm.ndbm	12.5.2.dbm.ndbm— ndbm に基づくインタフェース	
library/dbm.html#module-dbm.dumb	12.5.3.dbm.dumb— 可搬性のある DBM 実装	
library/sqlite3.html	12.6.sqlite3— SQLite データベースに対する DB-API 2.0 インタフェース	
library/sqlite3.html#module-functions-and-constants	12.6.1. モジュールの関数と定数	
library/sqlite3.html#connection-objects	12.6.2. Connection オブジェクト	
library/sqlite3.html#cursor-objects	12.6.3. カーソルオブジェクト	
library/sqlite3.html#row-objects	12.6.4. Row オブジェクト	
library/sqlite3.html#exceptions	12.6.5. 例外	
library/sqlite3.html#sqlite-and-python-types	12.6.6. SQLite と Python の型	
library/sqlite3.html#introduction	12.6.6.1. はじめに	
library/sqlite3.html#using-adapters-to-store-additional-python-types-in-sqlite-databases	12.6.6.2. 追加された Python の型を SQLite データベースに格納するために適合関数を使う	
library/sqlite3.html#letting-your-object-adapt-itself	12.6.6.2.1. オブジェクト自身で適合するようにする	
library/sqlite3.html#registering-an-adapter-callable	12.6.6.2.2. 適合関数を登録する	
library/sqlite3.html#converting-sqlite-values-to-custom-python-types	12.6.6.3. SQLite の値を好きな Python 型に変換する	
library/sqlite3.html#default-adapters-and-converters	12.6.6.4. デフォルトの適合関数と変換関数	
library/sqlite3.html#controlling-transactions	12.6.7. トランザクション制御	
library/sqlite3.html#using-sqlite3-efficiently	12.6.8.sqlite3の効率的な使い方	
library/sqlite3.html#using-shortcut-methods	12.6.8.1. ショートカットメソッドを使う	
library/sqlite3.html#accessing-columns-by-name-instead-of-by-index	12.6.8.2. 位置ではなく名前でカラムにアクセスする	
library/sqlite3.html#using-the-connection-as-a-context-manager	12.6.8.3. コネクションをコンテキストマネージャーとして利用する	
library/sqlite3.html#common-issues	12.6.9. 既知の問題	
library/sqlite3.html#multithreading	12.6.9.1. マルチスレッド	
library/archiving.html	13. データ圧縮とアーカイブ	
library/zlib.html	13.1.zlib—gzip互換の圧縮	
library/gzip.html	13.2.gzip—gzipファイルのサポート	
library/gzip.html#examples-of-usage	13.2.1. 使い方の例	
library/bz2.html	13.3.bz2—bzip2圧縮のサポート	
library/bz2.html#de-compression-of-files	13.3.1. ファイルの圧縮/解凍	
library/bz2.html#incremental-de-compression	13.3.2. 逐次圧縮および展開	
library/bz2.html#one-shot-de-compression	13.3.3. 一括圧縮/解凍	
library/lzma.html	13.4.lzma— LZMA アルゴリズムを使用した圧縮	
library/lzma.html#reading-and-writing-compressed-files	13.4.1. 圧縮ファイルへの読み書き	
library/lzma.html#compressing-and-decompressing-data-in-memory	13.4.2. メモリ上での圧縮と展開	
library/lzma.html#miscellaneous	13.4.3. その他	
library/lzma.html#specifying-custom-filter-chains	13.4.4. カスタムフィルタチェインの指定	
library/lzma.html#examples	13.4.5. 使用例	
library/zipfile.html	13.5.zipfile— ZIP アーカイブの処理	
library/zipfile.html#zipfile-objects	13.5.1. ZipFile オブジェクト	
library/zipfile.html#pyzipfile-objects	13.5.2. PyZipFile オブジェクト	
library/zipfile.html#zipinfo-objects	13.5.3. ZipInfo オブジェクト	
library/zipfile.html#command-line-interface	13.5.4. コマンドラインインターフェイス	
library/zipfile.html#command-line-options	13.5.4.1. コマンドラインオプション	
library/tarfile.html	13.6.tarfile— tar アーカイブファイルの読み書き	
library/tarfile.html#tarfile-objects	13.6.1. TarFile オブジェクト	
library/tarfile.html#tarinfo-objects	13.6.2. TarInfo オブジェクト	
library/tarfile.html#command-line-interface	13.6.3. コマンドラインインターフェイス	
library/tarfile.html#command-line-options	13.6.3.1. コマンドラインオプション	
library/tarfile.html#examples	13.6.4. 使用例	
library/tarfile.html#supported-tar-formats	13.6.5. サポートしている tar フォーマット	
library/tarfile.html#unicode-issues	13.6.6. Unicode に関する問題	
library/fileformats.html	14. ファイルフォーマット	
library/csv.html	14.1.csv— CSV ファイルの読み書き	
library/csv.html#module-contents	14.1.1. モジュールコンテンツ	
library/csv.html#dialects-and-formatting-parameters	14.1.2. Dialect クラスと書式化パラメタ	
library/csv.html#reader-objects	14.1.3. reader オブジェクト	
library/csv.html#writer-objects	14.1.4. writer オブジェクト	
library/csv.html#examples	14.1.5. 使用例	
library/configparser.html	14.2.configparser— 設定ファイルのパーサー	
library/configparser.html#quick-start	14.2.1. クイックスタート	
library/configparser.html#supported-datatypes	14.2.2. サポートされるデータ型	
library/configparser.html#fallback-values	14.2.3. 代替値	
library/configparser.html#supported-ini-file-structure	14.2.4. サポートするINI ファイルの構造	
library/configparser.html#interpolation-of-values	14.2.5. 値の補間	
library/configparser.html#mapping-protocol-access	14.2.6. マップ型プロトコルアクセス	
library/configparser.html#customizing-parser-behaviour	14.2.7. パーサーの振る舞いをカスタマイズする	
library/configparser.html#legacy-api-examples	14.2.8. レガシーな API の例	
library/configparser.html#configparser-objects	14.2.9. ConfigParser オブジェクト	
library/configparser.html#rawconfigparser-objects	14.2.10. RawConfigParser オブジェクト	
library/configparser.html#exceptions	14.2.11. 例外	
library/netrc.html	14.3.netrc— netrc ファイルの処理	
library/netrc.html#netrc-objects	14.3.1. netrc オブジェクト	
library/xdrlib.html	14.4.xdrlib— XDR データのエンコードおよびデコード	
library/xdrlib.html#packer-objects	14.4.1. Packer オブジェクト	
library/xdrlib.html#unpacker-objects	14.4.2. Unpacker オブジェクト	
library/xdrlib.html#exceptions	14.4.3. 例外	
library/plistlib.html	14.5.plistlib— Mac OS X.plistファイルの生成と解析	
library/plistlib.html#examples	14.5.1. 使用例	
library/crypto.html	15. 暗号関連のサービス	
library/hashlib.html	15.1.hashlib— セキュアハッシュおよびメッセージダイジェスト	
library/hashlib.html#hash-algorithms	15.1.1. ハッシュアルゴリズム	
library/hashlib.html#shake-variable-length-digests	15.1.2. SHAKE 可変長ダイジェスト	
library/hashlib.html#key-derivation	15.1.3. 鍵導出	
library/hashlib.html#blake2	15.1.4. BLAKE2	
library/hashlib.html#creating-hash-objects	15.1.4.1. ハッシュオブジェクトの作成	
library/hashlib.html#constants	15.1.4.2. 定数	
library/hashlib.html#examples	15.1.4.3. 使用例	
library/hashlib.html#simple-hashing	15.1.4.3.1. 簡単なハッシュ化	
library/hashlib.html#using-different-digest-sizes	15.1.4.3.2. Using different digest sizes	
library/hashlib.html#keyed-hashing	15.1.4.3.3. Keyed hashing	
library/hashlib.html#randomized-hashing	15.1.4.3.4. Randomized hashing	
library/hashlib.html#personalization	15.1.4.3.5. Personalization	
library/hashlib.html#tree-mode	15.1.4.3.6. ツリーモード	
library/hashlib.html#credits	15.1.4.4. クレジット:	
library/hmac.html	15.2.hmac— メッセージ認証のための鍵付きハッシュ化	
library/secrets.html	15.3.secrets— 機密を扱うために安全な乱数を生成する	
library/secrets.html#random-numbers	15.3.1. 乱数	
library/secrets.html#generating-tokens	15.3.2. トークンの生成	
library/secrets.html#how-many-bytes-should-tokens-use	15.3.2.1. トークンは何バイト使うべきか？	
library/secrets.html#other-functions	15.3.3. その他の関数	
library/secrets.html#recipes-and-best-practices	15.3.4. レシピとベストプラクティス	
library/allos.html	16. 汎用オペレーティングシステムサービス	
library/os.html	16.1.os— 雑多なオペレーティングシステムインタフェース	
library/os.html#file-names-command-line-arguments-and-environment-variables	16.1.1. ファイル名、コマンドライン引数、および環境変数	
library/os.html#process-parameters	16.1.2. プロセスのパラメーター	
library/os.html#file-object-creation	16.1.3. ファイルオブジェクトの生成	
library/os.html#file-descriptor-operations	16.1.4. ファイル記述子の操作	
library/os.html#querying-the-size-of-a-terminal	16.1.4.1. ターミナルのサイズの問い合わせ	
library/os.html#inheritance-of-file-descriptors	16.1.4.2. ファイル記述子の継承	
library/os.html#files-and-directories	16.1.5. ファイルとディレクトリ	
library/os.html#linux-extended-attributes	16.1.5.1. Linux 拡張属性	
library/os.html#process-management	16.1.6. プロセス管理	
library/os.html#interface-to-the-scheduler	16.1.7. スケジューラーへのインターフェイス	
library/os.html#miscellaneous-system-information	16.1.8. 雑多なシステム情報	
library/os.html#random-numbers	16.1.9. 乱数	
library/io.html	16.2.io— ストリームを扱うコアツール	
library/io.html#overview	16.2.1. 概要	
library/io.html#text-i-o	16.2.1.1. テキスト I/O	
library/io.html#binary-i-o	16.2.1.2. バイナリ I/O	
library/io.html#raw-i-o	16.2.1.3. Raw I/O	
library/io.html#high-level-module-interface	16.2.2. 高水準のモジュールインターフェイス	
library/io.html#in-memory-streams	16.2.2.1. インメモリー ストリーム	
library/io.html#class-hierarchy	16.2.3. クラス階層	
library/io.html#i-o-base-classes	16.2.3.1. I/O 基底クラス	
library/io.html#raw-file-i-o	16.2.3.2. 生ファイルI/O	
library/io.html#buffered-streams	16.2.3.3. バッファ付きストリーム	
library/io.html#id1	16.2.3.4. テキスト I/O	
library/io.html#performance	16.2.4. 性能	
library/io.html#id2	16.2.4.1. バイナリ I/O	
library/io.html#id3	16.2.4.2. テキスト I/O	
library/io.html#multi-threading	16.2.4.3. マルチスレッディング	
library/io.html#reentrancy	16.2.4.4. リエントラント性	
library/time.html	16.3.time— 時刻データへのアクセスと変換	
library/argparse.html	16.4.argparse— コマンドラインオプション、引数、サブコマンドのパーサー	
library/argparse.html#example	16.4.1. 使用例	
library/argparse.html#creating-a-parser	16.4.1.1. パーサーを作る	
library/argparse.html#adding-arguments	16.4.1.2. 引数を追加する	
library/argparse.html#parsing-arguments	16.4.1.3. 引数を解析する	
library/argparse.html#argumentparser-objects	16.4.2. ArgumentParser オブジェクト	
library/argparse.html#prog	16.4.2.1.prog	
library/argparse.html#usage	16.4.2.2. usage	
library/argparse.html#description	16.4.2.3. description	
library/argparse.html#epilog	16.4.2.4. epilog	
library/argparse.html#parents	16.4.2.5. parents	
library/argparse.html#formatter-class	16.4.2.6. formatter_class	
library/argparse.html#prefix-chars	16.4.2.7. prefix_chars	
library/argparse.html#fromfile-prefix-chars	16.4.2.8. fromfile_prefix_chars	
library/argparse.html#argument-default	16.4.2.9. argument_default	
library/argparse.html#allow-abbrev	16.4.2.10. allow_abbrev	
library/argparse.html#conflict-handler	16.4.2.11. conflict_handler	
library/argparse.html#add-help	16.4.2.12. add_help	
library/argparse.html#the-add-argument-method	16.4.3. add_argument() メソッド	
library/argparse.html#name-or-flags	16.4.3.1. name または flags	
library/argparse.html#action	16.4.3.2. action	
library/argparse.html#nargs	16.4.3.3. nargs	
library/argparse.html#const	16.4.3.4. const	
library/argparse.html#default	16.4.3.5. default	
library/argparse.html#type	16.4.3.6. type	
library/argparse.html#choices	16.4.3.7. choices	
library/argparse.html#required	16.4.3.8. required	
library/argparse.html#help	16.4.3.9. help	
library/argparse.html#metavar	16.4.3.10. metavar	
library/argparse.html#dest	16.4.3.11. dest	
library/argparse.html#action-classes	16.4.3.12. Action クラス	
library/argparse.html#the-parse-args-method	16.4.4. parse_args() メソッド	
library/argparse.html#option-value-syntax	16.4.4.1. オプション値の文法	
library/argparse.html#invalid-arguments	16.4.4.2. 不正な引数	
library/argparse.html#arguments-containing	16.4.4.3.-を含む引数	
library/argparse.html#argument-abbreviations-prefix-matching	16.4.4.4. 引数の短縮形 (先頭文字でのマッチング)	
library/argparse.html#beyond-sys-argv	16.4.4.5.sys.argv以外	
library/argparse.html#the-namespace-object	16.4.4.6. Namespace オブジェクト	
library/argparse.html#other-utilities	16.4.5. その他のユーティリティ	
library/argparse.html#sub-commands	16.4.5.1. サブコマンド	
library/argparse.html#filetype-objects	16.4.5.2. FileType オブジェクト	
library/argparse.html#argument-groups	16.4.5.3. 引数グループ	
library/argparse.html#mutual-exclusion	16.4.5.4. 相互排他	
library/argparse.html#parser-defaults	16.4.5.5. パーサーのデフォルト値	
library/argparse.html#printing-help	16.4.5.6. ヘルプの表示	
library/argparse.html#partial-parsing	16.4.5.7. 部分解析	
library/argparse.html#customizing-file-parsing	16.4.5.8. ファイル解析のカスタマイズ	
library/argparse.html#exiting-methods	16.4.5.9. 終了メソッド	
library/argparse.html#upgrading-optparse-code	16.4.6. optparse からのアップグレード	
library/getopt.html	16.5.getopt— C 言語スタイルのコマンドラインオプションパーサ	
library/logging.html	16.6.logging— Python 用ロギング機能	
library/logging.html#logger-objects	16.6.1. ロガーオブジェクト	
library/logging.html#logging-levels	16.6.2. ロギングレベル	
library/logging.html#handler-objects	16.6.3. ハンドラオブジェクト	
library/logging.html#formatter-objects	16.6.4. フォーマッタオブジェクト	
library/logging.html#filter-objects	16.6.5. フィルタオブジェクト	
library/logging.html#logrecord-objects	16.6.6. LogRecord オブジェクト	
library/logging.html#logrecord-attributes	16.6.7. LogRecord 属性	
library/logging.html#loggeradapter-objects	16.6.8. LoggerAdapter オブジェクト	
library/logging.html#thread-safety	16.6.9. スレッドセーフ性	
library/logging.html#module-level-functions	16.6.10. モジュールレベルの関数	
library/logging.html#module-level-attributes	16.6.11. モジュールレベル属性	
library/logging.html#integration-with-the-warnings-module	16.6.12. warnings モジュールとの統合	
library/logging.config.html	16.7.logging.config— ロギングの環境設定	
library/logging.config.html#configuration-functions	16.7.1. 環境設定のための関数	
library/logging.config.html#configuration-dictionary-schema	16.7.2. 環境設定辞書スキーマ	
library/logging.config.html#dictionary-schema-details	16.7.2.1. 辞書スキーマの詳細	
library/logging.config.html#incremental-configuration	16.7.2.2. 増分設定	
library/logging.config.html#object-connections	16.7.2.3. オブジェクトの接続	
library/logging.config.html#user-defined-objects	16.7.2.4. ユーザ定義オブジェクト	
library/logging.config.html#access-to-external-objects	16.7.2.5. 外部オブジェクトへのアクセス	
library/logging.config.html#access-to-internal-objects	16.7.2.6. 内部オブジェクトへのアクセス	
library/logging.config.html#import-resolution-and-custom-importers	16.7.2.7. インポート解決とカスタムインポーター	
library/logging.config.html#configuration-file-format	16.7.3. 環境設定ファイルの書式	
library/logging.handlers.html	16.8.logging.handlers— ロギングハンドラ	
library/logging.handlers.html#streamhandler	16.8.1. StreamHandler	
library/logging.handlers.html#filehandler	16.8.2. FileHandler	
library/logging.handlers.html#nullhandler	16.8.3. NullHandler	
library/logging.handlers.html#watchedfilehandler	16.8.4. WatchedFileHandler	
library/logging.handlers.html#baserotatinghandler	16.8.5. BaseRotatingHandler	
library/logging.handlers.html#rotatingfilehandler	16.8.6. RotatingFileHandler	
library/logging.handlers.html#timedrotatingfilehandler	16.8.7. TimedRotatingFileHandler	
library/logging.handlers.html#sockethandler	16.8.8. SocketHandler	
library/logging.handlers.html#datagramhandler	16.8.9. DatagramHandler	
library/logging.handlers.html#sysloghandler	16.8.10. SysLogHandler	
library/logging.handlers.html#nteventloghandler	16.8.11. NTEventLogHandler	
library/logging.handlers.html#smtphandler	16.8.12. SMTPHandler	
library/logging.handlers.html#memoryhandler	16.8.13. MemoryHandler	
library/logging.handlers.html#httphandler	16.8.14. HTTPHandler	
library/logging.handlers.html#queuehandler	16.8.15. QueueHandler	
library/logging.handlers.html#queuelistener	16.8.16. QueueListener	
library/getpass.html	16.9.getpass— 可搬性のあるパスワード入力機構	
library/curses.html	16.10.curses— 文字セル表示を扱うための端末操作	
library/curses.html#functions	16.10.1. 関数	
library/curses.html#window-objects	16.10.2. Window オブジェクト	
library/curses.html#constants	16.10.3. 定数	
library/curses.html#module-curses.textpad	16.11.curses.textpad— curses プログラムのためのテキスト入力ウィジェット	
library/curses.html#textbox-objects	16.11.1. Textbox オブジェクト	
library/curses.ascii.html	16.12.curses.ascii— ASCII 文字に関するユーティリティ	
library/curses.panel.html	16.13.curses.panel— curses のためのパネルスタック拡張	
library/curses.panel.html#functions	16.13.1. 関数	
library/curses.panel.html#panel-objects	16.13.2. Panel オブジェクト	
library/platform.html	16.14.platform—  実行中プラットフォームの固有情報を参照する	
library/platform.html#cross-platform	16.14.1. クロスプラットフォーム	
library/platform.html#java-platform	16.14.2. Java プラットフォーム	
library/platform.html#windows-platform	16.14.3. Windows プラットフォーム	
library/platform.html#win95-98-specific	16.14.3.1. Win95/98 固有	
library/platform.html#mac-os-platform	16.14.4. Mac OS プラットフォーム	
library/platform.html#unix-platforms	16.14.5. Unix プラットフォーム	
library/errno.html	16.15.errno— 標準の errno システムシンボル	
library/ctypes.html	16.16.ctypes— Pythonのための外部関数ライブラリ	
library/ctypes.html#ctypes-tutorial	16.16.1. ctypesチュートリアル	
library/ctypes.html#loading-dynamic-link-libraries	16.16.1.1. 動的リンクライブラリをロードする	
library/ctypes.html#accessing-functions-from-loaded-dlls	16.16.1.2. ロードしたdllから関数にアクセスする	
library/ctypes.html#calling-functions	16.16.1.3. 関数を呼び出す	
library/ctypes.html#fundamental-data-types	16.16.1.4. 基本データ型	
library/ctypes.html#calling-functions-continued	16.16.1.5. 続・関数を呼び出す	
library/ctypes.html#calling-functions-with-your-own-custom-data-types	16.16.1.6. 自作のデータ型とともに関数を呼び出す	
library/ctypes.html#specifying-the-required-argument-types-function-prototypes	16.16.1.7. 要求される引数の型を指定する (関数プロトタイプ)	
library/ctypes.html#return-types	16.16.1.8. 戻り値の型	
library/ctypes.html#passing-pointers-or-passing-parameters-by-reference	16.16.1.9. ポインタを渡す(または、パラメータの参照渡し)	
library/ctypes.html#structures-and-unions	16.16.1.10. 構造体と共用体	
library/ctypes.html#structure-union-alignment-and-byte-order	16.16.1.11. 構造体/共用体アライメントとバイトオーダー	
library/ctypes.html#bit-fields-in-structures-and-unions	16.16.1.12. 構造体と共用体におけるビットフィールド	
library/ctypes.html#arrays	16.16.1.13. 配列	
library/ctypes.html#pointers	16.16.1.14. ポインタ	
library/ctypes.html#type-conversions	16.16.1.15. 型変換	
library/ctypes.html#incomplete-types	16.16.1.16. 不完全型	
library/ctypes.html#callback-functions	16.16.1.17. コールバック関数	
library/ctypes.html#accessing-values-exported-from-dlls	16.16.1.18. dllからエクスポートされた値へアクセスする	
library/ctypes.html#surprises	16.16.1.19. びっくり仰天	
library/ctypes.html#variable-sized-data-types	16.16.1.20. 可変サイズのデータ型	
library/ctypes.html#ctypes-reference	16.16.2. ctypesリファレンス	
library/ctypes.html#finding-shared-libraries	16.16.2.1. 共有ライブラリを見つける	
library/ctypes.html#loading-shared-libraries	16.16.2.2. 共有ライブラリをロードする	
library/ctypes.html#foreign-functions	16.16.2.3. 外部関数	
library/ctypes.html#function-prototypes	16.16.2.4. 関数プロトタイプ	
library/ctypes.html#utility-functions	16.16.2.5. ユーティリティー関数	
library/ctypes.html#data-types	16.16.2.6. データ型	
library/ctypes.html#ctypes-fundamental-data-types-2	16.16.2.7. 基本データ型	
library/ctypes.html#structured-data-types	16.16.2.8. 構造化データ型	
library/ctypes.html#arrays-and-pointers	16.16.2.9. 配列とポインタ	
library/concurrency.html	17. 並行実行	
library/threading.html	17.1.threading— スレッドベースの並列処理	
library/threading.html#thread-local-data	17.1.1. スレッドローカルデータ	
library/threading.html#thread-objects	17.1.2. Thread オブジェクト	
library/threading.html#lock-objects	17.1.3. Lock オブジェクト	
library/threading.html#rlock-objects	17.1.4. RLock オブジェクト	
library/threading.html#condition-objects	17.1.5. Condition オブジェクト	
library/threading.html#semaphore-objects	17.1.6. Semaphore オブジェクト	
library/threading.html#semaphore-example	17.1.6.1.Semaphoreの例	
library/threading.html#event-objects	17.1.7. Event オブジェクト	
library/threading.html#timer-objects	17.1.8. Timer オブジェクト	
library/threading.html#barrier-objects	17.1.9. バリアオブジェクト	
library/threading.html#using-locks-conditions-and-semaphores-in-the-with-statement	17.1.10.with文でのロック・条件変数・セマフォの使い方	
library/multiprocessing.html	17.2.multiprocessing— プロセスベースの並列処理	
library/multiprocessing.html#introduction	17.2.1. はじめに	
library/multiprocessing.html#the-process-class	17.2.1.1.Processクラス	
library/multiprocessing.html#contexts-and-start-methods	17.2.1.2. コンテキストと開始方式	
library/multiprocessing.html#exchanging-objects-between-processes	17.2.1.3. プロセス間でのオブジェクト交換	
library/multiprocessing.html#synchronization-between-processes	17.2.1.4. プロセス間の同期	
library/multiprocessing.html#sharing-state-between-processes	17.2.1.5. プロセス間での状態の共有	
library/multiprocessing.html#using-a-pool-of-workers	17.2.1.6. ワーカープロセスのプールを使用	
library/multiprocessing.html#reference	17.2.2. リファレンス	
library/multiprocessing.html#process-and-exceptions	17.2.2.1.Processクラスと例外	
library/multiprocessing.html#pipes-and-queues	17.2.2.2. パイプ (Pipe) とキュー (Queue)	
library/multiprocessing.html#miscellaneous	17.2.2.3. その他	
library/multiprocessing.html#connection-objects	17.2.2.4. Connection オブジェクト	
library/multiprocessing.html#synchronization-primitives	17.2.2.5. 同期プリミティブ	
library/multiprocessing.html#shared-ctypes-objects	17.2.2.6. 共有ctypesオブジェクト	
library/multiprocessing.html#module-multiprocessing.sharedctypes	17.2.2.6.1.multiprocessing.sharedctypesモジュール	
library/multiprocessing.html#managers	17.2.2.7. マネージャー	
library/multiprocessing.html#customized-managers	17.2.2.7.1. カスタマイズされたマネージャー	
library/multiprocessing.html#using-a-remote-manager	17.2.2.7.2. リモートマネージャーを使用する	
library/multiprocessing.html#proxy-objects	17.2.2.8. Proxy オブジェクト	
library/multiprocessing.html#cleanup	17.2.2.8.1. クリーンアップ	
library/multiprocessing.html#module-multiprocessing.pool	17.2.2.9. プロセスプール	
library/multiprocessing.html#module-multiprocessing.connection	17.2.2.10. リスナーとクライアント	
library/multiprocessing.html#address-formats	17.2.2.10.1. アドレスフォーマット	
library/multiprocessing.html#authentication-keys	17.2.2.11. 認証キー	
library/multiprocessing.html#logging	17.2.2.12. ログ記録	
library/multiprocessing.html#module-multiprocessing.dummy	17.2.2.13.multiprocessing.dummyモジュール	
library/multiprocessing.html#programming-guidelines	17.2.3. プログラミングガイドライン	
library/multiprocessing.html#all-start-methods	17.2.3.1. すべての開始方式について	
library/multiprocessing.html#the-spawn-and-forkserver-start-methods	17.2.3.2. 開始方式がspawnおよびforkserverの場合	
library/multiprocessing.html#examples	17.2.4. 使用例	
library/concurrent.html	17.3.concurrentパッケージ	
library/concurrent.futures.html	17.4.concurrent.futures– 並列タスク実行	
library/concurrent.futures.html#executor-objects	17.4.1. Executor オブジェクト	
library/concurrent.futures.html#threadpoolexecutor	17.4.2. ThreadPoolExecutor	
library/concurrent.futures.html#threadpoolexecutor-example	17.4.2.1. ThreadPoolExecutor の例	
library/concurrent.futures.html#processpoolexecutor	17.4.3. ProcessPoolExecutor	
library/concurrent.futures.html#processpoolexecutor-example	17.4.3.1. ProcessPoolExecutor の例	
library/concurrent.futures.html#future-objects	17.4.4. Future オブジェクト	
library/concurrent.futures.html#module-functions	17.4.5. モジュール関数	
library/concurrent.futures.html#exception-classes	17.4.6. 例外クラス	
library/subprocess.html	17.5.subprocess— サブプロセス管理	
library/subprocess.html#using-the-subprocess-module	17.5.1.subprocessモジュールを使う	
library/subprocess.html#frequently-used-arguments	17.5.1.1. よく使われる引数	
library/subprocess.html#popen-constructor	17.5.1.2. Popen コンストラクター	
library/subprocess.html#exceptions	17.5.1.3. 例外	
library/subprocess.html#security-considerations	17.5.2. セキュリティで考慮すべき点	
library/subprocess.html#popen-objects	17.5.3. Popen オブジェクト	
library/subprocess.html#windows-popen-helpers	17.5.4. Windows Popen ヘルパー	
library/subprocess.html#constants	17.5.4.1. 定数	
library/subprocess.html#older-high-level-api	17.5.5. 古い高水準 API	
library/subprocess.html#replacing-older-functions-with-the-subprocess-module	17.5.6. 古い関数をsubprocessモジュールで置き換える	
library/subprocess.html#replacing-bin-sh-shell-backquote	17.5.6.1. /bin/sh シェルのバッククォートを置き換える	
library/subprocess.html#replacing-shell-pipeline	17.5.6.2. シェルのパイプラインを置き換える	
library/subprocess.html#replacing-os-system	17.5.6.3.os.system()を置き換える	
library/subprocess.html#replacing-the-os-spawn-family	17.5.6.4.os.spawn関数群を置き換える	
library/subprocess.html#replacing-os-popen-os-popen2-os-popen3	17.5.6.5.os.popen(),os.popen2(),os.popen3()を置き換える	
library/subprocess.html#replacing-functions-from-the-popen2-module	17.5.6.6.popen2モジュールの関数群を置き換える	
library/subprocess.html#legacy-shell-invocation-functions	17.5.7. レガシーなシェル呼び出し関数	
library/subprocess.html#notes	17.5.8. 注釈	
library/subprocess.html#converting-an-argument-sequence-to-a-string-on-windows	17.5.8.1. Windows における引数シーケンスから文字列への変換	
library/sched.html	17.6.sched— イベントスケジューラ	
library/sched.html#scheduler-objects	17.6.1. スケジューラオブジェクト	
library/queue.html	17.7.queue— 同期キュークラス	
library/queue.html#queue-objects	17.7.1. キューオブジェクト	
library/dummy_threading.html	17.8.dummy_threading—threadingの代替モジュール	
library/_thread.html	17.9._thread— 低水準の スレッド API	
library/_dummy_thread.html	17.10._dummy_thread—_threadの代替モジュール	
library/ipc.html	18. プロセス間通信とネットワーク	
library/socket.html	18.1.socket— 低水準ネットワークインターフェース	
library/socket.html#socket-families	18.1.1. ソケットファミリー	
library/socket.html#module-contents	18.1.2. モジュールの内容	
library/socket.html#exceptions	18.1.2.1. 例外	
library/socket.html#constants	18.1.2.2. 定数	
library/socket.html#functions	18.1.2.3. 関数	
library/socket.html#creating-sockets	18.1.2.3.1. ソケットの作成	
library/socket.html#other-functions	18.1.2.3.2. その他の関数	
library/socket.html#socket-objects	18.1.3. socket オブジェクト	
library/socket.html#notes-on-socket-timeouts	18.1.4. ソケットタイムアウトの注意事項	
library/socket.html#timeouts-and-the-connect-method	18.1.4.1. タイムアウトとconnectメソッド	
library/socket.html#timeouts-and-the-accept-method	18.1.4.2. タイムアウトとacceptメソッド	
library/socket.html#example	18.1.5. 使用例	
library/ssl.html	18.2.ssl— ソケットオブジェクトに対する TLS/SSL ラッパー	
library/ssl.html#functions-constants-and-exceptions	18.2.1. 関数、定数、例外	
library/ssl.html#socket-creation	18.2.1.1. ソケットの作成	
library/ssl.html#context-creation	18.2.1.2. コンテキストの作成	
library/ssl.html#random-generation	18.2.1.3. 乱数生成	
library/ssl.html#certificate-handling	18.2.1.4. 証明書の取り扱い	
library/ssl.html#constants	18.2.1.5. 定数	
library/ssl.html#ssl-sockets	18.2.2. SSL ソケット	
library/ssl.html#ssl-contexts	18.2.3. SSL コンテキスト	
library/ssl.html#certificates	18.2.4. 証明書	
library/ssl.html#certificate-chains	18.2.4.1. 証明書チェイン	
library/ssl.html#ca-certificates	18.2.4.2. CA 証明書	
library/ssl.html#combined-key-and-certificate	18.2.4.3. 秘密鍵と証明書を一緒にする	
library/ssl.html#self-signed-certificates	18.2.4.4. 自己署名証明書	
library/ssl.html#examples	18.2.5. 使用例	
library/ssl.html#testing-for-ssl-support	18.2.5.1. SSLサポートをテストする	
library/ssl.html#client-side-operation	18.2.5.2. クライアントサイドの処理	
library/ssl.html#server-side-operation	18.2.5.3. サーバーサイドの処理	
library/ssl.html#notes-on-non-blocking-sockets	18.2.6. ノンブロッキングソケットについての注意事項	
library/ssl.html#memory-bio-support	18.2.7. メモリ BIO サポート	
library/ssl.html#ssl-session	18.2.8. SSL session	
library/ssl.html#security-considerations	18.2.9. セキュリティで考慮すべき点	
library/ssl.html#best-defaults	18.2.9.1. 最善のデフォルト値	
library/ssl.html#manual-settings	18.2.9.2. 手動での設定	
library/ssl.html#verifying-certificates	18.2.9.2.1. 証明書の検証	
library/ssl.html#protocol-versions	18.2.9.2.2. プロトコルのバージョン	
library/ssl.html#cipher-selection	18.2.9.2.3. 暗号の選択	
library/ssl.html#multi-processing	18.2.9.3. マルチプロセス化	
library/select.html	18.3.select— I/O 処理の完了を待機する	
library/select.html#dev-poll-polling-objects	18.3.1./dev/pollポーリングオブジェクト	
library/select.html#edge-and-level-trigger-polling-epoll-objects	18.3.2. エッジおよびレベルトリガポーリング (epoll) オブジェクト	
library/select.html#polling-objects	18.3.3. ポーリングオブジェクト	
library/select.html#kqueue-objects	18.3.4. kqueue オブジェクト	
library/select.html#kevent-objects	18.3.5. kevent オブジェクト	
library/selectors.html	18.4.selectors— 高水準の I/O 多重化	
library/selectors.html#introduction	18.4.1. はじめに	
library/selectors.html#classes	18.4.2. クラス	
library/selectors.html#examples	18.4.3. 使用例	
library/asyncio.html	18.5.asyncio— 非同期 I/O、イベントループ、コルーチンおよびタスク	
library/asyncio-eventloop.html	18.5.1. 基底イベントループ	
library/asyncio-eventloop.html#run-an-event-loop	18.5.1.1. イベントループの実行	
library/asyncio-eventloop.html#calls	18.5.1.2. 呼び出し (call)	
library/asyncio-eventloop.html#delayed-calls	18.5.1.3. 遅延呼び出し	
library/asyncio-eventloop.html#futures	18.5.1.4. Futures	
library/asyncio-eventloop.html#tasks	18.5.1.5. タスク	
library/asyncio-eventloop.html#creating-connections	18.5.1.6. コネクションの作成	
library/asyncio-eventloop.html#creating-listening-connections	18.5.1.7. 待ち受けコネクションの作成	
library/asyncio-eventloop.html#watch-file-descriptors	18.5.1.8. ファイル記述子の監視	
library/asyncio-eventloop.html#low-level-socket-operations	18.5.1.9. 低水準のソケット操作	
library/asyncio-eventloop.html#resolve-host-name	18.5.1.10. ホスト名の解決	
library/asyncio-eventloop.html#connect-pipes	18.5.1.11. パイプの接続	
library/asyncio-eventloop.html#unix-signals	18.5.1.12. UNIX シグナル	
library/asyncio-eventloop.html#executor	18.5.1.13. 実行者	
library/asyncio-eventloop.html#error-handling-api	18.5.1.14. エラーハンドリング API	
library/asyncio-eventloop.html#debug-mode	18.5.1.15. デバッグモード	
library/asyncio-eventloop.html#server	18.5.1.16. サーバー	
library/asyncio-eventloop.html#handle	18.5.1.17. ハンドル	
library/asyncio-eventloop.html#event-loop-examples	18.5.1.18. イベントループの例	
library/asyncio-eventloop.html#hello-world-with-call-soon	18.5.1.18.1. call_soon() を使った Hello World	
library/asyncio-eventloop.html#display-the-current-date-with-call-later	18.5.1.18.2. call_later() で現在の日時を表示する	
library/asyncio-eventloop.html#watch-a-file-descriptor-for-read-events	18.5.1.18.3. 読み込みイベント用ファイル記述子の監視	
library/asyncio-eventloop.html#set-signal-handlers-for-sigint-and-sigterm	18.5.1.18.4. SIGINT および SIGTERM 用のシグナルハンドラーの設定	
library/asyncio-eventloops.html	18.5.2. イベントループ	
library/asyncio-eventloops.html#event-loop-functions	18.5.2.1. イベントループ関数	
library/asyncio-eventloops.html#available-event-loops	18.5.2.2. 利用可能なイベントループ	
library/asyncio-eventloops.html#platform-support	18.5.2.3. プラットフォームでのサポート	
library/asyncio-eventloops.html#windows	18.5.2.3.1. Windows	
library/asyncio-eventloops.html#mac-os-x	18.5.2.3.2. Mac OS X	
library/asyncio-eventloops.html#event-loop-policies-and-the-default-policy	18.5.2.4. イベントループのポリシーとデフォルトポリシー	
library/asyncio-eventloops.html#event-loop-policy-interface	18.5.2.5. イベントループポリシーインターフェース	
library/asyncio-eventloops.html#access-to-the-global-loop-policy	18.5.2.6. グローバルループポリシーへのアクセス	
library/asyncio-task.html	18.5.3. タスクとコルーチン	
library/asyncio-task.html#coroutines	18.5.3.1. コルーチン	
library/asyncio-task.html#example-hello-world-coroutine	18.5.3.1.1. 例: Hello World コルーチン	
library/asyncio-task.html#example-coroutine-displaying-the-current-date	18.5.3.1.2. 例: 現在の日時を表示するコルーチン	
library/asyncio-task.html#example-chain-coroutines	18.5.3.1.3. 例: コルーチンのチェーン	
library/asyncio-task.html#invalidstateerror	18.5.3.2. InvalidStateError	
library/asyncio-task.html#timeouterror	18.5.3.3. TimeoutError	
library/asyncio-task.html#future	18.5.3.4. フューチャー	
library/asyncio-task.html#example-future-with-run-until-complete	18.5.3.4.1. 例: run_until_complete() を使ったフューチャ	
library/asyncio-task.html#example-future-with-run-forever	18.5.3.4.2. 例: run_forever() を使ったフューチャ	
library/asyncio-task.html#task	18.5.3.5. タスク	
library/asyncio-task.html#example-parallel-execution-of-tasks	18.5.3.5.1. 例: タスクの並列実行	
library/asyncio-task.html#task-functions	18.5.3.6. タスク関数	
library/asyncio-protocol.html	18.5.4. トランスポートとプロトコル (コールバックベースの API)	
library/asyncio-protocol.html#transports	18.5.4.1. トランスポート	
library/asyncio-protocol.html#basetransport	18.5.4.1.1. BaseTransport	
library/asyncio-protocol.html#readtransport	18.5.4.1.2. ReadTransport	
library/asyncio-protocol.html#writetransport	18.5.4.1.3. WriteTransport	
library/asyncio-protocol.html#datagramtransport	18.5.4.1.4. DatagramTransport	
library/asyncio-protocol.html#basesubprocesstransport	18.5.4.1.5. BaseSubprocessTransport	
library/asyncio-protocol.html#protocols	18.5.4.2. プロトコル	
library/asyncio-protocol.html#protocol-classes	18.5.4.2.1. プロトコルクラス群	
library/asyncio-protocol.html#connection-callbacks	18.5.4.2.2. コネクションコールバック	
library/asyncio-protocol.html#streaming-protocols	18.5.4.2.3. ストリーミングプロトコル	
library/asyncio-protocol.html#datagram-protocols	18.5.4.2.4. データグラムプロトコル	
library/asyncio-protocol.html#flow-control-callbacks	18.5.4.2.5. フロー制御コールバック	
library/asyncio-protocol.html#coroutines-and-protocols	18.5.4.2.6. コルーチンとプロトコル	
library/asyncio-protocol.html#protocol-examples	18.5.4.3. プロトコルの例	
library/asyncio-protocol.html#tcp-echo-client-protocol	18.5.4.3.1. TCP Echo クライアントプロトコル	
library/asyncio-protocol.html#tcp-echo-server-protocol	18.5.4.3.2. TCP Echo サーバープロトコル	
library/asyncio-protocol.html#udp-echo-client-protocol	18.5.4.3.3. UDP Echo クライアントプロトコル	
library/asyncio-protocol.html#udp-echo-server-protocol	18.5.4.3.4. UDP Echo サーバープロトコル	
library/asyncio-protocol.html#register-an-open-socket-to-wait-for-data-using-a-protocol	18.5.4.3.5. プロトコルを使ってデータを待つオープンソケットの登録	
library/asyncio-stream.html	18.5.5. ストリーム (コルーチンベースの API)	
library/asyncio-stream.html#stream-functions	18.5.5.1. ストリーム関数	
library/asyncio-stream.html#streamreader	18.5.5.2. StreamReader	
library/asyncio-stream.html#streamwriter	18.5.5.3. StreamWriter	
library/asyncio-stream.html#streamreaderprotocol	18.5.5.4. StreamReaderProtocol	
library/asyncio-stream.html#incompletereaderror	18.5.5.5. IncompleteReadError	
library/asyncio-stream.html#limitoverrunerror	18.5.5.6. LimitOverrunError	
library/asyncio-stream.html#stream-examples	18.5.5.7. ストリームの例	
library/asyncio-stream.html#tcp-echo-client-using-streams	18.5.5.7.1. ストリームを使った TCP Echo クライアント	
library/asyncio-stream.html#tcp-echo-server-using-streams	18.5.5.7.2. ストリームを使った TCP Echo サーバー	
library/asyncio-stream.html#get-http-headers	18.5.5.7.3. HTTP ヘッダーの取得	
library/asyncio-stream.html#register-an-open-socket-to-wait-for-data-using-streams	18.5.5.7.4. ストリームを使ってデータを待つオープンソケットの登録	
library/asyncio-subprocess.html	18.5.6. サブプロセス	
library/asyncio-subprocess.html#windows-event-loop	18.5.6.1. Windows でのイベントループ	
library/asyncio-subprocess.html#create-a-subprocess-high-level-api-using-process	18.5.6.2. サブプロセスの作成: Process を使用した高水準 API	
library/asyncio-subprocess.html#create-a-subprocess-low-level-api-using-subprocess-popen	18.5.6.3. サブプロセスの作成: subprocess.Popen を使用した低水準 API	
library/asyncio-subprocess.html#constants	18.5.6.4. 定数	
library/asyncio-subprocess.html#process	18.5.6.5. Process	
library/asyncio-subprocess.html#subprocess-and-threads	18.5.6.6. サブプロセスとスレッド	
library/asyncio-subprocess.html#subprocess-examples	18.5.6.7. サブプロセスの例	
library/asyncio-subprocess.html#subprocess-using-transport-and-protocol	18.5.6.7.1. トランスポートおよびプロトコルを使用したサブプロセス	
library/asyncio-subprocess.html#subprocess-using-streams	18.5.6.7.2. ストリームを使用したサブプロセス	
library/asyncio-sync.html	18.5.7. 同期プリミティブ	
library/asyncio-sync.html#locks	18.5.7.1. ロック	
library/asyncio-sync.html#lock	18.5.7.1.1. Lock	
library/asyncio-sync.html#event	18.5.7.1.2. Event	
library/asyncio-sync.html#condition	18.5.7.1.3. Condition	
library/asyncio-sync.html#semaphores	18.5.7.2. セマフォ	
library/asyncio-sync.html#semaphore	18.5.7.2.1. Semaphore	
library/asyncio-sync.html#boundedsemaphore	18.5.7.2.2. BoundedSemaphore	
library/asyncio-queue.html	18.5.8. キュー	
library/asyncio-queue.html#queue	18.5.8.1. Queue	
library/asyncio-queue.html#priorityqueue	18.5.8.2. PriorityQueue	
library/asyncio-queue.html#lifoqueue	18.5.8.3. LifoQueue	
library/asyncio-queue.html#exceptions	18.5.8.3.1. 例外	
library/asyncio-dev.html	18.5.9. asyncio での開発	
library/asyncio-dev.html#debug-mode-of-asyncio	18.5.9.1. asyncio のデバッグモード	
library/asyncio-dev.html#cancellation	18.5.9.2. 取り消し	
library/asyncio-dev.html#concurrency-and-multithreading	18.5.9.3. 並行処理とマルチスレッド処理	
library/asyncio-dev.html#handle-blocking-functions-correctly	18.5.9.4. ブロック関数を正しく扱う	
library/asyncio-dev.html#logging	18.5.9.5. ログ記録	
library/asyncio-dev.html#detect-coroutine-objects-never-scheduled	18.5.9.6. スケジュールされなかったコルーチンオブジェクトの検出	
library/asyncio-dev.html#detect-exceptions-never-consumed	18.5.9.7. 未処理の例外の検出	
library/asyncio-dev.html#chain-coroutines-correctly	18.5.9.8. コルーチンを正しくチェーンする	
library/asyncio-dev.html#pending-task-destroyed	18.5.9.9. 未完のタスクの破棄	
library/asyncio-dev.html#close-transports-and-event-loops	18.5.9.10. トランスポートとイベントループを閉じる	
library/asyncore.html	18.6.asyncore— 非同期ソケットハンドラ	
library/asyncore.html#asyncore-example-basic-http-client	18.6.1. asyncoreの例: 簡単なHTTPクライアント	
library/asyncore.html#asyncore-example-basic-echo-server	18.6.2. 基本的な echo サーバーの例	
library/asynchat.html	18.7.asynchat— 非同期ソケットコマンド/レスポンスハンドラ	
library/asynchat.html#asynchat-example	18.7.1. asynchat 使用例	
library/signal.html	18.8.signal— 非同期イベントにハンドラを設定する	
library/signal.html#general-rules	18.8.1. 一般的なルール	
library/signal.html#execution-of-python-signal-handlers	18.8.1.1. Python のシグナルハンドラの実行	
library/signal.html#signals-and-threads	18.8.1.2. シグナルとスレッド	
library/signal.html#module-contents	18.8.2. モジュールの内容	
library/signal.html#example	18.8.3. 使用例	
library/mmap.html	18.9.mmap— メモリマップファイル	
library/netdata.html	19. インターネット上のデータの操作	
library/email.html	19.1.email— 電子メールと MIME 処理のためのパッケージ	
library/email.message.html	19.1.1.email.message: 電子メールメッセージの表現	
library/email.parser.html	19.1.2.email.parser: 電子メールメッセージのパース	
library/email.parser.html#feedparser-api	19.1.2.1. FeedParser API	
library/email.parser.html#parser-api	19.1.2.2. Parser API	
library/email.parser.html#additional-notes	19.1.2.3. 追記事項	
library/email.generator.html	19.1.3.email.generator: MIME 文書の生成	
library/email.policy.html	19.1.4.email.policy: ポリシーオブジェクト	
library/email.errors.html	19.1.5.email.errors: 例外及び欠陥クラス	
library/email.headerregistry.html	19.1.6.email.headerregistry: カスタムヘッダーオブジェクト	
library/email.contentmanager.html	19.1.7.email.contentmanager: MIME 内容の管理	
library/email.contentmanager.html#content-manager-instances	19.1.7.1. Content Manager Instances	
library/email.examples.html	19.1.8.email: 使用例	
library/email.compat32-message.html	19.1.9.email.message.Message: Representing an email message using thecompat32API	
library/email.mime.html	19.1.10.email.mime: メールと MIME オブジェクトを一から作成	
library/email.header.html	19.1.11.email.header: 国際化されたヘッダ	
library/email.charset.html	19.1.12.email.charset: 文字集合の表現	
library/email.encoders.html	19.1.13.email.encoders: エンコーダ	
library/email.util.html	19.1.14.email.utils: 多方面のユーティリティ	
library/email.iterators.html	19.1.15.email.iterators: イテレータ	
library/json.html	19.2.json— JSON エンコーダおよびデコーダ	
library/json.html#basic-usage	19.2.1. 基本的な使い方	
library/json.html#encoders-and-decoders	19.2.2. エンコーダとデコーダ	
library/json.html#exceptions	19.2.3. 例外	
library/json.html#standard-compliance-and-interoperability	19.2.4. 標準への準拠と互換性	
library/json.html#character-encodings	19.2.4.1. 文字エンコーディング	
library/json.html#infinite-and-nan-number-values	19.2.4.2. 無限および NaN の数値	
library/json.html#repeated-names-within-an-object	19.2.4.3. オブジェクト中に重複した名前の扱い	
library/json.html#top-level-non-object-non-array-values	19.2.4.4. トップレベルの非オブジェクト、非配列の値の扱い	
library/json.html#implementation-limitations	19.2.4.5. 実装の制限	
library/json.html#module-json.tool	19.2.5. コマンドラインインターフェイス	
library/json.html#command-line-options	19.2.5.1. コマンドラインオプション	
library/mailcap.html	19.3.mailcap— mailcap ファイルの操作	
library/mailbox.html	19.4.mailbox— 様々な形式のメールボックス操作	
library/mailbox.html#mailbox-objects	19.4.1.Mailboxオブジェクト	
library/mailbox.html#maildir	19.4.1.1.Maildir	
library/mailbox.html#mbox	19.4.1.2.mbox	
library/mailbox.html#mh	19.4.1.3.MH	
library/mailbox.html#babyl	19.4.1.4.Babyl	
library/mailbox.html#mmdf	19.4.1.5.MMDF	
library/mailbox.html#message-objects	19.4.2.Messageobjects	
library/mailbox.html#maildirmessage	19.4.2.1.MaildirMessage	
library/mailbox.html#mboxmessage	19.4.2.2.mboxMessage	
library/mailbox.html#mhmessage	19.4.2.3.MHMessage	
library/mailbox.html#babylmessage	19.4.2.4.BabylMessage	
library/mailbox.html#mmdfmessage	19.4.2.5.MMDFMessage	
library/mailbox.html#exceptions	19.4.3. 例外	
library/mailbox.html#examples	19.4.4. 使用例	
library/mimetypes.html	19.5.mimetypes— ファイル名を MIME 型へマップする	
library/mimetypes.html#mimetypes-objects	19.5.1. Mime 型オブジェクト	
library/base64.html	19.6.base64— Base16, Base32, Base64, Base85 データの符号化	
library/binhex.html	19.7.binhex— binhex4 形式ファイルのエンコードおよびデコード	
library/binhex.html#notes	19.7.1. 注釈	
library/binascii.html	19.8.binascii— バイナリデータと ASCII データとの間での変換	
library/quopri.html	19.9.quopri— MIME quoted-printable 形式データのエンコードおよびデコード	
library/uu.html	19.10.uu— uuencode形式のエンコードとデコード	
library/markup.html	20. 構造化マークアップツール	
library/html.html	20.1.html— HyperText Markup Language のサポート	
library/html.parser.html	20.2.html.parser— HTML および XHTML のシンプルなパーサー	
library/html.parser.html#example-html-parser-application	20.2.1. HTML パーサーアプリケーションの例	
library/html.parser.html#htmlparser-methods	20.2.2.HTMLParserメソッド	
library/html.parser.html#examples	20.2.3. 使用例	
library/html.entities.html	20.3.html.entities— HTML 一般実体の定義	
library/xml.html	20.4. XMLを扱うモジュール群	
library/xml.html#xml-vulnerabilities	20.4.1. XML の脆弱性	
library/xml.html#the-defusedxml-and-defusedexpat-packages	20.4.2.defusedxmlおよびdefusedexpatパッケージ	
library/xml.etree.elementtree.html	20.5.xml.etree.ElementTree— ElementTree XML API	
library/xml.etree.elementtree.html#tutorial	20.5.1. チュートリアル	
library/xml.etree.elementtree.html#xml-tree-and-elements	20.5.1.1. XML 木構造と要素	
library/xml.etree.elementtree.html#parsing-xml	20.5.1.2. XML の解析	
library/xml.etree.elementtree.html#pull-api-for-non-blocking-parsing	20.5.1.3. 非ブロックパースのためのプル API	
library/xml.etree.elementtree.html#finding-interesting-elements	20.5.1.4. 関心ある要素の検索	
library/xml.etree.elementtree.html#modifying-an-xml-file	20.5.1.5. XML ファイルの編集	
library/xml.etree.elementtree.html#building-xml-documents	20.5.1.6. XML 文書の構築	
library/xml.etree.elementtree.html#parsing-xml-with-namespaces	20.5.1.7. 名前空間のある XML の解析	
library/xml.etree.elementtree.html#additional-resources	20.5.1.8. その他の情報	
library/xml.etree.elementtree.html#xpath-support	20.5.2. XPath サポート	
library/xml.etree.elementtree.html#example	20.5.2.1. 使用例	
library/xml.etree.elementtree.html#supported-xpath-syntax	20.5.2.2. サポートされている XPath 構文	
library/xml.etree.elementtree.html#reference	20.5.3. リファレンス	
library/xml.etree.elementtree.html#functions	20.5.3.1. 関数	
library/xml.etree.elementtree.html#element-objects	20.5.3.2. Element オブジェクト	
library/xml.etree.elementtree.html#elementtree-objects	20.5.3.3. ElementTree オブジェクト	
library/xml.etree.elementtree.html#qname-objects	20.5.3.4. QName オブジェクト	
library/xml.etree.elementtree.html#treebuilder-objects	20.5.3.5. TreeBuilder オブジェクト	
library/xml.etree.elementtree.html#xmlparser-objects	20.5.3.6. XMLParser オブジェクト	
library/xml.etree.elementtree.html#xmlpullparser-objects	20.5.3.7. XMLPullParser オブジェクト	
library/xml.etree.elementtree.html#exceptions	20.5.3.8. 例外	
library/xml.dom.html	20.6.xml.dom— 文書オブジェクトモデル (DOM) API	
library/xml.dom.html#module-contents	20.6.1. モジュールコンテンツ	
library/xml.dom.html#objects-in-the-dom	20.6.2. DOM 内のオブジェクト	
library/xml.dom.html#domimplementation-objects	20.6.2.1. DOMImplementation オブジェクト	
library/xml.dom.html#node-objects	20.6.2.2. Node オブジェクト	
library/xml.dom.html#nodelist-objects	20.6.2.3. NodeList オブジェクト	
library/xml.dom.html#documenttype-objects	20.6.2.4. DocumentType オブジェクト	
library/xml.dom.html#document-objects	20.6.2.5. Document オブジェクト	
library/xml.dom.html#element-objects	20.6.2.6. Element オブジェクト	
library/xml.dom.html#attr-objects	20.6.2.7. Attr オブジェクト	
library/xml.dom.html#namednodemap-objects	20.6.2.8. NamedNodeMap Objects	
library/xml.dom.html#comment-objects	20.6.2.9. Comment オブジェクト	
library/xml.dom.html#text-and-cdatasection-objects	20.6.2.10. Text オブジェクトおよび CDATASection オブジェクト	
library/xml.dom.html#processinginstruction-objects	20.6.2.11. ProcessingInstruction オブジェクト	
library/xml.dom.html#exceptions	20.6.2.12. 例外	
library/xml.dom.html#conformance	20.6.3. 適合性	
library/xml.dom.html#type-mapping	20.6.3.1. 型の対応付け	
library/xml.dom.html#accessor-methods	20.6.3.2. アクセサメソッド	
library/xml.dom.minidom.html	20.7.xml.dom.minidom— 最小限の DOM の実装	
library/xml.dom.minidom.html#dom-objects	20.7.1. DOM オブジェクト	
library/xml.dom.minidom.html#dom-example	20.7.2. DOM の例	
library/xml.dom.minidom.html#minidom-and-the-dom-standard	20.7.3. minidom と DOM 標準	
library/xml.dom.pulldom.html	20.8.xml.dom.pulldom— 部分的な DOM ツリー構築のサポート	
library/xml.dom.pulldom.html#domeventstream-objects	20.8.1. DOMEventStream オブジェクト	
library/xml.sax.html	20.9.xml.sax— SAX2 パーサのサポート	
library/xml.sax.html#saxexception-objects	20.9.1. SAXException オブジェクト	
library/xml.sax.handler.html	20.10.xml.sax.handler— SAX ハンドラの基底クラス	
library/xml.sax.handler.html#contenthandler-objects	20.10.1. ContentHandler オブジェクト	
library/xml.sax.handler.html#dtdhandler-objects	20.10.2. DTDHandler オブジェクト	
library/xml.sax.handler.html#entityresolver-objects	20.10.3. EntityResolver オブジェクト	
library/xml.sax.handler.html#errorhandler-objects	20.10.4. ErrorHandler オブジェクト	
library/xml.sax.utils.html	20.11.xml.sax.saxutils— SAX ユーティリティ	
library/xml.sax.reader.html	20.12.xml.sax.xmlreader— XML パーサのインタフェース	
library/xml.sax.reader.html#xmlreader-objects	20.12.1. XMLReader オブジェクト	
library/xml.sax.reader.html#incrementalparser-objects	20.12.2. IncrementalParser オブジェクト	
library/xml.sax.reader.html#locator-objects	20.12.3. Locator オブジェクト	
library/xml.sax.reader.html#inputsource-objects	20.12.4. InputSource オブジェクト	
library/xml.sax.reader.html#the-attributes-interface	20.12.5.Attributesインタフェース	
library/xml.sax.reader.html#the-attributesns-interface	20.12.6.AttributesNSインタフェース	
library/pyexpat.html	20.13.xml.parsers.expat— Expat を使った高速な XML 解析	
library/pyexpat.html#xmlparser-objects	20.13.1. XMLParser オブジェクト	
library/pyexpat.html#expaterror-exceptions	20.13.2. ExpatError 例外	
library/pyexpat.html#example	20.13.3. 使用例	
library/pyexpat.html#module-xml.parsers.expat.model	20.13.4. 内容モデルの記述	
library/pyexpat.html#module-xml.parsers.expat.errors	20.13.5. Expat エラー定数	
library/internet.html	21. インターネットプロトコルとサポート	
library/webbrowser.html	21.1.webbrowser— 便利なウェブブラウザコントローラー	
library/webbrowser.html#browser-controller-objects	21.1.1. ブラウザコントローラーオブジェクト	
library/cgi.html	21.2.cgi— CGI (ゲートウェイインタフェース規格) のサポート	
library/cgi.html#introduction	21.2.1. はじめに	
library/cgi.html#using-the-cgi-module	21.2.2. cgi モジュールを使う	
library/cgi.html#higher-level-interface	21.2.3. 高水準インタフェース	
library/cgi.html#functions	21.2.4. 関数	
library/cgi.html#caring-about-security	21.2.5. セキュリティへの配慮	
library/cgi.html#installing-your-cgi-script-on-a-unix-system	21.2.6. CGI スクリプトを Unix システムにインストールする	
library/cgi.html#testing-your-cgi-script	21.2.7. CGI スクリプトをテストする	
library/cgi.html#debugging-cgi-scripts	21.2.8. CGI スクリプトをデバッグする	
library/cgi.html#common-problems-and-solutions	21.2.9. よくある問題と解決法	
library/cgitb.html	21.3.cgitb— CGI スクリプトのトレースバック管理機構	
library/wsgiref.html	21.4.wsgiref— WSGI ユーティリティとリファレンス実装	
library/wsgiref.html#module-wsgiref.util	21.4.1.wsgiref.util– WSGI 環境のユーティリティ	
library/wsgiref.html#module-wsgiref.headers	21.4.2.wsgiref.headers– WSGI レスポンスヘッダツール群	
library/wsgiref.html#module-wsgiref.simple_server	21.4.3.wsgiref.simple_server– シンプルな WSGI HTTP サーバ	
library/wsgiref.html#module-wsgiref.validate	21.4.4.wsgiref.validate— WSGI 準拠チェッカー	
library/wsgiref.html#module-wsgiref.handlers	21.4.5.wsgiref.handlers– サーバ／ゲートウェイのベースクラス	
library/wsgiref.html#examples	21.4.6. 使用例	
library/urllib.html	21.5.urllib— URL を扱うモジュール群	
library/urllib.request.html	21.6.urllib.request— URL を開くための拡張可能なライブラリ	
library/urllib.request.html#request-objects	21.6.1. Request オブジェクト	
library/urllib.request.html#openerdirector-objects	21.6.2. OpenerDirector オブジェクト	
library/urllib.request.html#basehandler-objects	21.6.3. BaseHandler オブジェクト	
library/urllib.request.html#httpredirecthandler-objects	21.6.4. HTTPRedirectHandler オブジェクト	
library/urllib.request.html#httpcookieprocessor-objects	21.6.5. HTTPCookieProcessor オブジェクト	
library/urllib.request.html#proxyhandler-objects	21.6.6. ProxyHandler オブジェクト	
library/urllib.request.html#httppasswordmgr-objects	21.6.7. HTTPPasswordMgr オブジェクト	
library/urllib.request.html#httppasswordmgrwithpriorauth-objects	21.6.8. HTTPPasswordMgrWithPriorAuth オブジェクト	
library/urllib.request.html#abstractbasicauthhandler-objects	21.6.9. AbstractBasicAuthHandler オブジェクト	
library/urllib.request.html#httpbasicauthhandler-objects	21.6.10. HTTPBasicAuthHandler オブジェクト	
library/urllib.request.html#proxybasicauthhandler-objects	21.6.11. ProxyBasicAuthHandler オブジェクト	
library/urllib.request.html#abstractdigestauthhandler-objects	21.6.12. AbstractDigestAuthHandler オブジェクト	
library/urllib.request.html#httpdigestauthhandler-objects	21.6.13. HTTPDigestAuthHandler オブジェクト	
library/urllib.request.html#proxydigestauthhandler-objects	21.6.14. ProxyDigestAuthHandler オブジェクト	
library/urllib.request.html#httphandler-objects	21.6.15. HTTPHandler オブジェクト	
library/urllib.request.html#httpshandler-objects	21.6.16. HTTPSHandler オブジェクト	
library/urllib.request.html#filehandler-objects	21.6.17. FileHandler オブジェクト	
library/urllib.request.html#datahandler-objects	21.6.18. DataHandler オブジェクト	
library/urllib.request.html#ftphandler-objects	21.6.19. FTPHandler オブジェクト	
library/urllib.request.html#cacheftphandler-objects	21.6.20. CacheFTPHandler オブジェクト	
library/urllib.request.html#unknownhandler-objects	21.6.21. UnknownHandler オブジェクト	
library/urllib.request.html#httperrorprocessor-objects	21.6.22. HTTPErrorProcessor オブジェクト	
library/urllib.request.html#examples	21.6.23. 使用例	
library/urllib.request.html#legacy-interface	21.6.24. レガシーインターフェース	
library/urllib.request.html#urllib-request-restrictions	21.6.25.urllib.requestの制限事項	
library/urllib.request.html#module-urllib.response	21.7.urllib.response— urllib で使用するレスポンスクラス	
library/urllib.parse.html	21.8.urllib.parse— URL を解析して構成要素にする	
library/urllib.parse.html#url-parsing	21.8.1. URL の解析	
library/urllib.parse.html#parsing-ascii-encoded-bytes	21.8.2. ASCII エンコードバイト列の解析	
library/urllib.parse.html#structured-parse-results	21.8.3. 構造化された解析結果	
library/urllib.parse.html#url-quoting	21.8.4. URL のクオート	
library/urllib.error.html	21.9.urllib.error— urllib.request が投げる例外	
library/urllib.robotparser.html	21.10.urllib.robotparser—  robots.txt のためのパーザ	
library/http.html	21.11.http— HTTP モジュール群	
library/http.html#http-status-codes	21.11.1. HTTP ステータスコード	
library/http.client.html	21.12.http.client— HTTP プロトコルクライアント	
library/http.client.html#httpconnection-objects	21.12.1. HTTPConnection オブジェクト	
library/http.client.html#httpresponse-objects	21.12.2. HTTPResponse オブジェクト	
library/http.client.html#examples	21.12.3. 使用例	
library/http.client.html#httpmessage-objects	21.12.4. HTTPMessage オブジェクト	
library/ftplib.html	21.13.ftplib— FTPプロトコルクライアント	
library/ftplib.html#ftp-objects	21.13.1. FTP オブジェクト	
library/ftplib.html#ftp-tls-objects	21.13.2. FTP_TLS オブジェクト	
library/poplib.html	21.14.poplib— POP3 プロトコルクライアント	
library/poplib.html#pop3-objects	21.14.1. POP3 オブジェクト	
library/poplib.html#pop3-example	21.14.2. POP3 の例	
library/imaplib.html	21.15.imaplib— IMAP4 プロトコルクライアント	
library/imaplib.html#imap4-objects	21.15.1. IMAP4 オブジェクト	
library/imaplib.html#imap4-example	21.15.2. IMAP4 の使用例	
library/nntplib.html	21.16.nntplib— NNTP プロトコルクライアント	
library/nntplib.html#nntp-objects	21.16.1. NNTP オブジェクト	
library/nntplib.html#attributes	21.16.1.1. 属性	
library/nntplib.html#methods	21.16.1.2. メソッド	
library/nntplib.html#utility-functions	21.16.2. ユーティリティー関数	
library/smtplib.html	21.17.smtplib— SMTP プロトコルクライアント	
library/smtplib.html#smtp-objects	21.17.1. SMTP オブジェクト	
library/smtplib.html#smtp-example	21.17.2. SMTP 使用例	
library/smtpd.html	21.18.smtpd— SMTP サーバー	
library/smtpd.html#smtpserver-objects	21.18.1. SMTPServer オブジェクト	
library/smtpd.html#debuggingserver-objects	21.18.2. DebuggingServer オブジェクト	
library/smtpd.html#pureproxy-objects	21.18.3. PureProxy オブジェクト	
library/smtpd.html#mailmanproxy-objects	21.18.4. MailmanProxy Objects	
library/smtpd.html#smtpchannel-objects	21.18.5. SMTPChannel オブジェクト	
library/telnetlib.html	21.19.telnetlib— Telnet クライアント	
library/telnetlib.html#telnet-objects	21.19.1. Telnet オブジェクト	
library/telnetlib.html#telnet-example	21.19.2. Telnet Example	
library/uuid.html	21.20.uuid— RFC 4122 に準拠した UUID オブジェクト	
library/uuid.html#example	21.20.1. 使用例	
library/socketserver.html	21.21.socketserver— ネットワークサーバのフレームワーク	
library/socketserver.html#server-creation-notes	21.21.1. サーバ生成に関するノート	
library/socketserver.html#server-objects	21.21.2. Serverオブジェクト	
library/socketserver.html#request-handler-objects	21.21.3. Request Handler Objects	
library/socketserver.html#examples	21.21.4. 使用例	
library/socketserver.html#socketserver-tcpserver-example	21.21.4.1.socketserver.TCPServerの例	
library/socketserver.html#socketserver-udpserver-example	21.21.4.2.socketserver.UDPServerの例	
library/socketserver.html#asynchronous-mixins	21.21.4.3. 非同期処理の Mix-in	
library/http.server.html	21.22.http.server— HTTP サーバ	
library/http.cookies.html	21.23.http.cookies— HTTPの状態管理	
library/http.cookies.html#cookie-objects	21.23.1. Cookieオブジェクト	
library/http.cookies.html#morsel-objects	21.23.2. Morselオブジェクト	
library/http.cookies.html#example	21.23.3. 使用例	
library/http.cookiejar.html	21.24.http.cookiejar— HTTP クライアント用の Cookie 処理	
library/http.cookiejar.html#cookiejar-and-filecookiejar-objects	21.24.1. CookieJar および FileCookieJar オブジェクト	
library/http.cookiejar.html#filecookiejar-subclasses-and-co-operation-with-web-browsers	21.24.2. FileCookieJar のサブクラスと web ブラウザとの連携	
library/http.cookiejar.html#cookiepolicy-objects	21.24.3. CookiePolicy オブジェクト	
library/http.cookiejar.html#defaultcookiepolicy-objects	21.24.4. DefaultCookiePolicy オブジェクト	
library/http.cookiejar.html#cookie-objects	21.24.5. Cookieオブジェクト	
library/http.cookiejar.html#examples	21.24.6. 使用例	
library/xmlrpc.html	21.25.xmlrpc— XMLRPC サーバーとクライアントモジュール	
library/xmlrpc.client.html	21.26.xmlrpc.client— XML-RPC クライアントアクセス	
library/xmlrpc.client.html#serverproxy-objects	21.26.1. ServerProxy オブジェクト	
library/xmlrpc.client.html#datetime-objects	21.26.2. DateTime オブジェクト	
library/xmlrpc.client.html#binary-objects	21.26.3. Binary オブジェクト	
library/xmlrpc.client.html#fault-objects	21.26.4. Fault オブジェクト	
library/xmlrpc.client.html#protocolerror-objects	21.26.5. ProtocolError オブジェクト	
library/xmlrpc.client.html#multicall-objects	21.26.6. MultiCall オブジェクト	
library/xmlrpc.client.html#convenience-functions	21.26.7. 補助関数	
library/xmlrpc.client.html#example-of-client-usage	21.26.8. クライアントのサンプル	
library/xmlrpc.client.html#example-of-client-and-server-usage	21.26.9. クライアントとサーバーの利用例	
library/xmlrpc.server.html	21.27.xmlrpc.server— 基本的なXML-RPCサーバー	
library/xmlrpc.server.html#simplexmlrpcserver-objects	21.27.1. SimpleXMLRPCServer オブジェクト	
library/xmlrpc.server.html#simplexmlrpcserver-example	21.27.1.1. SimpleXMLRPCServer の例	
library/xmlrpc.server.html#cgixmlrpcrequesthandler	21.27.2. CGIXMLRPCRequestHandler	
library/xmlrpc.server.html#documenting-xmlrpc-server	21.27.3. XMLRPC サーバの文書化	
library/xmlrpc.server.html#docxmlrpcserver-objects	21.27.4. DocXMLRPCServer オブジェクト	
library/xmlrpc.server.html#doccgixmlrpcrequesthandler	21.27.5. DocCGIXMLRPCRequestHandler	
library/ipaddress.html	21.28.ipaddress— IPv4/IPv6 操作ライブラリ	
library/ipaddress.html#convenience-factory-functions	21.28.1. 便利なファクトリ関数	
library/ipaddress.html#ip-addresses	21.28.2. IP アドレス	
library/ipaddress.html#address-objects	21.28.2.1. Address オブジェクト	
library/ipaddress.html#conversion-to-strings-and-integers	21.28.2.2. 文字列と整数への変換	
library/ipaddress.html#operators	21.28.2.3. 演算子	
library/ipaddress.html#comparison-operators	21.28.2.3.1. 比較演算子	
library/ipaddress.html#arithmetic-operators	21.28.2.3.2. 算術演算	
library/ipaddress.html#ip-network-definitions	21.28.3. IP ネットワーク定義	
library/ipaddress.html#prefix-net-mask-and-host-mask	21.28.3.1. プリフィックス, ネットマスク、ホストマスク	
library/ipaddress.html#network-objects	21.28.3.2. Network オブジェクト	
library/ipaddress.html#id1	21.28.3.3. 演算子	
library/ipaddress.html#logical-operators	21.28.3.3.1. 論理演算子	
library/ipaddress.html#iteration	21.28.3.3.2. イテレーション	
library/ipaddress.html#networks-as-containers-of-addresses	21.28.3.3.3. Networks as containers of addresses	
library/ipaddress.html#interface-objects	21.28.4. インターフェイスオブジェクト	
library/ipaddress.html#other-module-level-functions	21.28.5. その他のモジュールレベル関数	
library/ipaddress.html#custom-exceptions	21.28.6. Custom Exceptions	
library/mm.html	22. マルチメディアサービス	
library/audioop.html	22.1.audioop— 生の音声データを操作する	
library/aifc.html	22.2.aifc— AIFFおよびAIFCファイルの読み書き	
library/sunau.html	22.3.sunau— Sun AUファイルの読み書き	
library/sunau.html#au-read-objects	22.3.1. AU_read オブジェクト	
library/sunau.html#au-write-objects	22.3.2. AU_write オブジェクト	
library/wave.html	22.4.wave— WAVファイルの読み書き	
library/wave.html#wave-read-objects	22.4.1. Wave_read オブジェクト	
library/wave.html#wave-write-objects	22.4.2. Wave_write オブジェクト	
library/chunk.html	22.5.chunk— IFFチャンクデータの読み込み	
library/colorsys.html	22.6.colorsys— 色体系間の変換	
library/imghdr.html	22.7.imghdr— 画像の形式を決定する	
library/sndhdr.html	22.8.sndhdr— サウンドファイルの識別	
library/ossaudiodev.html	22.9.ossaudiodev— OSS互換オーディオデバイスへのアクセス	
library/ossaudiodev.html#audio-device-objects	22.9.1. オーディオデバイスオブジェクト	
library/ossaudiodev.html#mixer-device-objects	22.9.2. ミキサデバイスオブジェクト	
library/i18n.html	23. 国際化	
library/gettext.html	23.1.gettext— 多言語対応に関する国際化サービス	
library/gettext.html#gnu-gettext-api	23.1.1. GNUgettextAPI	
library/gettext.html#class-based-api	23.1.2. クラスに基づいた API	
library/gettext.html#the-nulltranslations-class	23.1.2.1.NullTranslationsクラス	
library/gettext.html#the-gnutranslations-class	23.1.2.2.GNUTranslationsクラス	
library/gettext.html#solaris-message-catalog-support	23.1.2.3. Solaris メッセージカタログ機構のサポート	
library/gettext.html#the-catalog-constructor	23.1.2.4. Catalog コンストラクタ	
library/gettext.html#internationalizing-your-programs-and-modules	23.1.3. プログラムやモジュールを国際化する	
library/gettext.html#localizing-your-module	23.1.3.1. モジュールを地域化する	
library/gettext.html#localizing-your-application	23.1.3.2. アプリケーションを地域化する	
library/gettext.html#changing-languages-on-the-fly	23.1.3.3. 動作中 (on the fly) に言語を切り替える	
library/gettext.html#deferred-translations	23.1.3.4. 翻訳処理の遅延解決	
library/gettext.html#acknowledgements	23.1.4. 謝辞	
library/locale.html	23.2.locale— 国際化サービス	
library/locale.html#background-details-hints-tips-and-caveats	23.2.1. ロケールの背景、詳細、ヒント、助言および補足説明	
library/locale.html#for-extension-writers-and-programs-that-embed-python	23.2.2. Python 拡張の作者と、Python を埋め込むようなプログラムに関して	
library/locale.html#access-to-message-catalogs	23.2.3. メッセージカタログへのアクセス	
library/frameworks.html	24. プログラムのフレームワーク	
library/turtle.html	24.1.turtle— タートルグラフィックス	
library/turtle.html#introduction	24.1.1. はじめに	
library/turtle.html#overview-of-available-turtle-and-screen-methods	24.1.2. Turtle および Screen のメソッドの概観	
library/turtle.html#turtle-methods	24.1.2.1. Turtle のメソッド	
library/turtle.html#methods-of-turtlescreen-screen	24.1.2.2. TurtleScreen/Screen のメソッド	
library/turtle.html#methods-of-rawturtle-turtle-and-corresponding-functions	24.1.3. RawTurtle/Turtle のメソッドと対応する関数	
library/turtle.html#turtle-motion	24.1.3.1. Turtle の動き	
library/turtle.html#tell-turtle-s-state	24.1.3.2. Turtle の状態を知る	
library/turtle.html#settings-for-measurement	24.1.3.3. 設定と計測	
library/turtle.html#pen-control	24.1.3.4. Pen の制御	
library/turtle.html#drawing-state	24.1.3.4.1. 描画状態	
library/turtle.html#color-control	24.1.3.4.2. 色の制御	
library/turtle.html#filling	24.1.3.4.3. 塗りつぶし	
library/turtle.html#more-drawing-control	24.1.3.4.4. さらなる描画の制御	
library/turtle.html#turtle-state	24.1.3.5. タートルの状態	
library/turtle.html#visibility	24.1.3.5.1. 可視性	
library/turtle.html#appearance	24.1.3.5.2. 見た目	
library/turtle.html#using-events	24.1.3.6. イベントを利用する	
library/turtle.html#special-turtle-methods	24.1.3.7. 特別な Turtle のメソッド	
library/turtle.html#compound-shapes	24.1.3.8. Compound shapes	
library/turtle.html#methods-of-turtlescreen-screen-and-corresponding-functions	24.1.4. TurtleScreen/Screen のメソッドと対応する関数	
library/turtle.html#window-control	24.1.4.1. ウィンドウの制御	
library/turtle.html#animation-control	24.1.4.2. アニメーションの制御	
library/turtle.html#using-screen-events	24.1.4.3. スクリーンイベントを利用する	
library/turtle.html#input-methods	24.1.4.4. Input methods	
library/turtle.html#settings-and-special-methods	24.1.4.5. 設定と特殊なメソッド	
library/turtle.html#methods-specific-to-screen-not-inherited-from-turtlescreen	24.1.4.6. Screen 独自のメソッド、TurtleScreen から継承したもの以外	
library/turtle.html#public-classes	24.1.5. Public classes	
library/turtle.html#help-and-configuration	24.1.6. ヘルプと設定	
library/turtle.html#how-to-use-help	24.1.6.1. ヘルプの使い方	
library/turtle.html#translation-of-docstrings-into-different-languages	24.1.6.2. ドキュメント文字列の翻訳	
library/turtle.html#how-to-configure-screen-and-turtles	24.1.6.3. Screen および Turtle の設定方法	
library/turtle.html#module-turtledemo	24.1.7.turtledemo— デモスクリプト	
library/turtle.html#changes-since-python-2-6	24.1.8. Changes since Python 2.6	
library/turtle.html#changes-since-python-3-0	24.1.9. Changes since Python 3.0	
library/cmd.html	24.2.cmd— 行指向のコマンドインタープリタのサポート	
library/cmd.html#cmd-objects	24.2.1. Cmdオブジェクト	
library/cmd.html#cmd-example	24.2.2. Cmd の例	
library/shlex.html	24.3.shlex— 単純な字句解析	
library/shlex.html#shlex-objects	24.3.1. shlex オブジェクト	
library/shlex.html#parsing-rules	24.3.2. 解析規則	
library/shlex.html#improved-compatibility-with-shells	24.3.3. Improved Compatibility with Shells	
library/tk.html	25. Tk を用いたグラフィカルユーザインターフェイス	
library/tkinter.html	25.1.tkinter— Tcl/Tk の Python インタフェース	
library/tkinter.html#tkinter-modules	25.1.1. Tkinter モジュール	
library/tkinter.html#tkinter-life-preserver	25.1.2. Tkinter お助け手帳	
library/tkinter.html#how-to-use-this-section	25.1.2.1. この節の使い方	
library/tkinter.html#a-simple-hello-world-program	25.1.2.2. 簡単な Hello World プログラム	
library/tkinter.html#a-very-quick-look-at-tcl-tk	25.1.3. Tcl/Tk を (本当に少しだけ) 見渡してみる	
library/tkinter.html#mapping-basic-tk-into-tkinter	25.1.4. 基本的な Tk プログラムと Tkinter との対応関係	
library/tkinter.html#how-tk-and-tkinter-are-related	25.1.5. Tk と Tkinter はどのように関わっているのか	
library/tkinter.html#handy-reference	25.1.6. 簡単なリファレンス	
library/tkinter.html#setting-options	25.1.6.1. オプションの設定	
library/tkinter.html#the-packer	25.1.6.2. Packer	
library/tkinter.html#packer-options	25.1.6.3. Packer のオプション	
library/tkinter.html#coupling-widget-variables	25.1.6.4. ウィジェット変数を関連付ける	
library/tkinter.html#the-window-manager	25.1.6.5. ウィンドウマネージャ	
library/tkinter.html#tk-option-data-types	25.1.6.6. Tk オプションデータ型	
library/tkinter.html#bindings-and-events	25.1.6.7. バインドとイベント	
library/tkinter.html#the-index-parameter	25.1.6.8. index パラメータ	
library/tkinter.html#images	25.1.6.9. 画像	
library/tkinter.html#file-handlers	25.1.7. ファイルハンドラ	
library/tkinter.ttk.html	25.2.tkinter.ttk— Tk のテーマ付きウィジェット	
library/tkinter.ttk.html#using-ttk	25.2.1. Ttk を使う	
library/tkinter.ttk.html#ttk-widgets	25.2.2. Ttk ウィジェット	
library/tkinter.ttk.html#widget	25.2.3. ウィジェット	
library/tkinter.ttk.html#standard-options	25.2.3.1. 標準オプション	
library/tkinter.ttk.html#scrollable-widget-options	25.2.3.2. スクロール可能ウィジェットのオプション	
library/tkinter.ttk.html#label-options	25.2.3.3. ラベルオプション	
library/tkinter.ttk.html#compatibility-options	25.2.3.4. 互換性オプション	
library/tkinter.ttk.html#widget-states	25.2.3.5. ウィジェットの状態	
library/tkinter.ttk.html#ttk-widget	25.2.3.6. ttk.Widget	
library/tkinter.ttk.html#combobox	25.2.4. コンボボックス	
library/tkinter.ttk.html#options	25.2.4.1. オプション	
library/tkinter.ttk.html#virtual-events	25.2.4.2. 仮想イベント	
library/tkinter.ttk.html#ttk-combobox	25.2.4.3. ttk.Combobox	
library/tkinter.ttk.html#notebook	25.2.5. ノートブック	
library/tkinter.ttk.html#id1	25.2.5.1. オプション	
library/tkinter.ttk.html#tab-options	25.2.5.2. タブオプション	
library/tkinter.ttk.html#tab-identifiers	25.2.5.3. タブ識別子	
library/tkinter.ttk.html#id2	25.2.5.4. 仮想イベント	
library/tkinter.ttk.html#ttk-notebook	25.2.5.5. ttk.Notebook	
library/tkinter.ttk.html#progressbar	25.2.6. プログレスバー	
library/tkinter.ttk.html#id3	25.2.6.1. オプション	
library/tkinter.ttk.html#ttk-progressbar	25.2.6.2. ttk.Progressbar	
library/tkinter.ttk.html#separator	25.2.7. セパレータ	
library/tkinter.ttk.html#id4	25.2.7.1. オプション	
library/tkinter.ttk.html#sizegrip	25.2.8. サイズグリップ	
library/tkinter.ttk.html#platform-specific-notes	25.2.8.1. プラットフォーム固有のメモ	
library/tkinter.ttk.html#bugs	25.2.8.2. バグ	
library/tkinter.ttk.html#treeview	25.2.9. ツリービュー	
library/tkinter.ttk.html#id5	25.2.9.1. オプション	
library/tkinter.ttk.html#item-options	25.2.9.2. 要素オプション	
library/tkinter.ttk.html#tag-options	25.2.9.3. タグオプション	
library/tkinter.ttk.html#column-identifiers	25.2.9.4. カラム識別子	
library/tkinter.ttk.html#id6	25.2.9.5. 仮想イベント	
library/tkinter.ttk.html#ttk-treeview	25.2.9.6. ttk.Treeview	
library/tkinter.ttk.html#ttk-styling	25.2.10. Ttk スタイル	
library/tkinter.ttk.html#layouts	25.2.10.1. レイアウト	
library/tkinter.tix.html	25.3.tkinter.tix— Tkの拡張ウィジェット	
library/tkinter.tix.html#using-tix	25.3.1. Tixを使う	
library/tkinter.tix.html#tix-widgets	25.3.2. Tixウィジェット	
library/tkinter.tix.html#basic-widgets	25.3.2.1. 基本ウィジェット	
library/tkinter.tix.html#file-selectors	25.3.2.2. ファイルセレクタ	
library/tkinter.tix.html#hierarchical-listbox	25.3.2.3. 階層的リストボックス	
library/tkinter.tix.html#tabular-listbox	25.3.2.4. 表的リストボックス	
library/tkinter.tix.html#manager-widgets	25.3.2.5. 管理ウィジェット	
library/tkinter.tix.html#image-types	25.3.2.6. 画像タイプ	
library/tkinter.tix.html#miscellaneous-widgets	25.3.2.7. その他のウィジェット	
library/tkinter.tix.html#form-geometry-manager	25.3.2.8. ジオメトリマネジャを作る	
library/tkinter.tix.html#tix-commands	25.3.3. Tixコマンド	
library/tkinter.scrolledtext.html	25.4.tkinter.scrolledtext— スクロールするテキストウィジェット	
library/idle.html	25.5. IDLE	
library/idle.html#menus	25.5.1. メニュー	
library/idle.html#file-menu-shell-and-editor	25.5.1.1. File メニュー (Shell ウィンドウ、Editor ウィンドウ)	
library/idle.html#edit-menu-shell-and-editor	25.5.1.2. Edit メニュー (Shell ウィンドウ、Editor ウィンドウ)	
library/idle.html#format-menu-editor-window-only	25.5.1.3. Format メニュー (Shell ウィンドウ、Editor ウィンドウ)	
library/idle.html#run-menu-editor-window-only	25.5.1.4. Run メニュー (Editor ウィンドウのみ)	
library/idle.html#shell-menu-shell-window-only	25.5.1.5. Shell メニュー (Shell ウィンドウのみ)	
library/idle.html#debug-menu-shell-window-only	25.5.1.6. Debug メニュー (Shell ウィンドウのみ)	
library/idle.html#options-menu-shell-and-editor	25.5.1.7. Options メニュー (Shell ウィンドウ、Editor ウィンドウ)	
library/idle.html#window-menu-shell-and-editor	25.5.1.8. Window メニュー (Shell ウィンドウ、Editor ウィンドウ)	
library/idle.html#help-menu-shell-and-editor	25.5.1.9. Help メニュー (Shell ウィンドウ、Editor ウィンドウ)	
library/idle.html#context-menus	25.5.1.10. コンテキストメニュー	
library/idle.html#editing-and-navigation	25.5.2. 編集とナビゲーション	
library/idle.html#automatic-indentation	25.5.2.1. 自動的な字下げ	
library/idle.html#completions	25.5.2.2. 補完 (Completions)	
library/idle.html#calltips	25.5.2.3. 呼び出しヒント (Calltips)	
library/idle.html#python-shell-window	25.5.2.4. Python Shell ウィンドウ	
library/idle.html#text-colors	25.5.2.5. テキストの色	
library/idle.html#startup-and-code-execution	25.5.3. スタートアップとコードの実行	
library/idle.html#command-line-usage	25.5.3.1. コマンドラインの使い方	
library/idle.html#idle-console-differences	25.5.3.2. IDLE とコンソールの違い	
library/idle.html#running-without-a-subprocess	25.5.3.3. サブプロセスを起こさずに起動する	
library/idle.html#help-and-preferences	25.5.4. ヘルプとお好み設定	
library/idle.html#additional-help-sources	25.5.4.1. Additional help sources [ヘルプ参照先の追加]	
library/idle.html#setting-preferences	25.5.4.2. Setting preferences [お好み設定]	
library/idle.html#extensions	25.5.4.3. Extensions [拡張]	
library/othergui.html	25.6. 他のグラフィカルユーザインタフェースパッケージ	
library/development.html	26. 開発ツール	
library/typing.html	26.1.typing— 型ヒントのサポート	
library/typing.html#type-aliases	26.1.1. 型エイリアス	
library/typing.html#newtype	26.1.2. NewType	
library/typing.html#callable	26.1.3. 呼び出し可能オブジェクト	
library/typing.html#generics	26.1.4. ジェネリクス	
library/typing.html#user-defined-generic-types	26.1.5. ユーザー定義のジェネリック型	
library/typing.html#the-any-type	26.1.6.Any型	
library/typing.html#classes-functions-and-decorators	26.1.7. クラス、関数、およびデコレータ	
library/pydoc.html	26.2.pydoc— ドキュメント生成とオンラインヘルプシステム	
library/doctest.html	26.3.doctest— 対話的な実行例をテストする	
library/doctest.html#simple-usage-checking-examples-in-docstrings	26.3.1. 簡単な利用法: docstring 中の実行例をチェックする	
library/doctest.html#simple-usage-checking-examples-in-a-text-file	26.3.2. 簡単な利用法: テキストファイル中の実行例をチェックする	
library/doctest.html#how-it-works	26.3.3. doctest のからくり	
library/doctest.html#which-docstrings-are-examined	26.3.3.1. どの docstring が検証されるのか?	
library/doctest.html#how-are-docstring-examples-recognized	26.3.3.2. docstring 内の実行例をどのように認識するのか?	
library/doctest.html#what-s-the-execution-context	26.3.3.3. 実行コンテキストとは何か?	
library/doctest.html#what-about-exceptions	26.3.3.4. 例外はどう扱えばよいか?	
library/doctest.html#option-flags	26.3.3.5. オプションフラグ	
library/doctest.html#directives	26.3.3.6. ディレクティブ (Directives)	
library/doctest.html#warnings	26.3.3.7. 警告	
library/doctest.html#basic-api	26.3.4. 基本 API	
library/doctest.html#unittest-api	26.3.5. 単体テスト API	
library/doctest.html#advanced-api	26.3.6. 拡張 API	
library/doctest.html#doctest-objects	26.3.6.1. DocTest オブジェクト	
library/doctest.html#example-objects	26.3.6.2. Example オブジェクト	
library/doctest.html#doctestfinder-objects	26.3.6.3. DocTestFinder オブジェクト	
library/doctest.html#doctestparser-objects	26.3.6.4. DocTestParser オブジェクト	
library/doctest.html#doctestrunner-objects	26.3.6.5. DocTestRunner オブジェクト	
library/doctest.html#outputchecker-objects	26.3.6.6. OutputChecker オブジェクト	
library/doctest.html#debugging	26.3.7. デバッグ	
library/doctest.html#soapbox	26.3.8. アドバイス	
library/unittest.html	26.4.unittest— ユニットテストフレームワーク	
library/unittest.html#basic-example	26.4.1. 基本的な例	
library/unittest.html#command-line-interface	26.4.2. コマンドラインインターフェイス	
library/unittest.html#command-line-options	26.4.2.1. コマンドラインオプション	
library/unittest.html#test-discovery	26.4.3. テストディスカバリ	
library/unittest.html#organizing-test-code	26.4.4. テストコードの構成	
library/unittest.html#re-using-old-test-code	26.4.5. 既存テストコードの再利用	
library/unittest.html#skipping-tests-and-expected-failures	26.4.6. テストのスキップと予期された失敗	
library/unittest.html#distinguishing-test-iterations-using-subtests	26.4.7. サブテストを利用して繰り返しテストの区別を付ける	
library/unittest.html#classes-and-functions	26.4.8. クラスと関数	
library/unittest.html#test-cases	26.4.8.1. テストクラス	
library/unittest.html#deprecated-aliases	26.4.8.1.1. 非推奨のエイリアス	
library/unittest.html#grouping-tests	26.4.8.2. テストのグループ化	
library/unittest.html#loading-and-running-tests	26.4.8.3. テストのロードと起動	
library/unittest.html#load-tests-protocol	26.4.8.3.1. load_tests プロトコル	
library/unittest.html#class-and-module-fixtures	26.4.9. クラスとモジュールのフィクスチャ	
library/unittest.html#setupclass-and-teardownclass	26.4.9.1. setUpClass と tearDownClass	
library/unittest.html#setupmodule-and-teardownmodule	26.4.9.2. setUpModule と tearDownModule	
library/unittest.html#signal-handling	26.4.10. シグナルハンドリング	
library/unittest.mock.html	26.5.unittest.mock— モックオブジェクトライブラリ	
library/unittest.mock.html#quick-guide	26.5.1. クイックガイド	
library/unittest.mock.html#the-mock-class	26.5.2. Mock クラス	
library/unittest.mock.html#calling	26.5.2.1. 呼び出し	
library/unittest.mock.html#deleting-attributes	26.5.2.2. 属性の削除	
library/unittest.mock.html#mock-names-and-the-name-attribute	26.5.2.3. Mock の名前と name 属性	
library/unittest.mock.html#attaching-mocks-as-attributes	26.5.2.4. 属性として設定されるモック	
library/unittest.mock.html#the-patchers	26.5.3. patcher	
library/unittest.mock.html#patch	26.5.3.1. patch	
library/unittest.mock.html#patch-object	26.5.3.2. patch.object	
library/unittest.mock.html#patch-dict	26.5.3.3. patch.dict	
library/unittest.mock.html#patch-multiple	26.5.3.4. patch.multiple	
library/unittest.mock.html#patch-methods-start-and-stop	26.5.3.5. patch のメソッド: start と stop	
library/unittest.mock.html#patch-builtins	26.5.3.6. ビルトインをパッチする	
library/unittest.mock.html#test-prefix	26.5.3.7. TEST_PREFIX	
library/unittest.mock.html#nesting-patch-decorators	26.5.3.8. patch デコレータをネストする	
library/unittest.mock.html#where-to-patch	26.5.3.9. どこにパッチするか	
library/unittest.mock.html#patching-descriptors-and-proxy-objects	26.5.3.10. デスクリプタやプロキシオブジェクトにパッチする	
library/unittest.mock.html#magicmock-and-magic-method-support	26.5.4. MagicMock と magic method のサポート	
library/unittest.mock.html#mocking-magic-methods	26.5.4.1. magick method をモックする	
library/unittest.mock.html#magic-mock	26.5.4.2. Magic Mock	
library/unittest.mock.html#helpers	26.5.5. ヘルパー	
library/unittest.mock.html#sentinel	26.5.5.1. sentinel	
library/unittest.mock.html#default	26.5.5.2. DEFAULT	
library/unittest.mock.html#call	26.5.5.3. call	
library/unittest.mock.html#create-autospec	26.5.5.4. create_autospec	
library/unittest.mock.html#any	26.5.5.5. ANY	
library/unittest.mock.html#filter-dir	26.5.5.6. FILTER_DIR	
library/unittest.mock.html#mock-open	26.5.5.7. mock_open	
library/unittest.mock.html#autospeccing	26.5.5.8. autospec を使う	
library/unittest.mock-examples.html	26.6.unittest.mock— 入門	
library/unittest.mock-examples.html#using-mock	26.6.1. Mock を使う	
library/unittest.mock-examples.html#mock-patching-methods	26.6.1.1. Mock のパッチ用メソッド	
library/unittest.mock-examples.html#mock-for-method-calls-on-an-object	26.6.1.2. オブジェクトのメソッド呼び出しに対するモック	
library/unittest.mock-examples.html#mocking-classes	26.6.1.3. クラスをモックする	
library/unittest.mock-examples.html#naming-your-mocks	26.6.1.4. モックに名前をつける	
library/unittest.mock-examples.html#tracking-all-calls	26.6.1.5. 全ての呼び出しのトラッキング	
library/unittest.mock-examples.html#setting-return-values-and-attributes	26.6.1.6. 戻り値や属性を設定する	
library/unittest.mock-examples.html#raising-exceptions-with-mocks	26.6.1.7. モックから例外を発生させる	
library/unittest.mock-examples.html#side-effect-functions-and-iterables	26.6.1.8. side_effect の関数と iterable	
library/unittest.mock-examples.html#creating-a-mock-from-an-existing-object	26.6.1.9. 既存のオブジェクトから Mock を作る	
library/unittest.mock-examples.html#patch-decorators	26.6.2. patch デコレータ	
library/unittest.mock-examples.html#further-examples	26.6.3. さらなる例	
library/unittest.mock-examples.html#mocking-chained-calls	26.6.3.1. chained call をモックする	
library/unittest.mock-examples.html#partial-mocking	26.6.3.2. 部分的なモック	
library/unittest.mock-examples.html#mocking-a-generator-method	26.6.3.3. ジェネレータ method をモックする	
library/unittest.mock-examples.html#applying-the-same-patch-to-every-test-method	26.6.3.4. 同じパッチを全てのメソッドに適用する	
library/unittest.mock-examples.html#mocking-unbound-methods	26.6.3.5. Mocking Unbound Methods	
library/unittest.mock-examples.html#checking-multiple-calls-with-mock	26.6.3.6. モックで複数回の呼び出しをチェックする	
library/unittest.mock-examples.html#coping-with-mutable-arguments	26.6.3.7. ミュータブルな引数に対処する	
library/unittest.mock-examples.html#nesting-patches	26.6.3.8. patch をネストする	
library/unittest.mock-examples.html#mocking-a-dictionary-with-magicmock	26.6.3.9. MagicMock で辞書をモックする	
library/unittest.mock-examples.html#mock-subclasses-and-their-attributes	26.6.3.10. Mock のサブクラスと属性	
library/unittest.mock-examples.html#mocking-imports-with-patch-dict	26.6.3.11. patch.dict で import をモックする	
library/unittest.mock-examples.html#tracking-order-of-calls-and-less-verbose-call-assertions	26.6.3.12. Tracking order of calls and less verbose call assertions	
library/unittest.mock-examples.html#more-complex-argument-matching	26.6.3.13. More complex argument matching	
library/2to3.html	26.7. 2to3 - Python 2 から 3 への自動コード変換	
library/2to3.html#using-2to3	26.7.1. 2to3 の使用	
library/2to3.html#fixers	26.7.2. 変換プログラム	
library/2to3.html#module-lib2to3	26.7.3.lib2to3- 2to3’s library	
library/test.html	26.8.test— Python 用回帰テストパッケージ	
library/test.html#writing-unit-tests-for-the-test-package	26.8.1.testパッケージのためのユニットテストを書く	
library/test.html#running-tests-using-the-command-line-interface	26.8.2. コマンドラインインタフェースを利用してテストを実行する	
library/test.html#module-test.support	26.9.test.support— テストのためのユーティリティ関数	
library/debug.html	27. デバッグとプロファイル	
library/bdb.html	27.1.bdb— デバッガーフレームワーク	
library/faulthandler.html	27.2.faulthandler— Python tracebackのダンプ	
library/faulthandler.html#dumping-the-traceback	27.2.1. tracebackのダンプ	
library/faulthandler.html#fault-handler-state	27.2.2. フォールトハンドラの状態	
library/faulthandler.html#dumping-the-tracebacks-after-a-timeout	27.2.3. タイムアウト後にtracebackをダンプする	
library/faulthandler.html#dumping-the-traceback-on-a-user-signal	27.2.4. ユーザシグナルに対してtracebackをダンプする	
library/faulthandler.html#issue-with-file-descriptors	27.2.5. ファイル記述子の問題	
library/faulthandler.html#example	27.2.6. 使用例	
library/pdb.html	27.3.pdb— Python デバッガ	
library/pdb.html#debugger-commands	27.3.1. デバッガコマンド	
library/profile.html	27.4. Python プロファイラ	
library/profile.html#introduction-to-the-profilers	27.4.1. プロファイラとは	
library/profile.html#instant-user-s-manual	27.4.2. かんたんユーザマニュアル	
library/profile.html#module-cProfile	27.4.3. リファレンスマニュアル –profileとcProfile	
library/profile.html#the-stats-class	27.4.4.Statsクラス	
library/profile.html#what-is-deterministic-profiling	27.4.5. 決定論的プロファイリングとは	
library/profile.html#limitations	27.4.6. 制限事項	
library/profile.html#calibration	27.4.7. キャリブレーション (補正)	
library/profile.html#using-a-custom-timer	27.4.8. カスタムな時刻取得用関数を使う	
library/timeit.html	27.5.timeit— 小さなコード断片の実行時間計測	
library/timeit.html#basic-examples	27.5.1. 基本的な例	
library/timeit.html#python-interface	27.5.2. Python インターフェイス	
library/timeit.html#command-line-interface	27.5.3. コマンドラインインターフェイス	
library/timeit.html#examples	27.5.4. 使用例	
library/trace.html	27.6.trace— Python 文実行のトレースと追跡	
library/trace.html#command-line-usage	27.6.1. コマンドラインからの使用	
library/trace.html#main-options	27.6.1.1. 主要なオプション	
library/trace.html#modifiers	27.6.1.2. 修飾的オプション	
library/trace.html#filters	27.6.1.3. フィルターオプション	
library/trace.html#programmatic-interface	27.6.2. プログラミングインターフェース	
library/tracemalloc.html	27.7.tracemalloc— メモリ割り当ての追跡	
library/tracemalloc.html#examples	27.7.1. 使用例	
library/tracemalloc.html#display-the-top-10	27.7.1.1. 上位10を表示する	
library/tracemalloc.html#compute-differences	27.7.1.2. 差を計算する	
library/tracemalloc.html#get-the-traceback-of-a-memory-block	27.7.1.3. メモリブロックのトレースバックを取得する	
library/tracemalloc.html#pretty-top	27.7.1.4. top を整形化する	
library/tracemalloc.html#api	27.7.2. API	
library/tracemalloc.html#functions	27.7.2.1. 関数	
library/tracemalloc.html#domainfilter	27.7.2.2. DomainFilter	
library/tracemalloc.html#filter	27.7.2.3. Filter	
library/tracemalloc.html#frame	27.7.2.4. Frame	
library/tracemalloc.html#snapshot	27.7.2.5. Snapshot	
library/tracemalloc.html#statistic	27.7.2.6. Statistic	
library/tracemalloc.html#statisticdiff	27.7.2.7. StatisticDiff	
library/tracemalloc.html#trace	27.7.2.8. Trace	
library/tracemalloc.html#traceback	27.7.2.9. Traceback	
library/distribution.html	28. ソフトウェア・パッケージと配布	
library/distutils.html	28.1.distutils— Python モジュールの構築とインストール	
library/ensurepip.html	28.2.ensurepip—pipインストーラのブートストラップ	
library/ensurepip.html#command-line-interface	28.2.1. コマンドラインインターフェイス	
library/ensurepip.html#module-api	28.2.2. モジュール API	
library/venv.html	28.3.venv— 仮想環境の作成	
library/venv.html#creating-virtual-environments	28.3.1. 仮想環境の作成	
library/venv.html#api	28.3.2. API	
library/venv.html#an-example-of-extending-envbuilder	28.3.3.EnvBuilderを拡張する例	
library/zipapp.html	28.4.zipapp— 実行可能な python zip 書庫を管理する	
library/zipapp.html#basic-example	28.4.1. 基本的な例	
library/zipapp.html#command-line-interface	28.4.2. コマンドラインインターフェイス	
library/zipapp.html#python-api	28.4.3. Python API	
library/zipapp.html#examples	28.4.4. 使用例	
library/zipapp.html#the-python-zip-application-archive-format	28.4.5. The Python Zip Application Archive Format	
library/python.html	29. Python ランタイムサービス	
library/sys.html	29.1.sys— システムパラメータと関数	
library/sysconfig.html	29.2.sysconfig— Python の構成情報にアクセスする	
library/sysconfig.html#configuration-variables	29.2.1. 構成変数	
library/sysconfig.html#installation-paths	29.2.2. インストールパス	
library/sysconfig.html#other-functions	29.2.3. その他の関数	
library/sysconfig.html#using-sysconfig-as-a-script	29.2.4.sysconfigをスクリプトとして使う	
library/builtins.html	29.3.builtins— 組み込みオブジェクト	
library/__main__.html	29.4.__main__— トップレベルのスクリプト環境	
library/warnings.html	29.5.warnings— 警告の制御	
library/warnings.html#warning-categories	29.5.1. 警告カテゴリ	
library/warnings.html#the-warnings-filter	29.5.2. 警告フィルタ	
library/warnings.html#default-warning-filters	29.5.2.1. デフォルトの警告フィルタ	
library/warnings.html#temporarily-suppressing-warnings	29.5.3. 一時的に警告を抑制する	
library/warnings.html#testing-warnings	29.5.4. 警告のテスト	
library/warnings.html#updating-code-for-new-versions-of-python	29.5.5. コードを新しいバージョンの Python のために更新する	
library/warnings.html#available-functions	29.5.6. 利用可能な関数	
library/warnings.html#available-context-managers	29.5.7. 利用可能なコンテキストマネージャー	
library/contextlib.html	29.6.contextlib—with文コンテキスト用ユーティリティ	
library/contextlib.html#utilities	29.6.1. ユーティリティ	
library/contextlib.html#examples-and-recipes	29.6.2. 例とレシピ	
library/contextlib.html#supporting-a-variable-number-of-context-managers	29.6.2.1. 可変数個のコンテキストマネージャーをサポートする	
library/contextlib.html#simplifying-support-for-single-optional-context-managers	29.6.2.2. 1つのオプションのコンテキストマネージャーを簡潔にサポートする	
library/contextlib.html#catching-exceptions-from-enter-methods	29.6.2.3.__enter__メソッドからの例外をキャッチする	
library/contextlib.html#cleaning-up-in-an-enter-implementation	29.6.2.4.__enter__実装内のクリーンアップ	
library/contextlib.html#replacing-any-use-of-try-finally-and-flag-variables	29.6.2.5.try-finally+ flag 変数パターンを置き換える	
library/contextlib.html#using-a-context-manager-as-a-function-decorator	29.6.2.6. コンテキストマネージャーを関数デコレーターとして使う	
library/contextlib.html#single-use-reusable-and-reentrant-context-managers	29.6.3. Single use, reusable and reentrant context managers	
library/contextlib.html#reentrant-context-managers	29.6.3.1. Reentrant context managers	
library/contextlib.html#reusable-context-managers	29.6.3.2. Reusable context managers	
library/abc.html	29.7.abc— 抽象基底クラス	
library/atexit.html	29.8.atexit— 終了ハンドラ	
library/atexit.html#atexit-example	29.8.1.atexitの例	
library/traceback.html	29.9.traceback— スタックトレースの表示または取得	
library/traceback.html#tracebackexception-objects	29.9.1.TracebackExceptionオブジェクト	
library/traceback.html#stacksummary-objects	29.9.2.StackSummaryオブジェクト	
library/traceback.html#framesummary-objects	29.9.3.FrameSummaryオブジェクト	
library/traceback.html#traceback-examples	29.9.4. トレースバックの例	
library/__future__.html	29.10.__future__— future 文の定義	
library/gc.html	29.11.gc— ガベージコレクタインターフェース	
library/inspect.html	29.12.inspect— 活動中のオブジェクトの情報を取得する	
library/inspect.html#types-and-members	29.12.1. 型とメンバー	
library/inspect.html#retrieving-source-code	29.12.2. ソースコードの情報取得	
library/inspect.html#introspecting-callables-with-the-signature-object	29.12.3. Signature オブジェクトで呼び出し可能オブジェクトを内省する	
library/inspect.html#classes-and-functions	29.12.4. クラスと関数	
library/inspect.html#the-interpreter-stack	29.12.5. インタープリタスタック	
library/inspect.html#fetching-attributes-statically	29.12.6. 属性の静的なフェッチ	
library/inspect.html#current-state-of-generators-and-coroutines	29.12.7. ジェネレータおよびコルーチンの現在の状態	
library/inspect.html#code-objects-bit-flags	29.12.8. Code Objects Bit Flags	
library/inspect.html#command-line-interface	29.12.9. コマンドラインインターフェイス	
library/site.html	29.13.site— サイト固有の設定フック	
library/site.html#readline-configuration	29.13.1. readline の設定	
library/site.html#module-contents	29.13.2. モジュールの内容	
library/fpectl.html	29.14.fpectl— 浮動小数点例外の制御	
library/fpectl.html#example	29.14.1. 使用例	
library/fpectl.html#limitations-and-other-considerations	29.14.2. 制限と他に考慮すべきこと	
library/custominterp.html	30. カスタム Python インタプリタ	
library/code.html	30.1.code— インタプリタ基底クラス	
library/code.html#interactive-interpreter-objects	30.1.1. 対話的なインタプリタオブジェクト	
library/code.html#interactive-console-objects	30.1.2. 対話的なコンソールオブジェクト	
library/codeop.html	30.2.codeop— Pythonコードをコンパイルする	
library/modules.html	31. モジュールのインポート	
library/zipimport.html	31.1.zipimport— Zip アーカイブからモジュールを import する	
library/zipimport.html#zipimporter-objects	31.1.1. zipimporter オブジェクト	
library/zipimport.html#examples	31.1.2. 使用例	
library/pkgutil.html	31.2.pkgutil— パッケージ拡張ユーティリティ	
library/modulefinder.html	31.3.modulefinder— スクリプト中で使われているモジュールを検索する	
library/modulefinder.html#example-usage-of-modulefinder	31.3.1.ModuleFinderの使用例	
library/runpy.html	31.4.runpy— Python モジュールの位置特定と実行	
library/importlib.html	31.5.importlib—importの実装	
library/importlib.html#introduction	31.5.1. はじめに	
library/importlib.html#functions	31.5.2. 関数	
library/importlib.html#module-importlib.abc	31.5.3.importlib.abc– インポートに関連する抽象基底クラス	
library/importlib.html#module-importlib.machinery	31.5.4.importlib.machinery– インポータおよびパスフック	
library/importlib.html#module-importlib.util	31.5.5.importlib.util– インポータのためのユーティリティコード	
library/importlib.html#examples	31.5.6. 使用例	
library/importlib.html#importing-programmatically	31.5.6.1. Importing programmatically	
library/importlib.html#checking-if-a-module-can-be-imported	31.5.6.2. Checking if a module can be imported	
library/importlib.html#importing-a-source-file-directly	31.5.6.3. Importing a source file directly	
library/importlib.html#setting-up-an-importer	31.5.6.4. Setting up an importer	
library/importlib.html#approximating-importlib-import-module	31.5.6.5. Approximatingimportlib.import_module()	
library/language.html	32. Python言語サービス	
library/parser.html	32.1.parser— Python 解析木にアクセスする	
library/parser.html#creating-st-objects	32.1.1. ST オブジェクトを作成する	
library/parser.html#converting-st-objects	32.1.2. ST オブジェクトを変換する	
library/parser.html#queries-on-st-objects	32.1.3. ST オブジェクトに対する問い合わせ	
library/parser.html#exceptions-and-error-handling	32.1.4. 例外とエラー処理	
library/parser.html#st-objects	32.1.5. ST オブジェクト	
library/parser.html#example-emulation-of-compile	32.1.6. 例:compile()のエミュレーション	
library/ast.html	32.2.ast— 抽象構文木	
library/ast.html#node-classes	32.2.1. Node クラス	
library/ast.html#abstract-grammar	32.2.2. 抽象文法 (Abstract Grammar)	
library/ast.html#ast-helpers	32.2.3.astヘルパー	
library/symtable.html	32.3.symtable— コンパイラの記号表へのアクセス	
library/symtable.html#generating-symbol-tables	32.3.1. 記号表の生成	
library/symtable.html#examining-symbol-tables	32.3.2. 記号表の検査	
library/symbol.html	32.4.symbol— Python 解析木と共に使われる定数	
library/token.html	32.5.token— Python 解析木と共に使われる定数	
library/keyword.html	32.6.keyword— Python キーワードチェック	
library/tokenize.html	32.7.tokenize— Pythonソースのためのトークナイザ	
library/tokenize.html#tokenizing-input	32.7.1. 入力のトークナイズ	
library/tokenize.html#command-line-usage	32.7.2. コマンドラインからの使用	
library/tokenize.html#examples	32.7.3. 使用例	
library/tabnanny.html	32.8.tabnanny— あいまいなインデントの検出	
library/pyclbr.html	32.9.pyclbr— Python クラスブラウザサポート	
library/pyclbr.html#class-objects	32.9.1. クラスオブジェクト	
library/pyclbr.html#function-objects	32.9.2. Function オブジェクト	
library/py_compile.html	32.10.py_compile— Python ソースファイルのコンパイル	
library/compileall.html	32.11.compileall— Python ライブラリをバイトコンパイル	
library/compileall.html#command-line-use	32.11.1. コマンドラインでの使用	
library/compileall.html#public-functions	32.11.2. パブリックな関数	
library/dis.html	32.12.dis— Python バイトコードの逆アセンブラ	
library/dis.html#bytecode-analysis	32.12.1. バイトコード解析	
library/dis.html#analysis-functions	32.12.2. 解析関数	
library/dis.html#python-bytecode-instructions	32.12.3. Python バイトコード命令	
library/dis.html#opcode-collections	32.12.4. 命令コードコレクション	
library/pickletools.html	32.13.pickletools— pickle 開発者のためのツール群	
library/pickletools.html#command-line-usage	32.13.1. コマンドラインの使い方	
library/pickletools.html#command-line-options	32.13.1.1. コマンドラインオプション	
library/pickletools.html#programmatic-interface	32.13.2. プログラミングインターフェース	
library/misc.html	33. 各種サービス	
library/formatter.html	33.1.formatter— 汎用の出力書式化機構	
library/formatter.html#the-formatter-interface	33.1.1. formatter インタフェース	
library/formatter.html#formatter-implementations	33.1.2. formatter 実装	
library/formatter.html#the-writer-interface	33.1.3. writer インタフェース	
library/formatter.html#writer-implementations	33.1.4. writer 実装	
library/windows.html	34. MS Windows 固有のサービス	
library/msilib.html	34.1.msilib— Microsoft インストーラーファイルの読み書き	
library/msilib.html#database-objects	34.1.1. データベースオブジェクト	
library/msilib.html#view-objects	34.1.2. ビューオブジェクト	
library/msilib.html#summary-information-objects	34.1.3. サマリー情報オブジェクト	
library/msilib.html#record-objects	34.1.4. レコードオブジェクト	
library/msilib.html#errors	34.1.5. エラー	
library/msilib.html#cab-objects	34.1.6. CAB オブジェクト	
library/msilib.html#directory-objects	34.1.7. ディレクトリオブジェクト	
library/msilib.html#features	34.1.8. フィーチャー	
library/msilib.html#gui-classes	34.1.9. GUI クラス	
library/msilib.html#precomputed-tables	34.1.10. 事前に計算されたテーブル	
library/msvcrt.html	34.2.msvcrt— MS VC++実行時システムの有用なルーチン群	
library/msvcrt.html#file-operations	34.2.1. ファイル操作関連	
library/msvcrt.html#console-i-o	34.2.2. コンソール I/O 関連	
library/msvcrt.html#other-functions	34.2.3. その多の関数	
library/winreg.html	34.3.winreg— Windows レジストリへのアクセス	
library/winreg.html#functions	34.3.1. 関数	
library/winreg.html#constants	34.3.2. 定数	
library/winreg.html#hkey-constants	34.3.2.1. HKEY_* 定数	
library/winreg.html#access-rights	34.3.2.2. アクセス権限	
library/winreg.html#bit-specific	34.3.2.2.1. 64-bit 特有のアクセス権	
library/winreg.html#value-types	34.3.2.3. 値の型	
library/winreg.html#registry-handle-objects	34.3.3. レジストリハンドルオブジェクト	
library/winsound.html	34.4.winsound— Windows 用の音声再生インタフェース	
library/unix.html	35. Unix 固有のサービス	
library/posix.html	35.1.posix— 最も一般的な POSIX システムコール群	
library/posix.html#large-file-support	35.1.1. ラージファイルのサポート	
library/posix.html#notable-module-contents	35.1.2. 注目すべきモジュールの内容	
library/pwd.html	35.2.pwd— パスワードデータベースへのアクセスを提供する	
library/spwd.html	35.3.spwd— シャドウパスワードデータベース	
library/grp.html	35.4.grp— グループデータベースへのアクセス	
library/crypt.html	35.5.crypt— Unix パスワードをチェックするための関数	
library/crypt.html#hashing-methods	35.5.1. ハッシュ化方式	
library/crypt.html#module-attributes	35.5.2. モジュール属性	
library/crypt.html#module-functions	35.5.3. モジュール関数	
library/crypt.html#examples	35.5.4. 使用例	
library/termios.html	35.6.termios— POSIX スタイルの端末制御	
library/termios.html#example	35.6.1. 使用例	
library/tty.html	35.7.tty— 端末制御のための関数群	
library/pty.html	35.8.pty— 擬似端末ユーティリティ	
library/pty.html#example	35.8.1. 使用例	
library/fcntl.html	35.9.fcntl—fcntlおよびioctlシステムコール	
library/pipes.html	35.10.pipes— シェルパイプラインへのインタフェース	
library/pipes.html#template-objects	35.10.1. テンプレートオブジェクト	
library/resource.html	35.11.resource— リソース使用状態の情報	
library/resource.html#resource-limits	35.11.1. リソースの制限	
library/resource.html#resource-usage	35.11.2. リソースの使用状態	
library/nis.html	35.12.nis— Sun の NIS (Yellow Pages) へのインタフェース	
library/syslog.html	35.13.syslog— Unix syslog ライブラリルーチン群	
library/syslog.html#examples	35.13.1. 使用例	
library/syslog.html#simple-example	35.13.1.1. シンプルな例	
library/superseded.html	36. 取って代わられたモジュール群	
library/optparse.html	36.1.optparse— コマンドラインオプション解析器	
library/optparse.html#background	36.1.1. 背景	
library/optparse.html#terminology	36.1.1.1. 用語集	
library/optparse.html#what-are-options-for	36.1.1.2. オプションとは何か	
library/optparse.html#what-are-positional-arguments-for	36.1.1.3. 固定引数とは何か	
library/optparse.html#tutorial	36.1.2. チュートリアル	
library/optparse.html#understanding-option-actions	36.1.2.1. オプション・アクションを理解する	
library/optparse.html#the-store-action	36.1.2.2. store アクション	
library/optparse.html#handling-boolean-flag-options	36.1.2.3. ブール値 (フラグ) オプションの処理	
library/optparse.html#other-actions	36.1.2.4. その他のアクション	
library/optparse.html#default-values	36.1.2.5. デフォルト値	
library/optparse.html#generating-help	36.1.2.6. ヘルプの生成	
library/optparse.html#grouping-options	36.1.2.6.1. オプションをグループ化する	
library/optparse.html#printing-a-version-string	36.1.2.7. バージョン番号の出力	
library/optparse.html#how-optparse-handles-errors	36.1.2.8.optparseのエラー処理法	
library/optparse.html#putting-it-all-together	36.1.2.9. 全てをつなぎ合わせる	
library/optparse.html#reference-guide	36.1.3. リファレンスガイド	
library/optparse.html#creating-the-parser	36.1.3.1. parserを作る	
library/optparse.html#populating-the-parser	36.1.3.2. パーザへのオプション追加	
library/optparse.html#defining-options	36.1.3.3. オプションの定義	
library/optparse.html#option-attributes	36.1.3.4. オプション属性	
library/optparse.html#standard-option-actions	36.1.3.5. 標準的なオプション・アクション	
library/optparse.html#standard-option-types	36.1.3.6. 標準のオプション型	
library/optparse.html#parsing-arguments	36.1.3.7. 引数を解析する	
library/optparse.html#querying-and-manipulating-your-option-parser	36.1.3.8. オプション解析器への問い合わせと操作	
library/optparse.html#conflicts-between-options	36.1.3.9. オプション間の衝突	
library/optparse.html#cleanup	36.1.3.10. クリーンアップ	
library/optparse.html#other-methods	36.1.3.11. その他のメソッド	
library/optparse.html#option-callbacks	36.1.4. オプション処理コールバック	
library/optparse.html#defining-a-callback-option	36.1.4.1. callbackオプションの定義	
library/optparse.html#how-callbacks-are-called	36.1.4.2. コールバック関数はどのように呼び出されるか	
library/optparse.html#raising-errors-in-a-callback	36.1.4.3. コールバック中で例外を送出する	
library/optparse.html#callback-example-1-trivial-callback	36.1.4.4. コールバックの例 1: ありふれたコールバック	
library/optparse.html#callback-example-2-check-option-order	36.1.4.5. コールバックの例 2: オプションの順番をチェックする	
library/optparse.html#callback-example-3-check-option-order-generalized	36.1.4.6. コールバックの例 3: オプションの順番をチェックする (汎用的)	
library/optparse.html#callback-example-4-check-arbitrary-condition	36.1.4.7. コールバックの例 4: 任意の条件をチェックする	
library/optparse.html#callback-example-5-fixed-arguments	36.1.4.8. コールバックの例5: 固定引数	
library/optparse.html#callback-example-6-variable-arguments	36.1.4.9. コールバックの例6: 可変個の引数	
library/optparse.html#extending-optparse	36.1.5.optparseの拡張	
library/optparse.html#adding-new-types	36.1.5.1. 新しい型の追加	
library/optparse.html#adding-new-actions	36.1.5.2. 新しいアクションの追加	
library/imp.html	36.2.imp—import内部へのアクセス	
library/imp.html#examples	36.2.1. 使用例	
library/undoc.html	37. ドキュメント化されていないモジュール	
library/undoc.html#platform-specific-modules	37.1. プラットフォーム固有のモジュール	
extending/index.html	Python インタプリタの拡張と埋め込み	
extending/index.html#recommended-third-party-tools	おすすめのサードパーティツール	
extending/index.html#creating-extensions-without-third-party-tools	サードパーティツールなしで拡張を作る	
extending/extending.html	1. C や C++ による Python の拡張	
extending/extending.html#a-simple-example	1.1. 簡単な例	
extending/extending.html#intermezzo-errors-and-exceptions	1.2. 幕間小話: エラーと例外	
extending/extending.html#back-to-the-example	1.3. 例に戻る	
extending/extending.html#the-module-s-method-table-and-initialization-function	1.4. モジュールのメソッドテーブルと初期化関数	
extending/extending.html#compilation-and-linkage	1.5. コンパイルとリンク	
extending/extending.html#calling-python-functions-from-c	1.6. C から Python 関数を呼び出す	
extending/extending.html#extracting-parameters-in-extension-functions	1.7. 拡張モジュール関数でのパラメタ展開	
extending/extending.html#keyword-parameters-for-extension-functions	1.8. 拡張モジュール関数のキーワードパラメタ	
extending/extending.html#building-arbitrary-values	1.9. 任意の値を構築する	
extending/extending.html#reference-counts	1.10. 参照カウント法	
extending/extending.html#reference-counting-in-python	1.10.1. Python における参照カウント法	
extending/extending.html#ownership-rules	1.10.2. 所有権にまつわる規則	
extending/extending.html#thin-ice	1.10.3. 薄氷	
extending/extending.html#null-pointers	1.10.4. NULL ポインタ	
extending/extending.html#writing-extensions-in-c	1.11. C++での拡張モジュール作成	
extending/extending.html#providing-a-c-api-for-an-extension-module	1.12. 拡張モジュールに C API を提供する	
extending/newtypes.html	2. 新しい型を定義する	
extending/newtypes.html#the-basics	2.1. 基本的なこと	
extending/newtypes.html#adding-data-and-methods-to-the-basic-example	2.1.1. 基本のサンプルにデータとメソッドを追加する	
extending/newtypes.html#providing-finer-control-over-data-attributes	2.1.2. データ属性をこまかく制御する	
extending/newtypes.html#supporting-cyclic-garbage-collection	2.1.3. 循環ガベージコレクションをサポートする	
extending/newtypes.html#subclassing-other-types	2.1.4. 他の型のサブクラスを作る	
extending/newtypes.html#type-methods	2.2. タイプメソッド	
extending/newtypes.html#finalization-and-de-allocation	2.2.1. ファイナライズとメモリ解放	
extending/newtypes.html#object-presentation	2.2.2. オブジェクト表現	
extending/newtypes.html#attribute-management	2.2.3. 属性を管理する	
extending/newtypes.html#generic-attribute-management	2.2.3.1. 総称的な属性を管理する	
extending/newtypes.html#type-specific-attribute-management	2.2.3.2. 特定の型に特化した属性の管理	
extending/newtypes.html#object-comparison	2.2.4. オブジェクトの比較	
extending/newtypes.html#abstract-protocol-support	2.2.5. 抽象的なプロトコルのサポート	
extending/newtypes.html#weak-reference-support	2.2.6. 弱参照(Weak Reference)のサポート	
extending/newtypes.html#more-suggestions	2.2.7. その他いろいろ	
extending/building.html	3. C および C++ 拡張のビルド	
extending/building.html#building-c-and-c-extensions-with-distutils	3.1. distutils による C および C++ 拡張モジュールのビルド	
extending/building.html#distributing-your-extension-modules	3.2. 拡張モジュールの配布	
extending/windows.html	4. Windows 上での C および C++ 拡張モジュールのビルド	
extending/windows.html#a-cookbook-approach	4.1. 型どおりのアプローチ	
extending/windows.html#differences-between-unix-and-windows	4.2. Unix と Windows の相違点	
extending/windows.html#using-dlls-in-practice	4.3. DLL 使用の実際	
extending/index.html#embedding-the-cpython-runtime-in-a-larger-application	大規模なアプリケーションへの Python ランライムの埋め込み	
extending/embedding.html	1. 他のアプリケーションへの Python の埋め込み	
extending/embedding.html#very-high-level-embedding	1.1. 高水準の埋め込み	
extending/embedding.html#beyond-very-high-level-embedding-an-overview	1.2. 超高水準の埋め込みから踏み出す: 概要	
extending/embedding.html#pure-embedding	1.3. 純粋な埋め込み	
extending/embedding.html#extending-embedded-python	1.4. 埋め込まれた Python の拡張	
extending/embedding.html#embedding-python-in-c	1.5. C++による Python の埋め込み	
extending/embedding.html#compiling-and-linking-under-unix-like-systems	1.6. Unix 系システムにおけるコンパイルとリンク	
c-api/index.html	Python/C API リファレンスマニュアル	
c-api/intro.html	はじめに	
c-api/intro.html#include-files	インクルードファイル	
c-api/intro.html#objects-types-and-reference-counts	オブジェクト、型および参照カウント	
c-api/intro.html#reference-counts	参照カウント法	
c-api/intro.html#reference-count-details	参照カウントの詳細	
c-api/intro.html#types	型	
c-api/intro.html#exceptions	例外	
c-api/intro.html#embedding-python	Python の埋め込み	
c-api/intro.html#debugging-builds	デバッグ版ビルド (Debugging Builds)	
c-api/stable.html	安定 ABI (Stable Appliction Binary Interface)	
c-api/veryhigh.html	超高水準レイヤ	
c-api/refcounting.html	参照カウント	
c-api/exceptions.html	例外処理	
c-api/exceptions.html#printing-and-clearing	出力とクリア	
c-api/exceptions.html#raising-exceptions	例外の送出	
c-api/exceptions.html#issuing-warnings	警告	
c-api/exceptions.html#querying-the-error-indicator	エラーインジケータの問い合わせ	
c-api/exceptions.html#signal-handling	シグナルハンドリング	
c-api/exceptions.html#exception-classes	例外クラス	
c-api/exceptions.html#exception-objects	例外オブジェクト	
c-api/exceptions.html#unicode-exception-objects	Unicode 例外オブジェクト	
c-api/exceptions.html#recursion-control	再帰の管理	
c-api/exceptions.html#standard-exceptions	標準例外	
c-api/exceptions.html#standard-warning-categories	Standard Warning Categories	
c-api/utilities.html	ユーティリティ	
c-api/sys.html	オペレーティングシステム関連のユーティリティ	
c-api/sys.html#system-functions	システム関数	
c-api/sys.html#process-control	プロセス制御	
c-api/import.html	モジュールのインポート	
c-api/marshal.html	データ整列化 (data marshalling) のサポート	
c-api/arg.html	引数の解釈と値の構築	
c-api/arg.html#parsing-arguments	引数を解析する	
c-api/arg.html#strings-and-buffers	文字列とバッファ	
c-api/arg.html#numbers	数	
c-api/arg.html#other-objects	その他のオブジェクト	
c-api/arg.html#api-functions	API 関数	
c-api/arg.html#building-values	値の構築	
c-api/conversion.html	文字列の変換と書式化	
c-api/reflection.html	リフレクション	
c-api/codec.html	codec レジストリとサポート関数	
c-api/codec.html#codec-lookup-api	コーデック検索API	
c-api/codec.html#registry-api-for-unicode-encoding-error-handlers	Unicode エラーハンドラ用レジストリ API	
c-api/abstract.html	抽象オブジェクトレイヤ (abstract objects layer)	
c-api/object.html	オブジェクトプロトコル (object protocol)	
c-api/number.html	数値型プロトコル (number protocol)	
c-api/sequence.html	シーケンス型プロトコル (sequence protocol)	
c-api/mapping.html	マップ型プロトコル (mapping protocol)	
c-api/iter.html	イテレータプロトコル (iterator protocol)	
c-api/buffer.html	バッファプロトコル (buffer Protocol)	
c-api/buffer.html#buffer-structure	buffer 構造体	
c-api/buffer.html#buffer-request-types	バッファリクエストのタイプ	
c-api/buffer.html#request-independent-fields	リクエストに依存しないフィールド	
c-api/buffer.html#readonly-format	readonly, format	
c-api/buffer.html#shape-strides-suboffsets	shape, strides, suboffsets	
c-api/buffer.html#contiguity-requests	隣接性のリクエスト	
c-api/buffer.html#compound-requests	複合リクエスト	
c-api/buffer.html#complex-arrays	複雑な配列	
c-api/buffer.html#numpy-style-shape-and-strides	NumPy スタイル: shape, strides	
c-api/buffer.html#pil-style-shape-strides-and-suboffsets	PIL スタイル: shape, strides, suboffsets	
c-api/buffer.html#buffer-related-functions	バッファ関連の関数	
c-api/objbuffer.html	古いバッファプロトコル	
c-api/concrete.html	具象オブジェクト (concrete object) レイヤ	
c-api/concrete.html#fundamental-objects	基本オブジェクト (fundamental object)	
c-api/type.html	型オブジェクト	
c-api/none.html	Noneオブジェクト	
c-api/concrete.html#numeric-objects	数値型オブジェクト (numeric object)	
c-api/long.html	整数型オブジェクト (integer object)	
c-api/bool.html	Boolean オブジェクト	
c-api/float.html	浮動小数点型オブジェクト (floating point object)	
c-api/complex.html	複素数オブジェクト (complex number object)	
c-api/complex.html#complex-numbers-as-c-structures	C 構造体としての複素数	
c-api/complex.html#complex-numbers-as-python-objects	Python オブジェクトとしての複素数型	
c-api/concrete.html#sequence-objects	シーケンスオブジェクト (sequence object)	
c-api/bytes.html	バイトオブジェクト	
c-api/bytearray.html	bytearray オブジェクト	
c-api/bytearray.html#type-check-macros	型チェックマクロ	
c-api/bytearray.html#direct-api-functions	ダイレクト API 関数	
c-api/bytearray.html#macros	マクロ	
c-api/unicode.html	Unicode オブジェクトと codec	
c-api/unicode.html#unicode-objects	Unicode オブジェクト	
c-api/unicode.html#unicode-type	Unicode 型	
c-api/unicode.html#unicode-character-properties	Unicode 文字プロパティ	
c-api/unicode.html#creating-and-accessing-unicode-strings	Unicode 文字列の生成とアクセス	
c-api/unicode.html#deprecated-py-unicode-apis	廃止予定の Py_UNICODE API群	
c-api/unicode.html#locale-encoding	ロケールエンコーディング	
c-api/unicode.html#file-system-encoding	ファイルシステムエンコーディング	
c-api/unicode.html#wchar-t-support	wchar_t サポート	
c-api/unicode.html#built-in-codecs	組み込み codec (built-in codec)	
c-api/unicode.html#generic-codecs	汎用 codec	
c-api/unicode.html#utf-8-codecs	UTF-8 Codecs	
c-api/unicode.html#utf-32-codecs	UTF-32 Codecs	
c-api/unicode.html#utf-16-codecs	UTF-16 Codecs	
c-api/unicode.html#utf-7-codecs	UTF-7 Codecs	
c-api/unicode.html#unicode-escape-codecs	Unicode-Escape Codecs	
c-api/unicode.html#raw-unicode-escape-codecs	Raw-Unicode-Escape Codecs	
c-api/unicode.html#latin-1-codecs	Latin-1 Codecs	
c-api/unicode.html#ascii-codecs	ASCII Codecs	
c-api/unicode.html#character-map-codecs	Character Map Codecs	
c-api/unicode.html#mbcs-codecs-for-windows	Windows 用の MBCS codec	
c-api/unicode.html#methods-slots	メソッドとスロット	
c-api/unicode.html#methods-and-slot-functions	メソッドおよびスロット関数 (slot function)	
c-api/tuple.html	タプルオブジェクト (tuple object)	
c-api/tuple.html#struct-sequence-objects	Struct Sequence オブジェクト	
c-api/list.html	リストオブジェクト	
c-api/concrete.html#container-objects	Container オブジェクト	
c-api/dict.html	辞書オブジェクト (dictionary object)	
c-api/set.html	Set オブジェクト	
c-api/concrete.html#function-objects	Function オブジェクト	
c-api/function.html	Function オブジェクト	
c-api/method.html	インスタンスメソッドオブジェクト(Instance Method Objects)	
c-api/method.html#method-objects	メソッドオブジェクト	
c-api/cell.html	セルオブジェクト (cell object)	
c-api/code.html	コードオブジェクト	
c-api/concrete.html#other-objects	その他のオブジェクト	
c-api/file.html	ファイルオブジェクト	
c-api/module.html	モジュールオブジェクト (module object)	
c-api/module.html#initializing-c-modules	Cモジュールの初期化	
c-api/module.html#single-phase-initialization	一段階初期化	
c-api/module.html#multi-phase-initialization	多段階初期化	
c-api/module.html#low-level-module-creation-functions	低水準モジュール作成関数	
c-api/module.html#support-functions	サポート関数	
c-api/module.html#module-lookup	モジュール検索	
c-api/iterator.html	イテレータオブジェクト (iterator object)	
c-api/descriptor.html	デスクリプタオブジェクト (descriptor object)	
c-api/slice.html	スライスオブジェクト (slice object)	
c-api/slice.html#ellipsis-object	Ellipsis Object	
c-api/memoryview.html	memoryview オブジェクト	
c-api/weakref.html	弱参照オブジェクト	
c-api/capsule.html	カプセル	
c-api/gen.html	ジェネレータオブジェクト	
c-api/coro.html	コルーチンオブジェクト	
c-api/datetime.html	DateTime オブジェクト	
c-api/init.html	初期化 (initialization)、終了処理 (finalization)、スレッド	
c-api/init.html#initializing-and-finalizing-the-interpreter	インタプリタの初期化と終了処理	
c-api/init.html#process-wide-parameters	プロセスワイドのパラメータ	
c-api/init.html#thread-state-and-the-global-interpreter-lock	スレッド状態 (thread state) とグローバルインタプリタロック (global interpreter lock)	
c-api/init.html#releasing-the-gil-from-extension-code	拡張コード内で GIL を解放する	
c-api/init.html#non-python-created-threads	Python 以外で作られたスレッド	
c-api/init.html#high-level-api	高レベルAPI	
c-api/init.html#low-level-api	低レベルAPI	
c-api/init.html#sub-interpreter-support	サブインタプリタサポート	
c-api/init.html#bugs-and-caveats	バグと注意事項	
c-api/init.html#asynchronous-notifications	非同期通知	
c-api/init.html#profiling-and-tracing	プロファイルとトレース (profiling and tracing)	
c-api/init.html#advanced-debugger-support	高度なデバッガサポート (advanced debugger support)	
c-api/memory.html	メモリ管理	
c-api/memory.html#overview	概要	
c-api/memory.html#raw-memory-interface	生メモリインタフェース	
c-api/memory.html#memory-interface	メモリインタフェース	
c-api/memory.html#customize-memory-allocators	メモリアロケータをカスタマイズする	
c-api/memory.html#the-pymalloc-allocator	pymalloc アロケータ	
c-api/memory.html#customize-pymalloc-arena-allocator	pymalloc アリーナアロケータのカスタマイズ	
c-api/memory.html#examples	使用例	
c-api/objimpl.html	オブジェクト実装サポート (object implementation support)	
c-api/allocation.html	オブジェクトをヒープ上にメモリ確保する	
c-api/structures.html	共通のオブジェクト構造体 (common object structure)	
c-api/typeobj.html	型オブジェクト	
c-api/typeobj.html#number-object-structures	数値オブジェクト構造体	
c-api/typeobj.html#mapping-object-structures	マップオブジェクト構造体	
c-api/typeobj.html#sequence-object-structures	シーケンスオブジェクト構造体	
c-api/typeobj.html#buffer-object-structures	バッファオブジェクト構造体 (buffer object structure)	
c-api/typeobj.html#async-object-structures	async オブジェクト構造体	
c-api/gcsupport.html	循環参照ガベージコレクションをサポートする	
c-api/apiabiversion.html	API と ABI のバージョニング	
distributing/index.html	Python モジュールの配布	
distributing/index.html#key-terms	重要用語集	
distributing/index.html#open-source-licensing-and-collaboration	オープンソースライセンス化とコラボレーション	
distributing/index.html#installing-the-tools	ツールのインストール	
distributing/index.html#reading-the-guide	ガイドを読む	
distributing/index.html#how-do-i	どうすればいいの...？	
distributing/index.html#choose-a-name-for-my-project	... 私のプロジェクトの名前はどう選べばいいですか?	
distributing/index.html#create-and-distribute-binary-extensions	... バイナリの拡張を作って配布したいのですが?	
installing/index.html	Python モジュールのインストール	
installing/index.html#key-terms	重要用語集	
installing/index.html#basic-usage	基本的な使い方	
installing/index.html#how-do-i	どうすればいいの...？	
installing/index.html#install-pip-in-versions-of-python-prior-to-python-3-4	... pip を 3.4 より前のバージョンの Python でインストールするには？	
installing/index.html#install-packages-just-for-the-current-user	... パッケージを現在のユーザ用のみにインストールするには？	
installing/index.html#install-scientific-python-packages	... 科学技術計算用の Python パッケージをインストールするには？	
installing/index.html#work-with-multiple-versions-of-python-installed-in-parallel	... インストールされた複数のバージョンの Python を並行して使うには？	
installing/index.html#common-installation-issues	よくあるインストールに関する問題	
installing/index.html#installing-into-the-system-python-on-linux	Linux で、システムの Python 内にインストールする	
installing/index.html#installing-binary-extensions	バイナリの拡張のインストール	
howto/index.html	Python HOWTO	
howto/pyporting.html	Python 2 から Python 3 への移植	
howto/pyporting.html#the-short-explanation	短い説明	
howto/pyporting.html#details	詳細	
howto/pyporting.html#drop-support-for-python-2-6-and-older	Python 2.6 とそれ以前のサポートを落とす	
howto/pyporting.html#make-sure-you-specify-the-proper-version-support-in-your-setup-py-file	あなたのsetup.pyファイルに、相応しいサポートバージョンを明記することを忘れないこと	
howto/pyporting.html#have-good-test-coverage	良いテストカバレッジを確保する。	
howto/pyporting.html#learn-the-differences-between-python-2-3	Python 2 と 3 の違いを学びましょう。	
howto/pyporting.html#update-your-code	コードをアップデートする。	
howto/pyporting.html#division	除算	
howto/pyporting.html#text-versus-binary-data	テキスト対バイナリデータ	
howto/pyporting.html#use-feature-detection-instead-of-version-detection	バージョン検出ではなく機能検出を使う	
howto/pyporting.html#prevent-compatibility-regressions	互換性オプション	
howto/pyporting.html#check-which-dependencies-block-your-transition	どの依存性があなたの移行を阻んでいるのかチェックする	
howto/pyporting.html#update-your-setup-py-file-to-denote-python-3-compatibility	あなたのsetup.pyファイルを更新して Python 3 互換を謳う	
howto/pyporting.html#use-continuous-integration-to-stay-compatible	継続的インテグレーションを使って互換性を維持し続ける。	
howto/pyporting.html#consider-using-optional-static-type-checking	Consider using optional static type checking	
howto/cporting.html	Python 3 への拡張モジュール移植	
howto/cporting.html#conditional-compilation	条件コンパイル	
howto/cporting.html#changes-to-object-apis	オブジェクト API の変更	
howto/cporting.html#str-unicode-unification	str/unicode の統合	
howto/cporting.html#long-int-unification	long/int の統合	
howto/cporting.html#module-initialization-and-state	モジュールの初期化と状態情報	
howto/cporting.html#cobject-replaced-with-capsule	CObject の Capsule への変更	
howto/cporting.html#other-options	その他のオプション	
howto/curses.html	Python で Curses プログラミング	
howto/curses.html#what-is-curses	curses ってなに?	
howto/curses.html#the-python-curses-module	Python の curses module	
howto/curses.html#starting-and-ending-a-curses-application	curses アプリケーションの起動と終了	
howto/curses.html#windows-and-pads	ウィンドウとパッド	
howto/curses.html#displaying-text	テキストの表示	
howto/curses.html#attributes-and-color	属性とカラー	
howto/curses.html#user-input	ユーザ入力	
howto/curses.html#for-more-information	より多くの情報	
howto/descriptor.html	デスクリプタ HowTo ガイド	
howto/descriptor.html#abstract	概要	
howto/descriptor.html#definition-and-introduction	定義と導入	
howto/descriptor.html#descriptor-protocol	デスクリプタプロトコル	
howto/descriptor.html#invoking-descriptors	デスクリプタの呼び出し	
howto/descriptor.html#descriptor-example	デスクリプタの例	
howto/descriptor.html#properties	プロパティ	
howto/descriptor.html#functions-and-methods	関数とメソッド	
howto/descriptor.html#static-methods-and-class-methods	静的メソッドとクラスメソッド	
howto/functional.html	関数型プログラミング HOWTO	
howto/functional.html#introduction	はじめに	
howto/functional.html#formal-provability	形式的証明可能性	
howto/functional.html#modularity	モジュラー性	
howto/functional.html#ease-of-debugging-and-testing	デバグやテストの簡単さ	
howto/functional.html#composability	結合性	
howto/functional.html#iterators	イテレータ (iterator)	
howto/functional.html#data-types-that-support-iterators	イテレータ対応のデータ型	
howto/functional.html#generator-expressions-and-list-comprehensions	ジェネレータ式とリスト内包表記	
howto/functional.html#generators	ジェネレータ (generator)	
howto/functional.html#passing-values-into-a-generator	ジェネレータに値を渡す	
howto/functional.html#built-in-functions	組み込み関数 (built-in function)	
howto/functional.html#the-itertools-module	itertools モジュール	
howto/functional.html#creating-new-iterators	新しいイテレータを作る	
howto/functional.html#calling-functions-on-elements	要素に対して関数を呼ぶ	
howto/functional.html#selecting-elements	要素を選択する	
howto/functional.html#combinatoric-functions	組合せ関数	
howto/functional.html#grouping-elements	要素をグループ分けする	
howto/functional.html#the-functools-module	functools モジュール	
howto/functional.html#the-operator-module	operator モジュール	
howto/functional.html#small-functions-and-the-lambda-expression	小さな関数とラムダ式	
howto/functional.html#revision-history-and-acknowledgements	更新履歴と謝辞	
howto/functional.html#references	参考資料	
howto/functional.html#general	一般論	
howto/functional.html#python-specific	Python 特有の話	
howto/functional.html#python-documentation	Python 文書	
howto/logging.html	Logging HOWTO	
howto/logging.html#basic-logging-tutorial	基本 logging チュートリアル	
howto/logging.html#when-to-use-logging	logging を使うとき	
howto/logging.html#a-simple-example	簡単な例	
howto/logging.html#logging-to-a-file	ファイルへの logging	
howto/logging.html#logging-from-multiple-modules	複数のモジュールからのロギング	
howto/logging.html#logging-variable-data	変数データのロギング	
howto/logging.html#changing-the-format-of-displayed-messages	表示されるメッセージのフォーマットの変更	
howto/logging.html#displaying-the-date-time-in-messages	メッセージ内での日付と時刻の表示	
howto/logging.html#next-steps	次のステップ	
howto/logging.html#advanced-logging-tutorial	上級ロギングチュートリアル	
howto/logging.html#logging-flow	Logging Flow	
howto/logging.html#loggers	ロガー	
howto/logging.html#handlers	ハンドラ	
howto/logging.html#formatters	フォーマッタ	
howto/logging.html#configuring-logging	ロギングの環境設定	
howto/logging.html#what-happens-if-no-configuration-is-provided	環境設定が与えられないとどうなるか	
howto/logging.html#configuring-logging-for-a-library	ライブラリのためのロギングの設定	
howto/logging.html#logging-levels	ロギングレベル	
howto/logging.html#custom-levels	カスタムレベル	
howto/logging.html#useful-handlers	便利なハンドラ	
howto/logging.html#exceptions-raised-during-logging	ログ記録中に発生する例外	
howto/logging.html#using-arbitrary-objects-as-messages	任意のオブジェクトをメッセージに使用する	
howto/logging.html#optimization	最適化	
howto/logging-cookbook.html	Logging クックブック	
howto/logging-cookbook.html#using-logging-in-multiple-modules	複数のモジュールで logging を使う	
howto/logging-cookbook.html#logging-from-multiple-threads	複数のスレッドからのロギング	
howto/logging-cookbook.html#multiple-handlers-and-formatters	複数の handler と formatter	
howto/logging-cookbook.html#logging-to-multiple-destinations	複数の出力先にログを出力する	
howto/logging-cookbook.html#configuration-server-example	設定サーバの例	
howto/logging-cookbook.html#dealing-with-handlers-that-block	ブロックする handler を扱う	
howto/logging-cookbook.html#sending-and-receiving-logging-events-across-a-network	ネットワーク越しの logging イベントの送受信	
howto/logging-cookbook.html#adding-contextual-information-to-your-logging-output	コンテキスト情報をログ記録出力に付加する	
howto/logging-cookbook.html#using-loggeradapters-to-impart-contextual-information	LoggerAdapter を使ったコンテキスト情報の伝達	
howto/logging-cookbook.html#using-objects-other-than-dicts-to-pass-contextual-information	コンテキスト情報を渡すために dict 以外のオブジェクトを使う	
howto/logging-cookbook.html#using-filters-to-impart-contextual-information	Filter を使ったコンテキスト情報の伝達	
howto/logging-cookbook.html#logging-to-a-single-file-from-multiple-processes	複数のプロセスからの単一ファイルへのログ記録	
howto/logging-cookbook.html#using-file-rotation	ファイルをローテートする	
howto/logging-cookbook.html#use-of-alternative-formatting-styles	別の format スタイルを利用する	
howto/logging-cookbook.html#customizing-logrecord	LogRecordのカスタマイズ	
howto/logging-cookbook.html#subclassing-queuehandler-a-zeromq-example	QueueHandler を継承する - ZeroMQ を使う例	
howto/logging-cookbook.html#subclassing-queuelistener-a-zeromq-example	QueueListener のサブクラスを作る - ZeroMQ を使う例	
howto/logging-cookbook.html#an-example-dictionary-based-configuration	辞書ベースで構成する例	
howto/logging-cookbook.html#using-a-rotator-and-namer-to-customize-log-rotation-processing	rotator と namer を使ってログローテートをカスタマイズする	
howto/logging-cookbook.html#a-more-elaborate-multiprocessing-example	より手の込んだ multiprocessing の例	
howto/logging-cookbook.html#inserting-a-bom-into-messages-sent-to-a-sysloghandler	SysLogHandler に送るメッセージに BOM を挿入する	
howto/logging-cookbook.html#implementing-structured-logging	構造化ログを実装する	
howto/logging-cookbook.html#customizing-handlers-with-dictconfig	handler をdictConfig()を使ってカスタマイズする	
howto/logging-cookbook.html#using-particular-formatting-styles-throughout-your-application	固有の書式化スタイルをアプリケーション全体で使う	
howto/logging-cookbook.html#using-logrecord-factories	LogRecord ファクトリを使う	
howto/logging-cookbook.html#using-custom-message-objects	カスタムなメッセージオブジェクトを使う	
howto/logging-cookbook.html#configuring-filters-with-dictconfig	filter をdictConfig()を使ってカスタマイズする	
howto/logging-cookbook.html#customized-exception-formatting	例外の書式化をカスタマイズする	
howto/logging-cookbook.html#speaking-logging-messages	ロギングメッセージを喋る	
howto/logging-cookbook.html#buffering-logging-messages-and-outputting-them-conditionally	ロギングメッセージをバッファリングし、条件に従って出力する	
howto/logging-cookbook.html#formatting-times-using-utc-gmt-via-configuration	設定によって時刻を UTC(GMT) で書式化する	
howto/logging-cookbook.html#using-a-context-manager-for-selective-logging	ロギングの選択にコンテキストマネージャを使う	
howto/regex.html	正規表現 HOWTO	
howto/regex.html#introduction	はじめに	
howto/regex.html#simple-patterns	単純なパターン	
howto/regex.html#matching-characters	文字のマッチング	
howto/regex.html#repeating-things	繰り返し	
howto/regex.html#using-regular-expressions	正規表現を使う	
howto/regex.html#compiling-regular-expressions	正規表現をコンパイルする	
howto/regex.html#the-backslash-plague	バックスラッシュ感染症	
howto/regex.html#performing-matches	マッチの実行	
howto/regex.html#module-level-functions	モジュールレベルの関数	
howto/regex.html#compilation-flags	コンパイルフラグ	
howto/regex.html#more-pattern-power	パターンの能力をさらに	
howto/regex.html#more-metacharacters	さらなる特殊文字	
howto/regex.html#grouping	グルーピング	
howto/regex.html#non-capturing-and-named-groups	取り出さないグループと名前つきグループ	
howto/regex.html#lookahead-assertions	先読みアサーション (Lookahead Assertions)	
howto/regex.html#modifying-strings	文字列を変更する	
howto/regex.html#splitting-strings	文字列の分割	
howto/regex.html#search-and-replace	検索と置換	
howto/regex.html#common-problems	よくある問題	
howto/regex.html#use-string-methods	文字列メソッドを利用する	
howto/regex.html#match-versus-search	match() 対 search()	
howto/regex.html#greedy-versus-non-greedy	貪欲 (greedy) 対非貪欲 (non-greedy)	
howto/regex.html#using-re-verbose	re.VERBOSE の利用	
howto/regex.html#feedback	フィードバック	
howto/sockets.html	ソケットプログラミング HOWTO	
howto/sockets.html#sockets	ソケット	
howto/sockets.html#history	歴史	
howto/sockets.html#creating-a-socket	ソケットの作成	
howto/sockets.html#ipc	IPC	
howto/sockets.html#using-a-socket	ソケットの利用	
howto/sockets.html#binary-data	バイナリデータ	
howto/sockets.html#disconnecting	切断	
howto/sockets.html#when-sockets-die	ソケットが死ぬと	
howto/sockets.html#non-blocking-sockets	ノンブロッキングソケット	
howto/sorting.html	ソート HOW TO	
howto/sorting.html#sorting-basics	ソートの基本	
howto/sorting.html#key-functions	Key 関数	
howto/sorting.html#operator-module-functions	operator モジュール関数	
howto/sorting.html#ascending-and-descending	昇順と降順	
howto/sorting.html#sort-stability-and-complex-sorts	ソートの安定性と複合的なソート	
howto/sorting.html#the-old-way-using-decorate-sort-undecorate	デコレート-ソート-アンデコレートを利用した古いやり方	
howto/sorting.html#the-old-way-using-the-cmp-parameter	cmpパラメータを利用した古い方法	
howto/sorting.html#odd-and-ends	残りいくつかとまとめ	
howto/unicode.html	Unicode HOWTO	
howto/unicode.html#introduction-to-unicode	Unicode 入門	
howto/unicode.html#history-of-character-codes	文字コードの歴史	
howto/unicode.html#definitions	定義	
howto/unicode.html#encodings	エンコーディング	
howto/unicode.html#references	参考資料	
howto/unicode.html#python-s-unicode-support	Python の Unicode サポート	
howto/unicode.html#the-string-type	文字列型	
howto/unicode.html#converting-to-bytes	バイト列への変換	
howto/unicode.html#unicode-literals-in-python-source-code	Python ソースコード内の Unicode リテラル	
howto/unicode.html#unicode-properties	Unicode プロパティ	
howto/unicode.html#unicode-regular-expressions	Unicode 正規表現	
howto/unicode.html#id2	参考資料	
howto/unicode.html#reading-and-writing-unicode-data	Unicode データを読み書きする	
howto/unicode.html#unicode-filenames	Unicode ファイル名	
howto/unicode.html#tips-for-writing-unicode-aware-programs	Unicode 対応のプログラムを書くための Tips	
howto/unicode.html#converting-between-file-encodings	ファイルエンコーディングの変換	
howto/unicode.html#files-in-an-unknown-encoding	不明なエンコーディングのファイル	
howto/unicode.html#id3	参考資料	
howto/unicode.html#acknowledgements	謝辞	
howto/urllib2.html	urllib パッケージを使ってインターネット上のリソースを取得するには	
howto/urllib2.html#introduction	はじめに	
howto/urllib2.html#fetching-urls	URL を取得する	
howto/urllib2.html#data	データ	
howto/urllib2.html#headers	ヘッダ	
howto/urllib2.html#handling-exceptions	例外を処理する	
howto/urllib2.html#urlerror	URLError	
howto/urllib2.html#httperror	HTTPError	
howto/urllib2.html#error-codes	エラーコード	
howto/urllib2.html#wrapping-it-up	エラーをラップする	
howto/urllib2.html#number-1	その1	
howto/urllib2.html#number-2	その2	
howto/urllib2.html#info-and-geturl	info と geturl	
howto/urllib2.html#openers-and-handlers	Openers と Handlers	
howto/urllib2.html#id5	Basic 認証	
howto/urllib2.html#proxies	プロキシ	
howto/urllib2.html#sockets-and-layers	ソケットとレイヤー	
howto/urllib2.html#footnotes	脚注	
howto/argparse.html	Argparse チュートリアル	
howto/argparse.html#concepts	コンセプト	
howto/argparse.html#the-basics	基礎	
howto/argparse.html#introducing-positional-arguments	位置指定引数の導入	
howto/argparse.html#introducing-optional-arguments	Optional引数の導入	
howto/argparse.html#short-options	短いオプション	
howto/argparse.html#combining-positional-and-optional-arguments	位置指定引数とOptional引数の併用	
howto/argparse.html#getting-a-little-more-advanced	もうちょっとだけ学ぶ	
howto/argparse.html#conflicting-options	競合するオプション	
howto/argparse.html#conclusion	結び	
howto/ipaddress.html	ipaddressモジュールの紹介	
howto/ipaddress.html#creating-address-network-interface-objects	アドレス/ネットワーク/インターフェースオブジェクトの作成	
howto/ipaddress.html#a-note-on-ip-versions	IPバージョンについての注意	
howto/ipaddress.html#ip-host-addresses	IPホストアドレス	
howto/ipaddress.html#defining-networks	ネットワークを定義する	
howto/ipaddress.html#host-interfaces	ホストインタフェース	
howto/ipaddress.html#inspecting-address-network-interface-objects	アドレス/ネットワーク/インタフェースオブジェクト	
howto/ipaddress.html#networks-as-lists-of-addresses	アドレスのリストとしてのネットワーク	
howto/ipaddress.html#comparisons	比較	
howto/ipaddress.html#using-ip-addresses-with-other-modules	他のモジュールでIPアドレスを使用する	
howto/ipaddress.html#getting-more-detail-when-instance-creation-fails	インスタンスの生成に失敗した場合にさらに詳細を取得する	
howto/clinic.html	Argument Clinic How-To	
howto/clinic.html#the-goals-of-argument-clinic	Argument Clinic の目的	
howto/clinic.html#basic-concepts-and-usage	基本的な概念と使用法	
howto/clinic.html#converting-your-first-function	関数を変換してみよう	
howto/clinic.html#advanced-topics	高度なトピック	
howto/clinic.html#symbolic-default-values	シンボルのデフォルト値	
howto/clinic.html#renaming-the-c-functions-and-variables-generated-by-argument-clinic	Argument Clinic が生成した関数と変数をリネームする	
howto/clinic.html#converting-functions-using-pyarg-unpacktuple	PyArg_UnpackTuple による関数の変換	
howto/clinic.html#optional-groups	オプション群	
howto/clinic.html#using-real-argument-clinic-converters-instead-of-legacy-converters	Using real Argument Clinic converters, instead of “legacy converters”	
howto/clinic.html#py-buffer	Py_buffer	
howto/clinic.html#advanced-converters	Advanced converters	
howto/clinic.html#parameter-default-values	引数のデフォルト値	
howto/clinic.html#the-null-default-value	NULLデフォルト値	
howto/clinic.html#expressions-specified-as-default-values	デフォルト値として指定された式	
howto/clinic.html#using-a-return-converter	Using a return converter	
howto/clinic.html#cloning-existing-functions	既存関数の複製	
howto/clinic.html#calling-python-code	Python コードの呼び出し	
howto/clinic.html#using-a-self-converter	“self converter” の利用	
howto/clinic.html#writing-a-custom-converter	カスタムコンバータを書く	
howto/clinic.html#writing-a-custom-return-converter	カスタム return コンバータを書く	
howto/clinic.html#meth-o-and-meth-noargs	METH_O と METH_NOARGS	
howto/clinic.html#tp-new-and-tp-init-functions	tp_new と tp_init functions	
howto/clinic.html#changing-and-redirecting-clinic-s-output	Clinic 出力の変更とリダイレクト	
howto/clinic.html#the-ifdef-trick	#ifdef トリック	
howto/clinic.html#using-argument-clinic-in-python-files	Python ファイル内での Argument Clinic の利用	
howto/instrumentation.html	DTrace と SystemTap で CPython を測定する	
howto/instrumentation.html#enabling-the-static-markers	静的マーカーの有効化	
howto/instrumentation.html#static-dtrace-probes	静的 DTrace プローブ	
howto/instrumentation.html#static-systemtap-markers	静的 SystemTap マーカー	
howto/instrumentation.html#available-static-markers	利用可能な静的マーカー	
howto/instrumentation.html#systemtap-tapsets	SystemTap Tapset	
howto/instrumentation.html#examples	使用例	
faq/index.html	Python よくある質問	
faq/general.html	一般 Python FAQ	
faq/general.html#general-information	一般情報	
faq/general.html#python-in-the-real-world	現実世界での Python	
faq/programming.html	プログラミング FAQ	
faq/programming.html#general-questions	一般的な質問	
faq/programming.html#core-language	コア言語	
faq/programming.html#numbers-and-strings	数と文字列	
faq/programming.html#performance	性能	
faq/programming.html#sequences-tuples-lists	シーケンス(タプル/リスト)	
faq/programming.html#dictionaries	辞書型 (dictionary)	
faq/programming.html#objects	オブジェクト	
faq/programming.html#modules	モジュール (module)	
faq/design.html	デザインと歴史 FAQ	
faq/design.html#why-does-python-use-indentation-for-grouping-of-statements	Python はなぜ文のグループ化にインデントを使うのですか？	
faq/design.html#why-am-i-getting-strange-results-with-simple-arithmetic-operations	なぜ単純な算術演算が奇妙な結果になるのですか？	
faq/design.html#why-are-floating-point-calculations-so-inaccurate	なんで浮動小数点数の計算はこんなに不正確なんですか？	
faq/design.html#why-are-python-strings-immutable	なぜ Python の文字列はイミュータブルなのですか？	
faq/design.html#why-must-self-be-used-explicitly-in-method-definitions-and-calls	なぜメソッドの定義や呼び出しにおいて ‘self’ を明示しなければならないのですか？	
faq/design.html#why-can-t-i-use-an-assignment-in-an-expression	式中で代入ができないのはなぜですか？	
faq/design.html#why-does-python-use-methods-for-some-functionality-e-g-list-index-but-functions-for-other-e-g-len-list	Python にメソッドを使う機能 (list.index() 等) と関数を使う機能 (len(list) 等) があるのはなぜですか？	
faq/design.html#why-is-join-a-string-method-instead-of-a-list-or-tuple-method	join() がリストやタプルのメソッドではなく文字列のメソッドなのはなぜですか？	
faq/design.html#how-fast-are-exceptions	例外はどれくらい速いのですか？	
faq/design.html#why-isn-t-there-a-switch-or-case-statement-in-python	Python に switch や case 文がないのはなぜですか？	
faq/design.html#can-t-you-emulate-threads-in-the-interpreter-instead-of-relying-on-an-os-specific-thread-implementation	OS 特有のスレッド実装に依らずにインタプリタでスレッドをエミュレートすることはできないのですか？	
faq/design.html#why-can-t-lambda-expressions-contain-statements	なぜラムダ式は文を含むことができないのですか?	
faq/design.html#can-python-be-compiled-to-machine-code-c-or-some-other-language	Python は C やその他の言語のように機械語にコンパイルできますか？	
faq/design.html#how-does-python-manage-memory	Python はメモリをどのように管理するのですか？	
faq/design.html#why-doesn-t-cpython-use-a-more-traditional-garbage-collection-scheme	CPython はなぜ伝統的なガベージコレクションスキームを使わないのですか？	
faq/design.html#why-isn-t-all-memory-freed-when-cpython-exits	なぜ CPython の終了時にすべてのメモリが解放されるわけではないのですか？	
faq/design.html#why-are-there-separate-tuple-and-list-data-types	なぜタプルとリストという別のデータ型が用意されているのですか？	
faq/design.html#how-are-lists-implemented	リストはどのように実装されているのですか？	
faq/design.html#how-are-dictionaries-implemented	辞書はどのように実装されているのですか？	
faq/design.html#why-must-dictionary-keys-be-immutable	なぜ辞書のキーはイミュータブルでなくてはならないのですか？	
faq/design.html#why-doesn-t-list-sort-return-the-sorted-list	なぜ list.sort() はソートされたリストを返さないのですか？	
faq/design.html#how-do-you-specify-and-enforce-an-interface-spec-in-python	Python ではどのようにインタフェース仕様を特定し適用するのですか？	
faq/design.html#why-is-there-no-goto	なぜ goto が無いのですか？	
faq/design.html#why-can-t-raw-strings-r-strings-end-with-a-backslash	なぜ raw 文字列 (r-strings) はバックスラッシュで終わってはいけないのですか？	
faq/design.html#why-doesn-t-python-have-a-with-statement-for-attribute-assignments	属性の代入に “with” 文が使えないのはなぜですか？	
faq/design.html#why-are-colons-required-for-the-if-while-def-class-statements	if/while/def/class 文にコロンが必要なのはなぜですか？	
faq/design.html#why-does-python-allow-commas-at-the-end-of-lists-and-tuples	なぜ Python ではリストやタプルの最後にカンマがあっても良いのですか？	
faq/library.html	ライブラリと拡張 FAQ	
faq/library.html#general-library-questions	ライブラリ一般の質問	
faq/library.html#common-tasks	よくある作業	
faq/library.html#threads	スレッド	
faq/library.html#input-and-output	入力と出力	
faq/library.html#network-internet-programming	ネットワーク/インターネットプログラミング	
faq/library.html#databases	データベース	
faq/library.html#mathematics-and-numerics	数学と数	
faq/extending.html	拡張と埋め込み FAQ	
faq/extending.html#can-i-create-my-own-functions-in-c	C で独自の関数を作ることはできますか？	
faq/extending.html#id1	C++ で独自の関数を作ることはできますか？	
faq/extending.html#writing-c-is-hard-are-there-any-alternatives	C を書くのは大変です。他の方法はありませんか？	
faq/extending.html#how-can-i-execute-arbitrary-python-statements-from-c	C から任意の Python 文を実行するにはどうしますか？	
faq/extending.html#how-can-i-evaluate-an-arbitrary-python-expression-from-c	C から任意の Python 式を評価するにはどうしますか？	
faq/extending.html#how-do-i-extract-c-values-from-a-python-object	Python オブジェクトから C の値を取り出すにはどうしますか？	
faq/extending.html#how-do-i-use-py-buildvalue-to-create-a-tuple-of-arbitrary-length	Py_BuildValue() で任意長のタプルを作るにはどうしますか？	
faq/extending.html#how-do-i-call-an-object-s-method-from-c	C からオブジェクトのメソッドを呼び出すにはどうしますか？	
faq/extending.html#how-do-i-catch-the-output-from-pyerr-print-or-anything-that-prints-to-stdout-stderr	PyErr_Print() (その他 stdout/stderr に印字するもの) からの出力を受け取るにはどうしますか？	
faq/extending.html#how-do-i-access-a-module-written-in-python-from-c	C から Python で書かれたモジュールにアクセスするにはどうしますか？	
faq/extending.html#how-do-i-interface-to-c-objects-from-python	Python から C++ へインタフェースするにはどうしますか？	
faq/extending.html#i-added-a-module-using-the-setup-file-and-the-make-fails-why	セットアップファイルでモジュールを追加しようとしたらメイクに失敗しました。なぜですか？	
faq/extending.html#how-do-i-debug-an-extension	拡張をデバッグするにはどうしますか？	
faq/extending.html#i-want-to-compile-a-python-module-on-my-linux-system-but-some-files-are-missing-why	Linux システムで Python モジュールをコンパイルしたいのですが、見つからないファイルがあります。なぜですか？	
faq/extending.html#how-do-i-tell-incomplete-input-from-invalid-input	“不完全 (incomplete) な入力” を “不適切 (invalid) な入力” から区別するにはどうしますか？	
faq/extending.html#how-do-i-find-undefined-g-symbols-builtin-new-or-pure-virtual	未定義の g++ シンボル __builtin_new や __pure_virtual を見つけるにはどうしますか？	
faq/extending.html#can-i-create-an-object-class-with-some-methods-implemented-in-c-and-others-in-python-e-g-through-inheritance	メソッドのいくつかは C で、その他は Python で実装されたオブジェクトクラスを (継承などで) 作ることはできますか？	
faq/windows.html	Windows 上の Python FAQ	
faq/windows.html#how-do-i-run-a-python-program-under-windows	Python プログラムを Windows で動かすにはどうしますか？	
faq/windows.html#how-do-i-make-python-scripts-executable	Python スクリプトを実行可能にするにはどうしますか？	
faq/windows.html#why-does-python-sometimes-take-so-long-to-start	Python の起動に時間がかかることがあるのはなぜですか？	
faq/windows.html#how-do-i-make-an-executable-from-a-python-script	どうすれば Python スクリプトを EXE に出来ますか?	
faq/windows.html#is-a-pyd-file-the-same-as-a-dll	*.pydファイルは DLL と同じですか？	
faq/windows.html#how-can-i-embed-python-into-a-windows-application	Python を Windows アプリケーションに埋め込むにはどうしたらいいですか？	
faq/windows.html#how-do-i-keep-editors-from-inserting-tabs-into-my-python-source	エディタが Python ソースにタブを勝手に挿入しないようにするにはどうしますか？	
faq/windows.html#how-do-i-check-for-a-keypress-without-blocking	ブロックすることなく押鍵を検出するにはどうしますか？	
faq/windows.html#how-do-i-emulate-os-kill-in-windows	os.kill() を Windows で模倣するにはどうしますか？	
faq/windows.html#how-do-i-extract-the-downloaded-documentation-on-windows	ダウンロードされたドキュメントを Windows 上で展開するにはどうしますか？	
faq/gui.html	グラフィックユーザインタフェース FAQ	
faq/gui.html#general-gui-questions	一般的な GUI の質問	
faq/gui.html#what-platform-independent-gui-toolkits-exist-for-python	Python のプラットフォーム非依存の GUI ツールキットには何がありますか？	
faq/gui.html#what-platform-specific-gui-toolkits-exist-for-python	Python のプラットフォーム固有の GUI ツールキットには何がありますか？	
faq/gui.html#tkinter-questions	Tkinter の質問	
faq/installed.html	“なぜ Python が私のコンピュータにインストールされているのですか？” FAQ	
faq/installed.html#what-is-python	Python とは何ですか？	
faq/installed.html#why-is-python-installed-on-my-machine	なぜ Python が私のマシンにインストールされているのですか？	
faq/installed.html#can-i-delete-python	Python を削除してもいいですか？	
glossary.html	用語集	
about.html	このドキュメントについて	
about.html#contributors-to-the-python-documentation	Pythonドキュメント 貢献者	
bugs.html	バグへの対処	
bugs.html#documentation-bugs	ドキュメントの不備	
bugs.html#using-the-python-issue-tracker	Python の課題管理システムを使う	
bugs.html#getting-started-contributing-to-python-yourself	Python への貢献をはじめる	
copyright.html	Copyright	
license.html	歴史とライセンス	
license.html#history-of-the-software	Python の歴史	
license.html#terms-and-conditions-for-accessing-or-otherwise-using-python	Terms and conditions for accessing or otherwise using Python	
license.html#psf-license-agreement-for-python-release	PSF LICENSE AGREEMENT FOR PYTHON 3.6.1	
license.html#beopen-com-license-agreement-for-python-2-0	BEOPEN.COM LICENSE AGREEMENT FOR PYTHON 2.0	
license.html#cnri-license-agreement-for-python-1-6-1	CNRI LICENSE AGREEMENT FOR PYTHON 1.6.1	
license.html#cwi-license-agreement-for-python-0-9-0-through-1-2	CWI LICENSE AGREEMENT FOR PYTHON 0.9.0 THROUGH 1.2	
license.html#licenses-and-acknowledgements-for-incorporated-software	Licenses and Acknowledgements for Incorporated Software	
license.html#mersenne-twister	Mersenne Twister	
license.html#sockets	ソケット	
license.html#floating-point-exception-control	Floating point exception control	
license.html#asynchronous-socket-services	Asynchronous socket services	
license.html#cookie-management	Cookie management	
license.html#execution-tracing	Execution tracing	
license.html#uuencode-and-uudecode-functions	UUencode and UUdecode functions	
license.html#xml-remote-procedure-calls	XML Remote Procedure Calls	
license.html#test-epoll	test_epoll	
license.html#select-kqueue	Select kqueue	
license.html#siphash24	SipHash24	
license.html#strtod-and-dtoa	strtod と dtoa	
license.html#openssl	OpenSSL	
license.html#expat	expat	
license.html#libffi	libffi	
license.html#zlib	zlib	
license.html#cfuhash	cfuhash	
license.html#libmpdec	libmpdec	
